(window.webpackJsonp=window.webpackJsonp||[]).push([[34],{173:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return l})),n.d(t,"metadata",(function(){return i})),n.d(t,"rightToc",(function(){return p})),n.d(t,"default",(function(){return c}));var a=n(1),o=n(9),r=(n(0),n(231)),l={title:"Optional type (Java)",description:"How and when to use the Java Optional type",last_modified:new Date("2020-05-30T13:54:15.000Z"),sidebar_label:"Optional type"},i={id:"java/optional",title:"Optional type (Java)",description:"How and when to use the Java Optional type",source:"@site/docs\\java\\optional.md",permalink:"/java/optional",sidebar_label:"Optional type",sidebar:"docs",previous:{title:"Lambda expressions (Java)",permalink:"/java/lambda-expressions"},next:{title:"Overloading, overriding and method hiding (Java)",permalink:"/java/overloading-overriding-method-hiding"}},p=[{value:"Basic idea",id:"basic-idea",children:[]},{value:"How to use Optional values",id:"how-to-use-optional-values",children:[]},{value:"How not to use Optional values",id:"how-not-to-use-optional-values",children:[]},{value:"Creating Optional values",id:"creating-optional-values",children:[]},{value:"Turning an Optional into a Stream",id:"turning-an-optional-into-a-stream",children:[]},{value:"Resources",id:"resources",children:[]}],s={rightToc:p};function c(e){var t=e.components,n=Object(o.a)(e,["components"]);return Object(r.b)("wrapper",Object(a.a)({},s,n,{components:t,mdxType:"MDXLayout"}),Object(r.b)("p",null,"How and when to use the Java Optional type"),Object(r.b)("h2",{id:"basic-idea"},"Basic idea"),Object(r.b)("p",null,Object(r.b)("inlineCode",{parentName:"p"},"Optional<T>"),": a wrapper for either an object of type ",Object(r.b)("inlineCode",{parentName:"p"},"T")," or no object"),Object(r.b)("p",null,"Goal: provide safer alternative to returning either an object of type ",Object(r.b)("inlineCode",{parentName:"p"},"T")," or ",Object(r.b)("inlineCode",{parentName:"p"},"null")),Object(r.b)("p",null,"Main use case: return type for methods that do not necessarily produce a value"),Object(r.b)("p",null,"Note: Method parameters of type ",Object(r.b)("inlineCode",{parentName:"p"},"Optional")," are not recommended because this makes it awkward to call the method. For implementing methods with optional parameters, method overloading is generally considered a better option. See also ",Object(r.b)("a",{href:"https://stackoverflow.com/a/39005452",target:"_blank",rel:"nofollow noopener noreferrer"},"Why should Java 8's Optional not be used in arguments ",Object(r.b)("svg",{class:"embedded-fa-icon"},Object(r.b)("use",{href:"#external-link-alt"})))),Object(r.b)("h2",{id:"how-to-use-optional-values"},"How to use Optional values"),Object(r.b)("p",null,"Basically, two sensible options:"),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},"use a method that produces an alternative value if the Optional is empty"),Object(r.b)("li",{parentName:"ul"},"use a method that only consumes the value if the Optional is not empty")),Object(r.b)("p",null,"Examples first option:"),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-java"}),'String result = optionalString.orElse("");\nString result = optionalString.orElseGet(functionReturningString);\nString result = optionalString.orElseThrow(IllegalStateException::new);\n')),Object(r.b)("p",null,"Examples second option:"),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-java"}),'optionalString.ifPresent(processString); // returns nothing\n\noptionalString.ifPresentOrElse(\n        System.out::println, \n        () -> System.out.println("Empty!")); // returns nothing\n\n// Optional containing the length of the value (if it was present) and empty otherwise\noptionalString.map(String::length)\n    \noptionalString.flatMap(functionReturningOptionalInteger) // Optional<Integer>\n')),Object(r.b)("h2",{id:"how-not-to-use-optional-values"},"How not to use Optional values"),Object(r.b)("p",null,"When used in the wrong way, using ",Object(r.b)("inlineCode",{parentName:"p"},"Optional")," is not safer or easier than using null"),Object(r.b)("p",null,"Examples:"),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-java"}),"nullableString.length() // length throws NullPointerException\noptionalString.get().length() // get throws NoSuchElementException\n\nif (nullableString != null) {\n    length = nullableString.length()\n}\n\nif (optionalString.isPresent()) {\n    length = optionalString.get().length()\n}\n")),Object(r.b)("h2",{id:"creating-optional-values"},"Creating Optional values"),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-java"}),'Optional<String> optionalString = Optional.of("test"); // throws if argument null\nOptional<String> optionalString = Optional.ofNullable(nullableString);\nOptional<String> optionalString = Optional.empty();\n')),Object(r.b)("h2",{id:"turning-an-optional-into-a-stream"},"Turning an Optional into a Stream"),Object(r.b)("p",null,"Conceptually, you can compare an Optional to a stream with either zero or one elements. The ",Object(r.b)("inlineCode",{parentName:"p"},".stream()")," method follows that principle, yielding a stream with zero elements if the Optional is empty and a stream with one element if the optional has a value"),Object(r.b)("p",null,"Example use case:"),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-java"}),"idsStream\n        .map(Users::lookup) // Users.lookUp returns an Optional<User>\n        .flatMap(Optional::stream)\n")),Object(r.b)("p",null,"Note: if you call a method that returns either a value or null, you can apply the samle principle using ",Object(r.b)("inlineCode",{parentName:"p"},"Stream.ofNullable"),":"),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-java"}),"idsStream\n        .map(Users::lookup) // Users.lookUp returns a User object or null\n        .flatMap(Stream::ofNullable)\n")),Object(r.b)("h2",{id:"resources"},"Resources"),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},"Core Java SE 9 for the Impatient (book by Cay S. Horstmann)"),Object(r.b)("li",{parentName:"ul"},Object(r.b)("a",{href:"https://stackoverflow.com/a/39005452",target:"_blank",rel:"nofollow noopener noreferrer"},"Why should Java 8's Optional not be used in arguments ",Object(r.b)("svg",{class:"embedded-fa-icon"},Object(r.b)("use",{href:"#external-link-alt"}))))))}c.isMDXComponent=!0},231:function(e,t,n){"use strict";n.d(t,"a",(function(){return u})),n.d(t,"b",(function(){return d}));var a=n(0),o=n.n(a);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function l(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?l(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):l(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function p(e,t){if(null==e)return{};var n,a,o=function(e,t){if(null==e)return{};var n,a,o={},r=Object.keys(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var s=o.a.createContext({}),c=function(e){var t=o.a.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):i({},t,{},e)),n},u=function(e){var t=c(e.components);return o.a.createElement(s.Provider,{value:t},e.children)},b={inlineCode:"code",wrapper:function(e){var t=e.children;return o.a.createElement(o.a.Fragment,{},t)}},O=Object(a.forwardRef)((function(e,t){var n=e.components,a=e.mdxType,r=e.originalType,l=e.parentName,s=p(e,["components","mdxType","originalType","parentName"]),u=c(n),O=a,d=u["".concat(l,".").concat(O)]||u[O]||b[O]||r;return n?o.a.createElement(d,i({ref:t},s,{components:n})):o.a.createElement(d,i({ref:t},s))}));function d(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var r=n.length,l=new Array(r);l[0]=O;var i={};for(var p in t)hasOwnProperty.call(t,p)&&(i[p]=t[p]);i.originalType=e,i.mdxType="string"==typeof e?e:a,l[1]=i;for(var s=2;s<r;s++)l[s]=n[s];return o.a.createElement.apply(null,l)}return o.a.createElement.apply(null,n)}O.displayName="MDXCreateElement"}}]);