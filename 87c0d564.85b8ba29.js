(window.webpackJsonp=window.webpackJsonp||[]).push([[56],{195:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return o})),n.d(t,"metadata",(function(){return l})),n.d(t,"rightToc",(function(){return c})),n.d(t,"default",(function(){return b}));var r=n(1),a=n(9),i=(n(0),n(232)),o={title:"Testing after production",description:"Why testing in production (rather than before deploying) could make sense in some cases",last_modified:new Date("2022-01-02T14:25:32.148Z")},l={id:"processes-techniques/testing-details/testing-after-production",title:"Testing after production",description:"Why testing in production (rather than before deploying) could make sense in some cases",source:"@site/docs\\processes-techniques\\testing-details\\testing-after-production.md",permalink:"/interview-prep/processes-techniques/testing-details/testing-after-production",sidebar:"docs",previous:{title:"Trunk Based Development",permalink:"/interview-prep/processes-techniques/trunk-based-development"},next:{title:"Testing patterns",permalink:"/interview-prep/processes-techniques/testing-details/testing-patterns"}},c=[{value:"Basic idea",id:"basic-idea",children:[]},{value:"Mean time between failures versus mean time to repair",id:"mean-time-between-failures-versus-mean-time-to-repair",children:[]},{value:"Separating deployment from release",id:"separating-deployment-from-release",children:[]},{value:"Monitoring and logging",id:"monitoring-and-logging",children:[]},{value:"Synthetic monitoring",id:"synthetic-monitoring",children:[]},{value:"Resources",id:"resources",children:[]}],s={rightToc:c};function b(e){var t=e.components,n=Object(a.a)(e,["components"]);return Object(i.b)("wrapper",Object(r.a)({},s,n,{components:t,mdxType:"MDXLayout"}),Object(i.b)("p",null,"Why testing in production (rather than before deploying) could make sense in some cases"),Object(i.b)("h2",{id:"basic-idea"},"Basic idea"),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},"Tests will never be perfect, we can't catch everything! Impossible to reduce chance of failure to zero"),Object(i.b)("li",{parentName:"ul"},"It might be impractical and not worth the effort to test certain things before putting them in production")),Object(i.b)("h2",{id:"mean-time-between-failures-versus-mean-time-to-repair"},"Mean time between failures versus mean time to repair"),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},"Mean time between failures (MTBF): indication of how often issues make it to production"),Object(i.b)("li",{parentName:"ul"},"Mean time to repair (MTTR): indication of how long it takes you to detect and fix such issues")),Object(i.b)("p",null,"Tradeoff MTBF versus MTTR:"),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},"Sometimes, it's more efficient to spend effort on getting better at detecting and fixing issues in production than on adding more automated tests"),Object(i.b)("li",{parentName:"ul"},"Best tradeoff depends on your organization"),Object(i.b)("li",{parentName:"ul"},"Do not completely abandon one in favor of the other",Object(i.b)("ul",{parentName:"li"},Object(i.b)("li",{parentName:"ul"},"It's probably not a good idea to just throw stuff into production without any level of testing"),Object(i.b)("li",{parentName:"ul"},"Even with great tests, you need to be prepared for a bug popping up in production")))),Object(i.b)("h2",{id:"separating-deployment-from-release"},"Separating deployment from release"),Object(i.b)("p",null,"Basic idea: after deploying something, don't immediately direct full production load to it"),Object(i.b)("p",null,"Useful techniques:"),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},Object(i.b)("strong",{parentName:"li"},"Smoke tests"),":",Object(i.b)("ul",{parentName:"li"},Object(i.b)("li",{parentName:"ul"},"Tests designed to check that deployment was successful and software runs properly in current environment"),Object(i.b)("li",{parentName:"ul"},"Should ideally be run automatically on deploy"))),Object(i.b)("li",{parentName:"ul"},Object(i.b)("strong",{parentName:"li"},"Blue/green deployment"),":",Object(i.b)("ul",{parentName:"li"},Object(i.b)("li",{parentName:"ul"},"Run old and new next to each other"),Object(i.b)("li",{parentName:"ul"},"New can get smoke tested while old still handles production load, then we can switch"),Object(i.b)("li",{parentName:"ul"},"After switching to new, we can quickly switch back if necessary"))),Object(i.b)("li",{parentName:"ul"},Object(i.b)("strong",{parentName:"li"},"Canary releasing"),":",Object(i.b)("ul",{parentName:"li"},Object(i.b)("li",{parentName:"ul"},"Keep old and new next to each other for longer time"),Object(i.b)("li",{parentName:"ul"},"Only direct a fraction of production load to new, increase as confidence increases"))),Object(i.b)("li",{parentName:"ul"},Object(i.b)("strong",{parentName:"li"},"Branch By Abstraction")," and ",Object(i.b)("strong",{parentName:"li"},"application strangulation")," (see ",Object(i.b)("a",Object(r.a)({parentName:"li"},{href:"/processes-techniques/branch-by-abstraction-application-strangulation"}),"Branch By Abstraction and application strangulation"),"):",Object(i.b)("ul",{parentName:"li"},Object(i.b)("li",{parentName:"ul"},"Techniques to gradually migrate to new code or even new system"),Object(i.b)("li",{parentName:"ul"},"Possible to direct production traffic to existing code/system but also send a copy of it to new code/system to check for differences in behavior")))),Object(i.b)("h2",{id:"monitoring-and-logging"},"Monitoring and logging"),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},"Monitor CPU, memory, ..."),Object(i.b)("li",{parentName:"ul"},"Monitor application itself: response time, number of errors returned to client, number of submitted forms, ..."),Object(i.b)("li",{parentName:"ul"},"Collect logs about what the system is doing",Object(i.b)("ul",{parentName:"li"},Object(i.b)("li",{parentName:"ul"},"It's especially important to log any errors that happen"))),Object(i.b)("li",{parentName:"ul"},"Set up dashboards so people can quickly get an idea of the system's state"),Object(i.b)("li",{parentName:"ul"},"Set up alerts based on resource use, response time, error rates, 500 responses, ...",Object(i.b)("ul",{parentName:"li"},Object(i.b)("li",{parentName:"ul"},"Alert early enough so team can act before things really get bad"),Object(i.b)("li",{parentName:"ul"},"Watch your signal-to-noise ratio, so people don't start ignoring alerts")))),Object(i.b)("h2",{id:"synthetic-monitoring"},"Synthetic monitoring"),Object(i.b)("p",null,"(also called ",Object(i.b)("strong",{parentName:"p"},"semantic monitoring"),")"),Object(i.b)("p",null,"Basic idea: monitor health of system as whole by running end-to-end scenarios against it"),Object(i.b)("p",null,"Approach:"),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},"Define important scenarios or user journeys"),Object(i.b)("li",{parentName:"ul"},"Write tests for them (often make sense to start from end-to-end tests)"),Object(i.b)("li",{parentName:"ul"},"Periodically run these against production",Object(i.b)("ul",{parentName:"li"},Object(i.b)("li",{parentName:"ul"},"Depending on importance of scenario or journey, failure can trigger on-call alert")))),Object(i.b)("p",null,"Benefits/challenges:"),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},"Often way better at finding out if something's wrong than lower-level metrics",Object(i.b)("ul",{parentName:"li"},Object(i.b)("li",{parentName:"ul"},"Still, you'll likely need lower-level metrics to help you find the exact location of the issue"))),Object(i.b)("li",{parentName:"ul"},"Make sure it doesn't affect actual production customers!")),Object(i.b)("h2",{id:"resources"},"Resources"),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},"Martin Fowler's ",Object(i.b)("a",{href:"https://martinfowler.com/testing/",target:"_blank",rel:"nofollow noopener noreferrer"},"Software Testing Guide ",Object(i.b)("svg",{class:"embedded-fa-icon"},Object(i.b)("use",{href:"#external-link-alt"}))),":",Object(i.b)("ul",{parentName:"li"},Object(i.b)("li",{parentName:"ul"},Object(i.b)("a",{href:"https://martinfowler.com/articles/qa-in-production.html",target:"_blank",rel:"nofollow noopener noreferrer"},"QA in Production ",Object(i.b)("svg",{class:"embedded-fa-icon"},Object(i.b)("use",{href:"#external-link-alt"})))),Object(i.b)("li",{parentName:"ul"},Object(i.b)("a",{href:"https://martinfowler.com/bliki/SyntheticMonitoring.html",target:"_blank",rel:"nofollow noopener noreferrer"},"Synthetic Monitoring ",Object(i.b)("svg",{class:"embedded-fa-icon"},Object(i.b)("use",{href:"#external-link-alt"})))))),Object(i.b)("li",{parentName:"ul"},"Building Microservices (book by Sam Newman)")))}b.isMDXComponent=!0},232:function(e,t,n){"use strict";n.d(t,"a",(function(){return u})),n.d(t,"b",(function(){return d}));var r=n(0),a=n.n(r);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function c(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var s=a.a.createContext({}),b=function(e){var t=a.a.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):l({},t,{},e)),n},u=function(e){var t=b(e.components);return a.a.createElement(s.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return a.a.createElement(a.a.Fragment,{},t)}},m=Object(r.forwardRef)((function(e,t){var n=e.components,r=e.mdxType,i=e.originalType,o=e.parentName,s=c(e,["components","mdxType","originalType","parentName"]),u=b(n),m=r,d=u["".concat(o,".").concat(m)]||u[m]||p[m]||i;return n?a.a.createElement(d,l({ref:t},s,{components:n})):a.a.createElement(d,l({ref:t},s))}));function d(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=n.length,o=new Array(i);o[0]=m;var l={};for(var c in t)hasOwnProperty.call(t,c)&&(l[c]=t[c]);l.originalType=e,l.mdxType="string"==typeof e?e:r,o[1]=l;for(var s=2;s<i;s++)o[s]=n[s];return a.a.createElement.apply(null,o)}return a.a.createElement.apply(null,n)}m.displayName="MDXCreateElement"}}]);