(window.webpackJsonp=window.webpackJsonp||[]).push([[68],{207:function(e,t,a){"use strict";a.r(t),a.d(t,"frontMatter",(function(){return i})),a.d(t,"metadata",(function(){return l})),a.d(t,"rightToc",(function(){return s})),a.d(t,"default",(function(){return b}));var n=a(1),r=a(9),o=(a(0),a(232)),i={title:"Keep it simple",description:"Some tips for reducing effort and improving results by avoiding needless complexity",last_modified:new Date("2020-12-24T14:15:34.859Z")},l={id:"mindset/keep-it-simple",title:"Keep it simple",description:"Some tips for reducing effort and improving results by avoiding needless complexity",source:"@site/docs\\mindset\\keep-it-simple.md",permalink:"/interview-prep/mindset/keep-it-simple",sidebar:"docs",previous:{title:"It's about people",permalink:"/interview-prep/mindset/its-about-people"},next:{title:"Pragmatism and imperfectionism",permalink:"/interview-prep/mindset/pragmatism-imperfectionism"}},s=[{value:"Architecture",id:"architecture",children:[]},{value:"Technology",id:"technology",children:[]},{value:"Code",id:"code",children:[]},{value:"Features and scope",id:"features-and-scope",children:[]},{value:"Approach",id:"approach",children:[]},{value:"Processes",id:"processes",children:[]},{value:"Effort",id:"effort",children:[]},{value:"Don&#39;t take it too far",id:"dont-take-it-too-far",children:[]},{value:"Resources",id:"resources",children:[]}],c={rightToc:s};function b(e){var t=e.components,a=Object(r.a)(e,["components"]);return Object(o.b)("wrapper",Object(n.a)({},c,a,{components:t,mdxType:"MDXLayout"}),Object(o.b)("p",null,"Some tips for reducing effort and improving results by avoiding needless complexity"),Object(o.b)("h2",{id:"architecture"},"Architecture"),Object(o.b)("ul",null,Object(o.b)("li",{parentName:"ul"},"Start simple, evolve as needed based on actual problems that manifest themselves",Object(o.b)("ul",{parentName:"li"},Object(o.b)("li",{parentName:"ul"},"\"Big design up front\" doesn't work, because at the point you are making that design you don't know the system and domain well enough yet"),Object(o.b)("li",{parentName:"ul"},"Changes in requirements can come at any time and may affect the desired architecture"),Object(o.b)("li",{parentName:"ul"},"Evolving a simple architecture is easier than evolving a complex one!",Object(o.b)("ul",{parentName:"li"},Object(o.b)("li",{parentName:"ul"},"Changing boundaries inside a monolith is orders of magnitude easier than changing boundaries in a system of distributed services"))),Object(o.b)("li",{parentName:"ul"},"Typical example regarding microservices: projects that split into microservices from the start typically face a lot more problems than projects that start with a well-structured monolith and only split off into services where it provides clear benefits"))),Object(o.b)("li",{parentName:"ul"},"When changing architecture, go for small incremental steps rather than big changes",Object(o.b)("ul",{parentName:"li"},Object(o.b)("li",{parentName:"ul"},"Less risk, shorter feedback loop, ..."),Object(o.b)("li",{parentName:"ul"},"Might make sense to temporarily keep some suboptimal parts, just to ease transition"))),Object(o.b)("li",{parentName:"ul"},"What worked for someone else will not necessarily work for you"),Object(o.b)("li",{parentName:"ul"},"Premature complexity is also a form of technical debt")),Object(o.b)("h2",{id:"technology"},"Technology"),Object(o.b)("ul",null,Object(o.b)("li",{parentName:"ul"},"By default, pick boring, proven technologies that you know over shiny new ones",Object(o.b)("ul",{parentName:"li"},Object(o.b)("li",{parentName:"ul"},"Maintaining and learning new technologies comes at a cost. Is that cost worth it in your case?"),Object(o.b)("li",{parentName:"ul"},"Spending less time and energy trying out new technologies means you have more time and energy to solve real business problems"),Object(o.b)("li",{parentName:"ul"},"When solving a problem with boring, mature technologies, there are likely tried and tested solutions available"),Object(o.b)("li",{parentName:"ul"},"Community size and active maintenance are important!"),Object(o.b)("li",{parentName:"ul"},"Note: this doesn't mean you should stay stuck with ancient tech forever! As always, ",Object(o.b)("a",Object(n.a)({parentName:"li"},{href:"/mindset/it-depends"}),"It depends")))),Object(o.b)("li",{parentName:"ul"},"Use existing solutions for technological problems that you do not understand deeply or are not at the core of what you do",Object(o.b)("ul",{parentName:"li"},Object(o.b)("li",{parentName:"ul"},Object(o.b)("em",{parentName:"li"},'"If the overwhelming majority of your hand-written code isn\u2019t domain-specific and doesn\u2019t relate to the application\u2019s purpose, then you\u2019re using the wrong tools."')," (see ",Object(o.b)("a",{href:"https://thedailywtf.com/articles/Programming-Sucks!-Or-At-Least%2C-It-Ought-To-",target:"_blank",rel:"nofollow noopener noreferrer"},"Programming Sucks! Or At Least, It Ought To  - The Daily WTF ",Object(o.b)("svg",{class:"embedded-fa-icon"},Object(o.b)("use",{href:"#external-link-alt"}))),")")))),Object(o.b)("h2",{id:"code"},"Code"),Object(o.b)("ul",null,Object(o.b)("li",{parentName:"ul"},'Go for "dumb code"',Object(o.b)("ul",{parentName:"li"},Object(o.b)("li",{parentName:"ul"},"It takes a good developer to write code that looks so simple that any idiot could have written it",Object(o.b)("ul",{parentName:"li"},Object(o.b)("li",{parentName:"ul"},'"',Object(o.b)("em",{parentName:"li"},"Any fool can write code that a computer can understand. Good programmers write code that humans can understand."),'" - Martin Fowler'))),Object(o.b)("li",{parentName:"ul"},"The simpler and more obvious the code, the easier it is to review, debug, maintain, ..."),Object(o.b)("li",{parentName:"ul"},"You know you have a great developer if you give them a complex problem and they solve it using simple building blocks that fit together in obvious ways"))),Object(o.b)("li",{parentName:"ul"},"Don't sacrifice readability and maintainability for performance, unless it's needed to solve a real performance problem")),Object(o.b)("h2",{id:"features-and-scope"},"Features and scope"),Object(o.b)("ul",null,Object(o.b)("li",{parentName:"ul"},"Is a new feature really worth the development/maintenance effort and added complexity in codebase, operations, application user interface, ...?",Object(o.b)("ul",{parentName:"li"},Object(o.b)("li",{parentName:"ul"},"Code needs to be developed and maintained"),Object(o.b)("li",{parentName:"ul"},"Feature needs to be incorporated in user interface, documented, ..."),Object(o.b)("li",{parentName:"ul"},"Feature might conflict with other features, now or in the future, from functional or technical point of view"))),Object(o.b)("li",{parentName:"ul"},"Customers asking for a complex feature might be missing an alternative, simpler feature which provides the same or even more benefits",Object(o.b)("ul",{parentName:"li"},Object(o.b)("li",{parentName:"ul"},'Ask yourself: "What is the user really trying to accomplish"'))),Object(o.b)("li",{parentName:"ul"},"Features that seem important to you might not be important at all to your customers"),Object(o.b)("li",{parentName:"ul"},"Try to look for information and processes that you can keep out of scope of the system",Object(o.b)("ul",{parentName:"li"},Object(o.b)("li",{parentName:"ul"},"The fact that something exists in the real world doesn't mean that our system needs to know about it"),Object(o.b)("li",{parentName:"ul"},"The system doesn't need to know what happens as part of a certain process (either in the real world or in another system) if it only cares about the result and has a reliable way of getting that result")))),Object(o.b)("h2",{id:"approach"},"Approach"),Object(o.b)("ul",null,Object(o.b)("li",{parentName:"ul"},'"Do the simplest thing that could possibly work"',Object(o.b)("ul",{parentName:"li"},Object(o.b)("li",{parentName:"ul"},"Start with something ridiculously simple and only add complexity when needed"),Object(o.b)("li",{parentName:"ul"},"Avoid non-essential complexity that doesn't add value"),Object(o.b)("li",{parentName:"ul"},"In case of doubt between different approaches, try the simplest one first (see also ",Object(o.b)("a",Object(n.a)({parentName:"li"},{href:"/mindset/it-depends"}),"It depends"),")"),Object(o.b)("li",{parentName:"ul"},"Simplicity means it's also easy to adjust if needed"))),Object(o.b)("li",{parentName:"ul"},"Don't solve problems you don't have",Object(o.b)("ul",{parentName:"li"},Object(o.b)("li",{parentName:"ul"},"Only spend time and energy solving a problem if you are facing it right now or are absolutely sure you will be facing it in the near future"),Object(o.b)("li",{parentName:"ul"},"Solving a problem you end up never having is a waste of time and effort"),Object(o.b)("li",{parentName:"ul"},"It's very hard to predict exactly what your future problems will look like, so any premature solutions are likely to be solving the wrong problem"),Object(o.b)("li",{parentName:"ul"},"Solving a problem you don't currently have makes it very hard to validate your solution"),Object(o.b)("li",{parentName:"ul"},"See also ",Object(o.b)("a",{href:"https://martinfowler.com/bliki/Yagni.html",target:"_blank",rel:"nofollow noopener noreferrer"},"YAGNI ",Object(o.b)("svg",{class:"embedded-fa-icon"},Object(o.b)("use",{href:"#external-link-alt"})))))),Object(o.b)("li",{parentName:"ul"},"Small, incremental steps",Object(o.b)("ul",{parentName:"li"},Object(o.b)("li",{parentName:"ul"},'You don\'t have to solve everything at once, some things can be "good enough for now"'),Object(o.b)("li",{parentName:"ul"},"Split problems and look for decisions you can postpone or things you can improve later"),Object(o.b)("li",{parentName:"ul"},"Limit scope of discussions"))),Object(o.b)("li",{parentName:"ul"},'Ask yourself: "What problem are we actually solving here?"',Object(o.b)("ul",{parentName:"li"},Object(o.b)("li",{parentName:"ul"},"When you find yourself solving a sub-problem three levels deep, it might make sense to consider an alternative high-level approach")))),Object(o.b)("h2",{id:"processes"},"Processes"),Object(o.b)("ul",null,Object(o.b)("li",{parentName:"ul"},"Processes are there to streamline the way the team works, not to cause unnecessary delays and frustration"),Object(o.b)("li",{parentName:"ul"},"When something doesn't work for you, adjust it or try something different"),Object(o.b)("li",{parentName:"ul"},"When something works for you and solves your problems, there's no need to change it, even if it's not the current flavor of \"how things should be done\"")),Object(o.b)("h2",{id:"effort"},"Effort"),Object(o.b)("ul",null,Object(o.b)("li",{parentName:"ul"},"\u2018Doing it right\u2019 doesn\u2019t make sense if it costs you more effort without real practical benefits"),Object(o.b)("li",{parentName:"ul"},"Pareto principle: you can likely get 80% of the benefits by only spending 20% of the effort",Object(o.b)("ul",{parentName:"li"},Object(o.b)("li",{parentName:"ul"},"20% of the functionality can provide 80% of the value to your end users"),Object(o.b)("li",{parentName:"ul"},"20% of the testing can give you 80% of the confidence that your application works"),Object(o.b)("li",{parentName:"ul"},"It's not the end of the world if some very rare situations lead to a transaction failing because of deadlock, suboptimal error message, ..."),Object(o.b)("li",{parentName:"ul"},"It's not the end of the world if some exceptional cases require additional action by some batch process or even a human"))),Object(o.b)("li",{parentName:"ul"},"Know when to stop optimizing!",Object(o.b)("ul",{parentName:"li"},Object(o.b)("li",{parentName:"ul"},"The more you optimize, the lower the ROI of additional optimizations and the higher the benefit would be of spending the effort on other things instead"),Object(o.b)("li",{parentName:"ul"},"At some point, you need to decide that the current option is good enough"),Object(o.b)("li",{parentName:"ul"},"Applies to architecture, code quality, solution approaches, ..."))),Object(o.b)("li",{parentName:"ul"},"Not everything is a priority",Object(o.b)("ul",{parentName:"li"},Object(o.b)("li",{parentName:"ul"},"Some things are not worth spending more time and energy on, even if you know they could be improved"),Object(o.b)("li",{parentName:"ul"},"If you're feeling overwhelmed, find out what the real a priorities are (your team or manager could help)"),Object(o.b)("li",{parentName:"ul"},"Pick your battles: not every discussion is a hill you should be willing to die on."))),Object(o.b)("li",{parentName:"ul"},"Ask for help when it makes sense",Object(o.b)("ul",{parentName:"li"},Object(o.b)("li",{parentName:"ul"},"If you're struggling with something, you're likely to find a colleague that can help you out"),Object(o.b)("li",{parentName:"ul"},"Asking for help is a good way to bond with your colleagues, as it shows you trust them and value their expertise"))),Object(o.b)("li",{parentName:"ul"},"Learning",Object(o.b)("ul",{parentName:"li"},Object(o.b)("li",{parentName:"ul"},"You don't have to know everything! "),Object(o.b)("li",{parentName:"ul"},"Keep learning, but accept that you will never come close to knowing everything, and neither will anyone else"),Object(o.b)("li",{parentName:"ul"},"Learning high-level concepts already goes a long way (see also ",Object(o.b)("a",Object(n.a)({parentName:"li"},{href:"/mindset/concepts-not-code"}),"Concepts, not code"),")"),Object(o.b)("li",{parentName:"ul"},'It might help to keep a list of "topics to research later"')))),Object(o.b)("h2",{id:"dont-take-it-too-far"},"Don't take it too far"),Object(o.b)("ul",null,Object(o.b)("li",{parentName:"ul"},Object(o.b)("em",{parentName:"li"},'"Make everything as simple as possible, but not simpler."')," - Albert Einstein"),Object(o.b)("li",{parentName:"ul"},"Determining how simple something should be is a tradeoff"),Object(o.b)("li",{parentName:"ul"},'You should probably not try to "simplify away" the unavoidable complexities in your domain (those complexities might even be the reason your system exists)'),Object(o.b)("li",{parentName:"ul"},'The definition of "good enough" will likely be different based on how crucial the problem you are solving is to the system/domain',Object(o.b)("ul",{parentName:"li"},Object(o.b)("li",{parentName:"ul"},"It is probably not a good idea to take a lot of shortcuts in the foundations of your codebase/architecture"),Object(o.b)("li",{parentName:"ul"},"A situation that occurs all the time in the domain probably deserves some extra effort"))),Object(o.b)("li",{parentName:"ul"},'The definition of "good enough" will need to depend on how high the cost of failure is',Object(o.b)("ul",{parentName:"li"},Object(o.b)("li",{parentName:"ul"},"See also ",Object(o.b)("a",{href:"https://www.bitlog.com/2020/02/12/why-are-we-so-bad-at-software-engineering/",target:"_blank",rel:"nofollow noopener noreferrer"},"Why are we so bad at software engineering? ",Object(o.b)("svg",{class:"embedded-fa-icon"},Object(o.b)("use",{href:"#external-link-alt"})))),Object(o.b)("li",{parentName:"ul"},"If the cost of failure is high, it can make sense to do pre-mortems to identify and mitigate potential sources of failure"))),Object(o.b)("li",{parentName:"ul"},"If you want to build a reliable system, you might have to spend more time on proper error handling than on development of the actual happy path!"),Object(o.b)("li",{parentName:"ul"},"Relaxing quality standards can help you move fast in the beginning, but too much technical debt can slow further development to a crawl and require an enormous amount of time and energy to fix later on"),Object(o.b)("li",{parentName:"ul"},"As always, ",Object(o.b)("a",Object(n.a)({parentName:"li"},{href:"/mindset/it-depends"}),"It depends"))),Object(o.b)("h2",{id:"resources"},"Resources"),Object(o.b)("ul",null,Object(o.b)("li",{parentName:"ul"},Object(o.b)("a",{href:"https://www.infoq.com/articles/simplicity-manifesto-development/",target:"_blank",rel:"nofollow noopener noreferrer"},"Simplicity, Please - A Manifesto for Software Development ",Object(o.b)("svg",{class:"embedded-fa-icon"},Object(o.b)("use",{href:"#external-link-alt"})))),Object(o.b)("li",{parentName:"ul"},Object(o.b)("a",{href:"https://blog.pragmaticengineer.com/software-architecture-is-overrated/",target:"_blank",rel:"nofollow noopener noreferrer"},"Software Architecture is Overrated, Clear and Simple Design is Underrated ",Object(o.b)("svg",{class:"embedded-fa-icon"},Object(o.b)("use",{href:"#external-link-alt"})))),Object(o.b)("li",{parentName:"ul"},Object(o.b)("a",{href:"https://blog.bradfieldcs.com/you-are-not-google-84912cf44afb",target:"_blank",rel:"nofollow noopener noreferrer"},"You Are Not Google ",Object(o.b)("svg",{class:"embedded-fa-icon"},Object(o.b)("use",{href:"#external-link-alt"})))),Object(o.b)("li",{parentName:"ul"},Object(o.b)("a",{href:"https://codeahoy.com/2017/08/19/yagni-cargo-cult-and-overengineering-the-planes-wont-land-just-because-you-built-a-runway-in-your-backyard/",target:"_blank",rel:"nofollow noopener noreferrer"},"YAGNI, Cargo Cult and Overengineering - the Planes Won't Land Just Because You Built a Runway in Your Backyard ",Object(o.b)("svg",{class:"embedded-fa-icon"},Object(o.b)("use",{href:"#external-link-alt"})))),Object(o.b)("li",{parentName:"ul"},Object(o.b)("a",{href:"https://mcfunley.com/choose-boring-technology",target:"_blank",rel:"nofollow noopener noreferrer"},"Choose Boring Technology ",Object(o.b)("svg",{class:"embedded-fa-icon"},Object(o.b)("use",{href:"#external-link-alt"})))),Object(o.b)("li",{parentName:"ul"},Object(o.b)("a",{href:"https://mxstbr.com/thoughts/tech-choice-regrets-at-spectrum",target:"_blank",rel:"nofollow noopener noreferrer"},"Tech Choices I Regret at Spectrum ",Object(o.b)("svg",{class:"embedded-fa-icon"},Object(o.b)("use",{href:"#external-link-alt"})))),Object(o.b)("li",{parentName:"ul"},Object(o.b)("a",{href:"https://thorstenball.com/blog/2015/10/22/write-stupid-code/",target:"_blank",rel:"nofollow noopener noreferrer"},"Write Stupid Code ",Object(o.b)("svg",{class:"embedded-fa-icon"},Object(o.b)("use",{href:"#external-link-alt"})))),Object(o.b)("li",{parentName:"ul"},Object(o.b)("a",{href:"https://hackernoon.com/less-dirty-code-2c27321g",target:"_blank",rel:"nofollow noopener noreferrer"},"Less Dirty Code ",Object(o.b)("svg",{class:"embedded-fa-icon"},Object(o.b)("use",{href:"#external-link-alt"})))),Object(o.b)("li",{parentName:"ul"},Object(o.b)("a",{href:"https://thedailywtf.com/articles/Programming-Sucks!-Or-At-Least%2C-It-Ought-To-",target:"_blank",rel:"nofollow noopener noreferrer"},"Programming Sucks! Or At Least, It Ought To  - The Daily WTF ",Object(o.b)("svg",{class:"embedded-fa-icon"},Object(o.b)("use",{href:"#external-link-alt"})))),Object(o.b)("li",{parentName:"ul"},Object(o.b)("a",{href:"http://www.agilenutshell.com/simplest_thing",target:"_blank",rel:"nofollow noopener noreferrer"},"The Simplest Thing That Could Possibly Work ",Object(o.b)("svg",{class:"embedded-fa-icon"},Object(o.b)("use",{href:"#external-link-alt"})))),Object(o.b)("li",{parentName:"ul"},Object(o.b)("a",{href:"https://martinfowler.com/bliki/Yagni.html",target:"_blank",rel:"nofollow noopener noreferrer"},"YAGNI ",Object(o.b)("svg",{class:"embedded-fa-icon"},Object(o.b)("use",{href:"#external-link-alt"})))),Object(o.b)("li",{parentName:"ul"},Object(o.b)("a",{href:"https://www.youtube.com/watch?v=6XAu4EPQRmY",target:"_blank",rel:"nofollow noopener noreferrer"},"Jonathan Blow on solving hard problems ",Object(o.b)("svg",{class:"embedded-fa-icon"},Object(o.b)("use",{href:"#external-link-alt"})))," (",Object(o.b)("a",{href:"https://old.reddit.com/r/programming/comments/bx8p52/jonathan_blow_on_solving_hard_problems/eq4rl7j/",target:"_blank",rel:"nofollow noopener noreferrer"},"transcript ",Object(o.b)("svg",{class:"embedded-fa-icon"},Object(o.b)("use",{href:"#external-link-alt"}))),")"),Object(o.b)("li",{parentName:"ul"},Object(o.b)("a",{href:"https://en.wikipedia.org/wiki/Pareto_principle",target:"_blank",rel:"nofollow noopener noreferrer"},"Pareto principle ",Object(o.b)("svg",{class:"embedded-fa-icon"},Object(o.b)("use",{href:"#external-link-alt"})))),Object(o.b)("li",{parentName:"ul"},Object(o.b)("a",{href:"https://asthasr.github.io/posts/danger-of-simplicity/",target:"_blank",rel:"nofollow noopener noreferrer"},"The Danger of \u201cSimplicity\u201d ",Object(o.b)("svg",{class:"embedded-fa-icon"},Object(o.b)("use",{href:"#external-link-alt"})))),Object(o.b)("li",{parentName:"ul"},Object(o.b)("a",{href:"https://danluu.com/sounds-easy/",target:"_blank",rel:"nofollow noopener noreferrer"},"I could do that in a weekend! ",Object(o.b)("svg",{class:"embedded-fa-icon"},Object(o.b)("use",{href:"#external-link-alt"}))))))}b.isMDXComponent=!0},232:function(e,t,a){"use strict";a.d(t,"a",(function(){return u})),a.d(t,"b",(function(){return d}));var n=a(0),r=a.n(n);function o(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function i(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function l(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?i(Object(a),!0).forEach((function(t){o(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):i(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function s(e,t){if(null==e)return{};var a,n,r=function(e,t){if(null==e)return{};var a,n,r={},o=Object.keys(e);for(n=0;n<o.length;n++)a=o[n],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)a=o[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var c=r.a.createContext({}),b=function(e){var t=r.a.useContext(c),a=t;return e&&(a="function"==typeof e?e(t):l({},t,{},e)),a},u=function(e){var t=b(e.components);return r.a.createElement(c.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return r.a.createElement(r.a.Fragment,{},t)}},m=Object(n.forwardRef)((function(e,t){var a=e.components,n=e.mdxType,o=e.originalType,i=e.parentName,c=s(e,["components","mdxType","originalType","parentName"]),u=b(a),m=n,d=u["".concat(i,".").concat(m)]||u[m]||p[m]||o;return a?r.a.createElement(d,l({ref:t},c,{components:a})):r.a.createElement(d,l({ref:t},c))}));function d(e,t){var a=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var o=a.length,i=new Array(o);i[0]=m;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l.mdxType="string"==typeof e?e:n,i[1]=l;for(var c=2;c<o;c++)i[c]=a[c];return r.a.createElement.apply(null,i)}return r.a.createElement.apply(null,a)}m.displayName="MDXCreateElement"}}]);