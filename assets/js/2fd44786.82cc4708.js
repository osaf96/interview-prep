"use strict";(self.webpackChunkinterview_prep=self.webpackChunkinterview_prep||[]).push([[9452],{3905:function(e,t,n){n.d(t,{Zo:function(){return d},kt:function(){return m}});var a=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},i=Object.keys(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var s=a.createContext({}),u=function(e){var t=a.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},d=function(e){var t=u(e.components);return a.createElement(s.Provider,{value:t},e.children)},c={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},p=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,i=e.originalType,s=e.parentName,d=o(e,["components","mdxType","originalType","parentName"]),p=u(n),m=r,v=p["".concat(s,".").concat(m)]||p[m]||c[m]||i;return n?a.createElement(v,l(l({ref:t},d),{},{components:n})):a.createElement(v,l({ref:t},d))}));function m(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=n.length,l=new Array(i);l[0]=p;var o={};for(var s in t)hasOwnProperty.call(t,s)&&(o[s]=t[s]);o.originalType=e,o.mdxType="string"==typeof e?e:r,l[1]=o;for(var u=2;u<i;u++)l[u]=n[u];return a.createElement.apply(null,l)}return a.createElement.apply(null,n)}p.displayName="MDXCreateElement"},8956:function(e,t,n){n.r(t),n.d(t,{assets:function(){return d},contentTitle:function(){return s},default:function(){return m},frontMatter:function(){return o},metadata:function(){return u},toc:function(){return c}});var a=n(7462),r=n(3366),i=(n(7294),n(3905)),l=["components"],o={title:"Arrays",description:"This will cover the most of the topics that will be part of the Arrays.",last_modified:new Date("2022-06-08T16:35:30.353Z"),sidebar_label:"Arrays"},s=void 0,u={unversionedId:"preparation/arrays",id:"preparation/arrays",title:"Arrays",description:"This will cover the most of the topics that will be part of the Arrays.",source:"@site/docs/preparation/arrays.md",sourceDirName:"preparation",slug:"/preparation/arrays",permalink:"/interview-prep/preparation/arrays",draft:!1,tags:[],version:"current",frontMatter:{title:"Arrays",description:"This will cover the most of the topics that will be part of the Arrays.",last_modified:"2022-06-08T16:35:30.353Z",sidebar_label:"Arrays"},sidebar:"docs",previous:{title:"Algorithms",permalink:"/interview-prep/preparation/algorithms"},next:{title:"Bit Manipulation",permalink:"/interview-prep/preparation/bit-manipulation"}},d={},c=[{value:"Array Creation/Initialization",id:"array-creationinitialization",level:2},{value:"Arrays Initialized with a Size",id:"arrays-initialized-with-a-size",level:3},{value:"Arrays Initialized with a Size and Values",id:"arrays-initialized-with-a-size-and-values",level:3},{value:"Method 1 - Using a Loop",id:"method-1---using-a-loop",level:4},{value:"Method 2 - In-built Function",id:"method-2---in-built-function",level:4},{value:"Dynamic Array",id:"dynamic-array",level:3},{value:"Convert Collection (List, ArrayList) to Array",id:"convert-collection-list-arraylist-to-array",level:3},{value:"Method - Iterative Method",id:"method---iterative-method",level:4},{value:"Method - In-built Function",id:"method---in-built-function",level:4},{value:"Convert Map to Array",id:"convert-map-to-array",level:3},{value:"Converting a Map&#39;s Keys and Values to an Array",id:"converting-a-maps-keys-and-values-to-an-array",level:4},{value:"Convert Set to Array",id:"convert-set-to-array",level:3},{value:"Method - Iterative Method",id:"method---iterative-method-1",level:4},{value:"Method - In-built Function",id:"method---in-built-function-1",level:4},{value:"Convert Stack to Array",id:"convert-stack-to-array",level:3},{value:"Method - Iterative Method",id:"method---iterative-method-2",level:4},{value:"Method - In-built Function",id:"method---in-built-function-2",level:4},{value:"Convert Queue to Array",id:"convert-queue-to-array",level:3},{value:"Method - Iterative Method",id:"method---iterative-method-3",level:4},{value:"Method - In-built Function",id:"method---in-built-function-3",level:4},{value:"Covers",id:"covers",level:4},{value:"Convert String of Digits to an Array",id:"convert-string-of-digits-to-an-array",level:3},{value:"Method 1",id:"method-1",level:4},{value:"Method 2",id:"method-2",level:4},{value:"Covers",id:"covers-1",level:4},{value:"Reverse an Array",id:"reverse-an-array",level:2},{value:"Using Another Array",id:"using-another-array",level:3},{value:"In-place Reverse",id:"in-place-reverse",level:3},{value:"Method 1 - Cutting to middle and reverse two halves.",id:"method-1---cutting-to-middle-and-reverse-two-halves",level:4},{value:"Method 2 - Two Pointers",id:"method-2---two-pointers",level:4},{value:"Covers",id:"covers-2",level:3},{value:"Find the Maximum and Minimum Values in an Array",id:"find-the-maximum-and-minimum-values-in-an-array",level:2},{value:"Method 1 - Using a Loop",id:"method-1---using-a-loop-1",level:3},{value:"Method 2 - In-built Function",id:"method-2---in-built-function-1",level:3},{value:"Method 3 - In-built Function - Collections.max() and Collections.min()",id:"method-3---in-built-function---collectionsmax-and-collectionsmin",level:3},{value:"Covers",id:"covers-3",level:3},{value:"Sorting an Array",id:"sorting-an-array",level:2},{value:"Searching in a Sorted Array (Binary Search - Variation)",id:"searching-in-a-sorted-array-binary-search---variation",level:2}],p={toc:c};function m(e){var t=e.components,n=(0,r.Z)(e,l);return(0,i.kt)("wrapper",(0,a.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("p",null,"This will cover the most of the topics that will be part of the Arrays."),(0,i.kt)("h2",{id:"array-creationinitialization"},"Array Creation/Initialization"),(0,i.kt)("h3",{id:"arrays-initialized-with-a-size"},"Arrays Initialized with a Size"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-java"},"public class Solution {\n    public static void main(String[] args){\n        int[] arr = new int[5];\n        arr[0] = 1;\n        arr[1] = 2;\n    }\n}\n")),(0,i.kt)("h3",{id:"arrays-initialized-with-a-size-and-values"},"Arrays Initialized with a Size and Values"),(0,i.kt)("h4",{id:"method-1---using-a-loop"},"Method 1 - Using a Loop"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-java"},"public class Solution {\n    public static void main(String[] args){\n        int[] arr = new int[5];\n        arr[0] = 1;\n        arr[1] = 2;\n    }\n}\n")),(0,i.kt)("h4",{id:"method-2---in-built-function"},"Method 2 - In-built Function"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-java"},"public class Solution {\n    public static void main(String[] args){\n        int defaultValue = 0;\n        int[] arr = new int[5];\n        Arrays.fill(arr, defaultValue);\n    }\n}\n")),(0,i.kt)("h3",{id:"dynamic-array"},"Dynamic Array"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-java"},"public class Solution {\n    public static void main(String[] args){\n        int[] arr = new int[]{1,2,3,4,5};\n    }\n}\n")),(0,i.kt)("h3",{id:"convert-collection-list-arraylist-to-array"},"Convert Collection (List, ArrayList) to Array"),(0,i.kt)("h4",{id:"method---iterative-method"},"Method - Iterative Method"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-java"},"public class Solution {\n    public static void main(String[] args){\n        List<Integer> list = new ArrayList<Integer>();\n        list.add(1); list.add(2); list.add(3); list.add(4);\n        int[] arr = new int[list.size()];\n        for(int i = 0; i < list.size(); i++){\n            arr[i] = list.get(i);\n        }\n    }\n}\n")),(0,i.kt)("h4",{id:"method---in-built-function"},"Method - In-built Function"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-java"},"public class Solution {\n    public static void main(String[] args){\n        List<Integer> list = new ArrayList<Integer>();\n        list.add(1); list.add(2); list.add(3); list.add(4);\n        Integer[] arr = list.toArray(new Integer[list.size()]);\n    }\n}\n")),(0,i.kt)("h3",{id:"convert-map-to-array"},"Convert Map to Array"),(0,i.kt)("h4",{id:"converting-a-maps-keys-and-values-to-an-array"},"Converting a Map's Keys and Values to an Array"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-java"},'public class Solution {\n    public static void main(String[] args){\n        Map<Integer, String> map = new HashMap<Integer, String>();\n        map.put(1, "One");\n        map.put(2, "Two");\n        map.put(3, "Three");\n\n        Integer[] keys = map.keySet().toArray(new Integer[map.keySet().size()]);\n        String[] values = map.values().toArray(new String[map.values().size()]);\n    }\n}\n\n')),(0,i.kt)("h3",{id:"convert-set-to-array"},"Convert Set to Array"),(0,i.kt)("h4",{id:"method---iterative-method-1"},"Method - Iterative Method"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-java"},"public class Solution {\n    public static void main(String[] args){\n        Set<Integer> set = new HashSet<Integer>();\n        set.add(1); set.add(2); set.add(3); set.add(4);\n        int[] arr = new int[set.size()];\n        int i = 0;\n        for(Integer num : set){\n            arr[i] = num;\n            i++;\n        }\n    }\n}\n\n")),(0,i.kt)("h4",{id:"method---in-built-function-1"},"Method - In-built Function"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-java"},"public class Solution {\n    public static void main(String[] args){\n        Set<Integer> set = new HashSet<Integer>();\n        set.add(1); set.add(2); set.add(3); set.add(4);\n        Integer[] arr = set.toArray(new Integer[set.size()]);\n    }\n}\n\n")),(0,i.kt)("h3",{id:"convert-stack-to-array"},"Convert Stack to Array"),(0,i.kt)("h4",{id:"method---iterative-method-2"},"Method - Iterative Method"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-java"},"public class Solution {\n    public static void main(String[] args){\n        Stack<Integer> stack = new Stack<Integer>();\n        stack.push(1); stack.push(2); stack.push(3); stack.push(4);\n        int[] arr = new int[stack.size()];\n        int i = 0;\n        while(!stack.isEmpty()){\n            arr[i] = stack.pop();\n            i++;\n        }\n    }\n}\n\n")),(0,i.kt)("h4",{id:"method---in-built-function-2"},"Method - In-built Function"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-java"},"public class Solution {\n    public static void main(String[] args){\n        Stack<Integer> stack = new Stack<Integer>();\n        stack.push(1); stack.push(2); stack.push(3); stack.push(4);\n        Integer[] arr = stack.toArray(new Integer[stack.size()]);\n    }\n}\n\n")),(0,i.kt)("h3",{id:"convert-queue-to-array"},"Convert Queue to Array"),(0,i.kt)("h4",{id:"method---iterative-method-3"},"Method - Iterative Method"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-java"},"public class Solution {\n    public static void main(String[] args){\n        Queue<Integer> queue = new LinkedList<Integer>();\n        queue.add(1); queue.add(2); queue.add(3); queue.add(4);\n        int[] arr = new int[queue.size()];\n        int i = 0;\n        while(!queue.isEmpty()){\n            arr[i] = queue.remove();\n            i++;\n        }\n    }\n}\n\n")),(0,i.kt)("h4",{id:"method---in-built-function-3"},"Method - In-built Function"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-java"},"public class Solution {\n    public static void main(String[] args){\n        Queue<Integer> queue = new LinkedList<Integer>();\n        queue.add(1); queue.add(2); queue.add(3); queue.add(4);\n        Integer[] arr = queue.toArray(new Integer[queue.size()]);\n    }\n}\n")),(0,i.kt)("h4",{id:"covers"},"Covers"),(0,i.kt)("p",null,"\u2705 Iterating over List.\n\u2705 Creating an array of integers.\n\u2705 ",(0,i.kt)("code",null,"List.size()"),", ",(0,i.kt)("code",null,"List.get()"),", ",(0,i.kt)("code",null,"List.toArray()")," methods.\n\u2705 ",(0,i.kt)("code",null,"Map.keySet()"),", ",(0,i.kt)("code",null,"Map.values()"),", ",(0,i.kt)("code",null,"Map.entrySet()")," methods.\n\u2705 ",(0,i.kt)("code",null,"Set.toArray()")," method.\n\u2705 ",(0,i.kt)("code",null,"Stack.pop()"),", ",(0,i.kt)("code",null,"Stack.isEmpty()"),", ",(0,i.kt)("code",null,"Stack.toArray()")," methods.\n\u2705 ",(0,i.kt)("code",null,"Queue.remove()"),", ",(0,i.kt)("code",null,"Queue.isEmpty()"),", ",(0,i.kt)("code",null,"Queue.toArray()")," methods."),(0,i.kt)("h3",{id:"convert-string-of-digits-to-an-array"},"Convert String of Digits to an Array"),(0,i.kt)("h4",{id:"method-1"},"Method 1"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-java"},"public class Solution {\n    public static void main(String[] args){\n        String str = \"12345\";\n        int[] arr = new int[str.length()];\n        for(int i = 0; i < str.length(); i++){\n            arr[i] = str.charAt(i) - '0';\n        }\n    }\n}\n")),(0,i.kt)("h4",{id:"method-2"},"Method 2"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-java"},'public class Solution {\n    public static void main(String[] args){\n        String str = "12345";\n        Character[] arr = str.toCharArray();\n    }\n}\n')),(0,i.kt)("h4",{id:"covers-1"},"Covers"),(0,i.kt)("p",null,"\u2705 Iterating over String.\n\u2705 Creating an array of characters.\n\u2705 ",(0,i.kt)("code",null,"String.length()"),", ",(0,i.kt)("code",null,"String.toCharArray()"),", ",(0,i.kt)("code",null,"String.charAt()")," methods."),(0,i.kt)("h2",{id:"reverse-an-array"},"Reverse an Array"),(0,i.kt)("h3",{id:"using-another-array"},"Using Another Array"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-java"},"public class Solution {\n    public static void main(String[] args){\n        int[] arr = new int[]{1,2,3,4,5};\n        int[] arr2 = new int[arr.length];\n        for(int i = 0; i < arr.length; i++){\n            arr2[i] = arr[arr.length - i - 1];\n        }\n    }\n}\n// Time Complexity: O(n)\n// Space Complexity: O(n)\n\n")),(0,i.kt)("h3",{id:"in-place-reverse"},"In-place Reverse"),(0,i.kt)("h4",{id:"method-1---cutting-to-middle-and-reverse-two-halves"},"Method 1 - Cutting to middle and reverse two halves."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-java"},"public class Solution {\n    public static void main(String[] args){\n        int[] arr = new int[]{1,2,3,4,5};\n        for(int i = 0; i < arr.length / 2; i++){\n            int temp = arr[i];\n            arr[i] = arr[arr.length - i - 1];\n            arr[arr.length - i - 1] = temp;\n        }\n    }\n}\n// Time Complexity: O(n)\n// Space Complexity: O(1)\n\n")),(0,i.kt)("h4",{id:"method-2---two-pointers"},"Method 2 - Two Pointers"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-java"},"public class Solution {\n    public static void main(String[] args){\n        int[] arr = new int[]{1,2,3,4,5};\n        int i = 0;\n        int j = arr.length - 1;\n        while(i < j){\n            int temp = arr[i];\n            arr[i] = arr[j];\n            arr[j] = temp;\n            i++;\n            j--;\n        }\n    }\n}\n// Time Complexity: O(n)\n// Space Complexity: O(1)\n\n")),(0,i.kt)("h3",{id:"covers-2"},"Covers"),(0,i.kt)("p",null,"\u2705 Iterating over array.\n\u2705 Swapping elements."),(0,i.kt)("h2",{id:"find-the-maximum-and-minimum-values-in-an-array"},"Find the Maximum and Minimum Values in an Array"),(0,i.kt)("h3",{id:"method-1---using-a-loop-1"},"Method 1 - Using a Loop"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-java"},"public class Solution {\n    public static void main(String[] args){\n        int[] arr = new int[]{1,2,3,4,5};\n        int max = arr[0];\n        int min = arr[0];\n        for(int i = 1; i < arr.length; i++){\n            if(arr[i] > max){\n                max = arr[i];\n            }\n            if(arr[i] < min){\n                min = arr[i];\n            }\n        }\n    }\n}\n// Time Complexity: O(n)\n// Space Complexity: O(1)\n")),(0,i.kt)("h3",{id:"method-2---in-built-function-1"},"Method 2 - In-built Function"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-java"},"public class Solution {\n    public static void main(String[] args){\n        int[] arr = new int[]{1,2,3,4,5};\n        int max = Arrays.stream(arr).max().getAsInt();\n        int min = Arrays.stream(arr).min().getAsInt();\n    }\n}\n// Time Complexity: O(n)\n// Space Complexity: O(1)\n\n")),(0,i.kt)("h3",{id:"method-3---in-built-function---collectionsmax-and-collectionsmin"},"Method 3 - In-built Function - Collections.max() and Collections.min()"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-java"},"public class Solution {\n    public static void main(String[] args){\n        int[] arr = new int[]{1,2,3,4,5};\n        int max = Collections.max(Arrays.asList(arr));\n        int min = Collections.min(Arrays.asList(arr));\n    }\n}\n// Time Complexity: O(n)\n// Space Complexity: O(1)\n\n")),(0,i.kt)("h3",{id:"covers-3"},"Covers"),(0,i.kt)("p",null,"\u2705 Iterating over array.\n\u2705 Using ",(0,i.kt)("code",null,"Collections.max()")," and ",(0,i.kt)("code",null,"Collections.min()")," methods.\n\u2705 ",(0,i.kt)("code",null,"Arrays.stream().max().getAsInt()")," and ",(0,i.kt)("code",null,"Arrays.stream().min().getAsInt()")," methods."),(0,i.kt)("h2",{id:"sorting-an-array"},"Sorting an Array"),(0,i.kt)("a",{href:"https://shyamzzp.github.io/interview-prep/preparation/sorting-algorithms",target:"_blank",rel:"nofollow noopener noreferrer"},"Sorting Algorithms ",(0,i.kt)("svg",{class:"embedded-fa-icon"},(0,i.kt)("use",{href:"#external-link-alt"}))),(0,i.kt)("h2",{id:"searching-in-a-sorted-array-binary-search---variation"},"Searching in a Sorted Array (Binary Search - Variation)"),(0,i.kt)("a",{href:"https://shyamzzp.github.io/interview-prep/preparation/search-algorithms",target:"_blank",rel:"nofollow noopener noreferrer"},"Searching Algorithms ",(0,i.kt)("svg",{class:"embedded-fa-icon"},(0,i.kt)("use",{href:"#external-link-alt"}))))}m.isMDXComponent=!0}}]);