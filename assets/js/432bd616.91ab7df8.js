"use strict";(self.webpackChunkinterview_prep=self.webpackChunkinterview_prep||[]).push([[500],{3905:function(e,t,r){r.d(t,{Zo:function(){return c},kt:function(){return f}});var n=r(7294);function o(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function a(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function i(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?a(Object(r),!0).forEach((function(t){o(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):a(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function l(e,t){if(null==e)return{};var r,n,o=function(e,t){if(null==e)return{};var r,n,o={},a=Object.keys(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||(o[r]=e[r]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(o[r]=e[r])}return o}var p=n.createContext({}),s=function(e){var t=n.useContext(p),r=t;return e&&(r="function"==typeof e?e(t):i(i({},t),e)),r},c=function(e){var t=s(e.components);return n.createElement(p.Provider,{value:t},e.children)},m={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},u=n.forwardRef((function(e,t){var r=e.components,o=e.mdxType,a=e.originalType,p=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),u=s(r),f=o,d=u["".concat(p,".").concat(f)]||u[f]||m[f]||a;return r?n.createElement(d,i(i({ref:t},c),{},{components:r})):n.createElement(d,i({ref:t},c))}));function f(e,t){var r=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=r.length,i=new Array(a);i[0]=u;var l={};for(var p in t)hasOwnProperty.call(t,p)&&(l[p]=t[p]);l.originalType=e,l.mdxType="string"==typeof e?e:o,i[1]=l;for(var s=2;s<a;s++)i[s]=r[s];return n.createElement.apply(null,i)}return n.createElement.apply(null,r)}u.displayName="MDXCreateElement"},862:function(e,t,r){r.r(t),r.d(t,{assets:function(){return c},contentTitle:function(){return p},default:function(){return f},frontMatter:function(){return l},metadata:function(){return s},toc:function(){return m}});var n=r(7462),o=r(3366),a=(r(7294),r(3905)),i=["components"],l={title:"Comparators",description:"This will cover the most of the topics that will be part of the Comparators.",last_modified:new Date("2022-06-08T15:36:32.363Z"),sidebar_label:"Comparators"},p=void 0,s={unversionedId:"preparation/comparators",id:"preparation/comparators",title:"Comparators",description:"This will cover the most of the topics that will be part of the Comparators.",source:"@site/docs/preparation/comparators.md",sourceDirName:"preparation",slug:"/preparation/comparators",permalink:"/interview-prep/about/preparation/comparators",draft:!1,tags:[],version:"current",frontMatter:{title:"Comparators",description:"This will cover the most of the topics that will be part of the Comparators.",last_modified:"2022-06-08T15:36:32.363Z",sidebar_label:"Comparators"},sidebar:"docs",previous:{title:"Common Problems",permalink:"/interview-prep/about/preparation/common-problems"},next:{title:"Graph",permalink:"/interview-prep/about/preparation/graph"}},c={},m=[{value:"Comparator Class",id:"comparator-class",level:2},{value:"One level of Comparisons",id:"one-level-of-comparisons",level:3},{value:"Two levels of Comparisons.",id:"two-levels-of-comparisons",level:3}],u={toc:m};function f(e){var t=e.components,r=(0,o.Z)(e,i);return(0,a.kt)("wrapper",(0,n.Z)({},u,r,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("p",null,"This will cover the most of the topics that will be part of the Comparators."),(0,a.kt)("h2",{id:"comparator-class"},"Comparator Class"),(0,a.kt)("h3",{id:"one-level-of-comparisons"},"One level of Comparisons"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-java"},"class Student {\n    int rollno;\n    String name, address;\n}\nclass SortByName implements Comparator<Student> {\n    // Sorting in ascending order of Name.\n    public int compare(Student a, Student b) {\n        return a.name.compareTo(b.name);\n    }\n}\nclass SortByRoll implements Comparator<Student> {\n    // Sorting in ascending order of Roll No.\n    public int compare(Student a, Student b){\n        return a.rollno - b.rollno;\n    }\n}\nclass Solution {\n    public static void main(String[] args) {\n                Collections.sort(studentsArray, new SortByRoll());\n        }\n}\n")),(0,a.kt)("h3",{id:"two-levels-of-comparisons"},"Two levels of Comparisons."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-java"},"class Student {\n    String Name;\n    int Age;\n}\nclass CustomerSortingComparator implements Comparator<Student> {\n    @Override\n    public int compare(Student customer1, Student customer2) {\n    int NameCompare = customer1.Name.compareTo(customer2.Name);\n    int AgeCompare = customer1.Age.compareTo(customer2.Age);\n\n    // 2nd level comparison\n    return (NameCompare == 0) ? AgeCompare : NameCompare;\n    }\n}\nclass Solution {\n    Collections.sort(al,new CustomerSortingComparator());\n}\n")))}f.isMDXComponent=!0}}]);