"use strict";(self.webpackChunkinterview_prep=self.webpackChunkinterview_prep||[]).push([[2720],{3905:function(e,t,a){a.d(t,{Zo:function(){return p},kt:function(){return c}});var n=a(7294);function r(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function o(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function l(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?o(Object(a),!0).forEach((function(t){r(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):o(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function i(e,t){if(null==e)return{};var a,n,r=function(e,t){if(null==e)return{};var a,n,r={},o=Object.keys(e);for(n=0;n<o.length;n++)a=o[n],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)a=o[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var s=n.createContext({}),u=function(e){var t=n.useContext(s),a=t;return e&&(a="function"==typeof e?e(t):l(l({},t),e)),a},p=function(e){var t=u(e.components);return n.createElement(s.Provider,{value:t},e.children)},m={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},d=n.forwardRef((function(e,t){var a=e.components,r=e.mdxType,o=e.originalType,s=e.parentName,p=i(e,["components","mdxType","originalType","parentName"]),d=u(a),c=r,h=d["".concat(s,".").concat(c)]||d[c]||m[c]||o;return a?n.createElement(h,l(l({ref:t},p),{},{components:a})):n.createElement(h,l({ref:t},p))}));function c(e,t){var a=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=a.length,l=new Array(o);l[0]=d;var i={};for(var s in t)hasOwnProperty.call(t,s)&&(i[s]=t[s]);i.originalType=e,i.mdxType="string"==typeof e?e:r,l[1]=i;for(var u=2;u<o;u++)l[u]=a[u];return n.createElement.apply(null,l)}return n.createElement.apply(null,a)}d.displayName="MDXCreateElement"},4639:function(e,t,a){a.r(t),a.d(t,{assets:function(){return p},contentTitle:function(){return s},default:function(){return c},frontMatter:function(){return i},metadata:function(){return u},toc:function(){return m}});var n=a(7462),r=a(3366),o=(a(7294),a(3905)),l=["components"],i={title:"Keep it simple",description:"Some tips for reducing effort and improving results by avoiding needless complexity",last_modified:new Date("2020-12-24T14:15:34.859Z")},s=void 0,u={unversionedId:"mindset/keep-it-simple",id:"mindset/keep-it-simple",title:"Keep it simple",description:"Some tips for reducing effort and improving results by avoiding needless complexity",source:"@site/docs/mindset/keep-it-simple.md",sourceDirName:"mindset",slug:"/mindset/keep-it-simple",permalink:"/interview-prep/mindset/keep-it-simple",draft:!1,tags:[],version:"current",frontMatter:{title:"Keep it simple",description:"Some tips for reducing effort and improving results by avoiding needless complexity",last_modified:"2020-12-24T14:15:34.859Z"},sidebar:"docs",previous:{title:"It's about people",permalink:"/interview-prep/mindset/its-about-people"},next:{title:"Pragmatism and imperfectionism",permalink:"/interview-prep/mindset/pragmatism-imperfectionism"}},p={},m=[{value:"Architecture",id:"architecture",level:2},{value:"Technology",id:"technology",level:2},{value:"Code",id:"code",level:2},{value:"Features and scope",id:"features-and-scope",level:2},{value:"Approach",id:"approach",level:2},{value:"Processes",id:"processes",level:2},{value:"Effort",id:"effort",level:2},{value:"Don&#39;t take it too far",id:"dont-take-it-too-far",level:2},{value:"Resources",id:"resources",level:2}],d={toc:m};function c(e){var t=e.components,a=(0,r.Z)(e,l);return(0,o.kt)("wrapper",(0,n.Z)({},d,a,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("p",null,"Some tips for reducing effort and improving results by avoiding needless complexity"),(0,o.kt)("h2",{id:"architecture"},"Architecture"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Start simple, evolve as needed based on actual problems that manifest themselves",(0,o.kt)("ul",{parentName:"li"},(0,o.kt)("li",{parentName:"ul"},"\"Big design up front\" doesn't work, because at the point you are making that design you don't know the system and domain well enough yet"),(0,o.kt)("li",{parentName:"ul"},"Changes in requirements can come at any time and may affect the desired architecture"),(0,o.kt)("li",{parentName:"ul"},"Evolving a simple architecture is easier than evolving a complex one!",(0,o.kt)("ul",{parentName:"li"},(0,o.kt)("li",{parentName:"ul"},"Changing boundaries inside a monolith is orders of magnitude easier than changing boundaries in a system of distributed services"))),(0,o.kt)("li",{parentName:"ul"},"Typical example regarding microservices: projects that split into microservices from the start typically face a lot more problems than projects that start with a well-structured monolith and only split off into services where it provides clear benefits"))),(0,o.kt)("li",{parentName:"ul"},"When changing architecture, go for small incremental steps rather than big changes",(0,o.kt)("ul",{parentName:"li"},(0,o.kt)("li",{parentName:"ul"},"Less risk, shorter feedback loop, ..."),(0,o.kt)("li",{parentName:"ul"},"Might make sense to temporarily keep some suboptimal parts, just to ease transition"))),(0,o.kt)("li",{parentName:"ul"},"What worked for someone else will not necessarily work for you"),(0,o.kt)("li",{parentName:"ul"},"Premature complexity is also a form of technical debt")),(0,o.kt)("h2",{id:"technology"},"Technology"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"By default, pick boring, proven technologies that you know over shiny new ones",(0,o.kt)("ul",{parentName:"li"},(0,o.kt)("li",{parentName:"ul"},"Maintaining and learning new technologies comes at a cost. Is that cost worth it in your case?"),(0,o.kt)("li",{parentName:"ul"},"Spending less time and energy trying out new technologies means you have more time and energy to solve real business problems"),(0,o.kt)("li",{parentName:"ul"},"When solving a problem with boring, mature technologies, there are likely tried and tested solutions available"),(0,o.kt)("li",{parentName:"ul"},"Community size and active maintenance are important!"),(0,o.kt)("li",{parentName:"ul"},"Note: this doesn't mean you should stay stuck with ancient tech forever! As always, ",(0,o.kt)("a",{parentName:"li",href:"/mindset/it-depends"},"It depends")))),(0,o.kt)("li",{parentName:"ul"},"Use existing solutions for technological problems that you do not understand deeply or are not at the core of what you do",(0,o.kt)("ul",{parentName:"li"},(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("em",{parentName:"li"},'"If the overwhelming majority of your hand-written code isn\u2019t domain-specific and doesn\u2019t relate to the application\u2019s purpose, then you\u2019re using the wrong tools."')," (see ",(0,o.kt)("a",{href:"https://thedailywtf.com/articles/Programming-Sucks!-Or-At-Least%2C-It-Ought-To-",target:"_blank",rel:"nofollow noopener noreferrer"},"Programming Sucks! Or At Least, It Ought To  - The Daily WTF ",(0,o.kt)("svg",{class:"embedded-fa-icon"},(0,o.kt)("use",{href:"#external-link-alt"}))),")")))),(0,o.kt)("h2",{id:"code"},"Code"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},'Go for "dumb code"',(0,o.kt)("ul",{parentName:"li"},(0,o.kt)("li",{parentName:"ul"},"It takes a good developer to write code that looks so simple that any idiot could have written it",(0,o.kt)("ul",{parentName:"li"},(0,o.kt)("li",{parentName:"ul"},'"',(0,o.kt)("em",{parentName:"li"},"Any fool can write code that a computer can understand. Good programmers write code that humans can understand."),'" - Martin Fowler'))),(0,o.kt)("li",{parentName:"ul"},"The simpler and more obvious the code, the easier it is to review, debug, maintain, ..."),(0,o.kt)("li",{parentName:"ul"},"You know you have a great developer if you give them a complex problem and they solve it using simple building blocks that fit together in obvious ways"))),(0,o.kt)("li",{parentName:"ul"},"Don't sacrifice readability and maintainability for performance, unless it's needed to solve a real performance problem")),(0,o.kt)("h2",{id:"features-and-scope"},"Features and scope"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Is a new feature really worth the development/maintenance effort and added complexity in codebase, operations, application user interface, ...?",(0,o.kt)("ul",{parentName:"li"},(0,o.kt)("li",{parentName:"ul"},"Code needs to be developed and maintained"),(0,o.kt)("li",{parentName:"ul"},"Feature needs to be incorporated in user interface, documented, ..."),(0,o.kt)("li",{parentName:"ul"},"Feature might conflict with other features, now or in the future, from functional or technical point of view"))),(0,o.kt)("li",{parentName:"ul"},"Customers asking for a complex feature might be missing an alternative, simpler feature which provides the same or even more benefits",(0,o.kt)("ul",{parentName:"li"},(0,o.kt)("li",{parentName:"ul"},'Ask yourself: "What is the user really trying to accomplish"'))),(0,o.kt)("li",{parentName:"ul"},"Features that seem important to you might not be important at all to your customers"),(0,o.kt)("li",{parentName:"ul"},"Try to look for information and processes that you can keep out of scope of the system",(0,o.kt)("ul",{parentName:"li"},(0,o.kt)("li",{parentName:"ul"},"The fact that something exists in the real world doesn't mean that our system needs to know about it"),(0,o.kt)("li",{parentName:"ul"},"The system doesn't need to know what happens as part of a certain process (either in the real world or in another system) if it only cares about the result and has a reliable way of getting that result")))),(0,o.kt)("h2",{id:"approach"},"Approach"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},'"Do the simplest thing that could possibly work"',(0,o.kt)("ul",{parentName:"li"},(0,o.kt)("li",{parentName:"ul"},"Start with something ridiculously simple and only add complexity when needed"),(0,o.kt)("li",{parentName:"ul"},"Avoid non-essential complexity that doesn't add value"),(0,o.kt)("li",{parentName:"ul"},"In case of doubt between different approaches, try the simplest one first (see also ",(0,o.kt)("a",{parentName:"li",href:"/mindset/it-depends"},"It depends"),")"),(0,o.kt)("li",{parentName:"ul"},"Simplicity means it's also easy to adjust if needed"))),(0,o.kt)("li",{parentName:"ul"},"Don't solve problems you don't have",(0,o.kt)("ul",{parentName:"li"},(0,o.kt)("li",{parentName:"ul"},"Only spend time and energy solving a problem if you are facing it right now or are absolutely sure you will be facing it in the near future"),(0,o.kt)("li",{parentName:"ul"},"Solving a problem you end up never having is a waste of time and effort"),(0,o.kt)("li",{parentName:"ul"},"It's very hard to predict exactly what your future problems will look like, so any premature solutions are likely to be solving the wrong problem"),(0,o.kt)("li",{parentName:"ul"},"Solving a problem you don't currently have makes it very hard to validate your solution"),(0,o.kt)("li",{parentName:"ul"},"See also ",(0,o.kt)("a",{href:"https://martinfowler.com/bliki/Yagni.html",target:"_blank",rel:"nofollow noopener noreferrer"},"YAGNI ",(0,o.kt)("svg",{class:"embedded-fa-icon"},(0,o.kt)("use",{href:"#external-link-alt"})))))),(0,o.kt)("li",{parentName:"ul"},"Small, incremental steps",(0,o.kt)("ul",{parentName:"li"},(0,o.kt)("li",{parentName:"ul"},'You don\'t have to solve everything at once, some things can be "good enough for now"'),(0,o.kt)("li",{parentName:"ul"},"Split problems and look for decisions you can postpone or things you can improve later"),(0,o.kt)("li",{parentName:"ul"},"Limit scope of discussions"))),(0,o.kt)("li",{parentName:"ul"},'Ask yourself: "What problem are we actually solving here?"',(0,o.kt)("ul",{parentName:"li"},(0,o.kt)("li",{parentName:"ul"},"When you find yourself solving a sub-problem three levels deep, it might make sense to consider an alternative high-level approach")))),(0,o.kt)("h2",{id:"processes"},"Processes"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Processes are there to streamline the way the team works, not to cause unnecessary delays and frustration"),(0,o.kt)("li",{parentName:"ul"},"When something doesn't work for you, adjust it or try something different"),(0,o.kt)("li",{parentName:"ul"},"When something works for you and solves your problems, there's no need to change it, even if it's not the current flavor of \"how things should be done\"")),(0,o.kt)("h2",{id:"effort"},"Effort"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"\u2018Doing it right\u2019 doesn\u2019t make sense if it costs you more effort without real practical benefits"),(0,o.kt)("li",{parentName:"ul"},"Pareto principle: you can likely get 80% of the benefits by only spending 20% of the effort",(0,o.kt)("ul",{parentName:"li"},(0,o.kt)("li",{parentName:"ul"},"20% of the functionality can provide 80% of the value to your end users"),(0,o.kt)("li",{parentName:"ul"},"20% of the testing can give you 80% of the confidence that your application works"),(0,o.kt)("li",{parentName:"ul"},"It's not the end of the world if some very rare situations lead to a transaction failing because of deadlock, suboptimal error message, ..."),(0,o.kt)("li",{parentName:"ul"},"It's not the end of the world if some exceptional cases require additional action by some batch process or even a human"))),(0,o.kt)("li",{parentName:"ul"},"Know when to stop optimizing!",(0,o.kt)("ul",{parentName:"li"},(0,o.kt)("li",{parentName:"ul"},"The more you optimize, the lower the ROI of additional optimizations and the higher the benefit would be of spending the effort on other things instead"),(0,o.kt)("li",{parentName:"ul"},"At some point, you need to decide that the current option is good enough"),(0,o.kt)("li",{parentName:"ul"},"Applies to architecture, code quality, solution approaches, ..."))),(0,o.kt)("li",{parentName:"ul"},"Not everything is a priority",(0,o.kt)("ul",{parentName:"li"},(0,o.kt)("li",{parentName:"ul"},"Some things are not worth spending more time and energy on, even if you know they could be improved"),(0,o.kt)("li",{parentName:"ul"},"If you're feeling overwhelmed, find out what the real a priorities are (your team or manager could help)"),(0,o.kt)("li",{parentName:"ul"},"Pick your battles: not every discussion is a hill you should be willing to die on."))),(0,o.kt)("li",{parentName:"ul"},"Ask for help when it makes sense",(0,o.kt)("ul",{parentName:"li"},(0,o.kt)("li",{parentName:"ul"},"If you're struggling with something, you're likely to find a colleague that can help you out"),(0,o.kt)("li",{parentName:"ul"},"Asking for help is a good way to bond with your colleagues, as it shows you trust them and value their expertise"))),(0,o.kt)("li",{parentName:"ul"},"Learning",(0,o.kt)("ul",{parentName:"li"},(0,o.kt)("li",{parentName:"ul"},"You don't have to know everything! "),(0,o.kt)("li",{parentName:"ul"},"Keep learning, but accept that you will never come close to knowing everything, and neither will anyone else"),(0,o.kt)("li",{parentName:"ul"},"Learning high-level concepts already goes a long way (see also ",(0,o.kt)("a",{parentName:"li",href:"/mindset/concepts-not-code"},"Concepts, not code"),")"),(0,o.kt)("li",{parentName:"ul"},'It might help to keep a list of "topics to research later"')))),(0,o.kt)("h2",{id:"dont-take-it-too-far"},"Don't take it too far"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("em",{parentName:"li"},'"Make everything as simple as possible, but not simpler."')," - Albert Einstein"),(0,o.kt)("li",{parentName:"ul"},"Determining how simple something should be is a tradeoff"),(0,o.kt)("li",{parentName:"ul"},'You should probably not try to "simplify away" the unavoidable complexities in your domain (those complexities might even be the reason your system exists)'),(0,o.kt)("li",{parentName:"ul"},'The definition of "good enough" will likely be different based on how crucial the problem you are solving is to the system/domain',(0,o.kt)("ul",{parentName:"li"},(0,o.kt)("li",{parentName:"ul"},"It is probably not a good idea to take a lot of shortcuts in the foundations of your codebase/architecture"),(0,o.kt)("li",{parentName:"ul"},"A situation that occurs all the time in the domain probably deserves some extra effort"))),(0,o.kt)("li",{parentName:"ul"},'The definition of "good enough" will need to depend on how high the cost of failure is',(0,o.kt)("ul",{parentName:"li"},(0,o.kt)("li",{parentName:"ul"},"See also ",(0,o.kt)("a",{href:"https://www.bitlog.com/2020/02/12/why-are-we-so-bad-at-software-engineering/",target:"_blank",rel:"nofollow noopener noreferrer"},"Why are we so bad at software engineering? ",(0,o.kt)("svg",{class:"embedded-fa-icon"},(0,o.kt)("use",{href:"#external-link-alt"})))),(0,o.kt)("li",{parentName:"ul"},"If the cost of failure is high, it can make sense to do pre-mortems to identify and mitigate potential sources of failure"))),(0,o.kt)("li",{parentName:"ul"},"If you want to build a reliable system, you might have to spend more time on proper error handling than on development of the actual happy path!"),(0,o.kt)("li",{parentName:"ul"},"Relaxing quality standards can help you move fast in the beginning, but too much technical debt can slow further development to a crawl and require an enormous amount of time and energy to fix later on"),(0,o.kt)("li",{parentName:"ul"},"As always, ",(0,o.kt)("a",{parentName:"li",href:"/mindset/it-depends"},"It depends"))),(0,o.kt)("h2",{id:"resources"},"Resources"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{href:"https://www.infoq.com/articles/simplicity-manifesto-development/",target:"_blank",rel:"nofollow noopener noreferrer"},"Simplicity, Please - A Manifesto for Software Development ",(0,o.kt)("svg",{class:"embedded-fa-icon"},(0,o.kt)("use",{href:"#external-link-alt"})))),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{href:"https://blog.pragmaticengineer.com/software-architecture-is-overrated/",target:"_blank",rel:"nofollow noopener noreferrer"},"Software Architecture is Overrated, Clear and Simple Design is Underrated ",(0,o.kt)("svg",{class:"embedded-fa-icon"},(0,o.kt)("use",{href:"#external-link-alt"})))),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{href:"https://blog.bradfieldcs.com/you-are-not-google-84912cf44afb",target:"_blank",rel:"nofollow noopener noreferrer"},"You Are Not Google ",(0,o.kt)("svg",{class:"embedded-fa-icon"},(0,o.kt)("use",{href:"#external-link-alt"})))),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{href:"https://codeahoy.com/2017/08/19/yagni-cargo-cult-and-overengineering-the-planes-wont-land-just-because-you-built-a-runway-in-your-backyard/",target:"_blank",rel:"nofollow noopener noreferrer"},"YAGNI, Cargo Cult and Overengineering - the Planes Won't Land Just Because You Built a Runway in Your Backyard ",(0,o.kt)("svg",{class:"embedded-fa-icon"},(0,o.kt)("use",{href:"#external-link-alt"})))),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{href:"https://mcfunley.com/choose-boring-technology",target:"_blank",rel:"nofollow noopener noreferrer"},"Choose Boring Technology ",(0,o.kt)("svg",{class:"embedded-fa-icon"},(0,o.kt)("use",{href:"#external-link-alt"})))),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{href:"https://mxstbr.com/thoughts/tech-choice-regrets-at-spectrum",target:"_blank",rel:"nofollow noopener noreferrer"},"Tech Choices I Regret at Spectrum ",(0,o.kt)("svg",{class:"embedded-fa-icon"},(0,o.kt)("use",{href:"#external-link-alt"})))),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{href:"https://thorstenball.com/blog/2015/10/22/write-stupid-code/",target:"_blank",rel:"nofollow noopener noreferrer"},"Write Stupid Code ",(0,o.kt)("svg",{class:"embedded-fa-icon"},(0,o.kt)("use",{href:"#external-link-alt"})))),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{href:"https://hackernoon.com/less-dirty-code-2c27321g",target:"_blank",rel:"nofollow noopener noreferrer"},"Less Dirty Code ",(0,o.kt)("svg",{class:"embedded-fa-icon"},(0,o.kt)("use",{href:"#external-link-alt"})))),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{href:"https://thedailywtf.com/articles/Programming-Sucks!-Or-At-Least%2C-It-Ought-To-",target:"_blank",rel:"nofollow noopener noreferrer"},"Programming Sucks! Or At Least, It Ought To  - The Daily WTF ",(0,o.kt)("svg",{class:"embedded-fa-icon"},(0,o.kt)("use",{href:"#external-link-alt"})))),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{href:"http://www.agilenutshell.com/simplest_thing",target:"_blank",rel:"nofollow noopener noreferrer"},"The Simplest Thing That Could Possibly Work ",(0,o.kt)("svg",{class:"embedded-fa-icon"},(0,o.kt)("use",{href:"#external-link-alt"})))),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{href:"https://martinfowler.com/bliki/Yagni.html",target:"_blank",rel:"nofollow noopener noreferrer"},"YAGNI ",(0,o.kt)("svg",{class:"embedded-fa-icon"},(0,o.kt)("use",{href:"#external-link-alt"})))),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{href:"https://www.youtube.com/watch?v=6XAu4EPQRmY",target:"_blank",rel:"nofollow noopener noreferrer"},"Jonathan Blow on solving hard problems ",(0,o.kt)("svg",{class:"embedded-fa-icon"},(0,o.kt)("use",{href:"#external-link-alt"})))," (",(0,o.kt)("a",{href:"https://old.reddit.com/r/programming/comments/bx8p52/jonathan_blow_on_solving_hard_problems/eq4rl7j/",target:"_blank",rel:"nofollow noopener noreferrer"},"transcript ",(0,o.kt)("svg",{class:"embedded-fa-icon"},(0,o.kt)("use",{href:"#external-link-alt"}))),")"),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{href:"https://en.wikipedia.org/wiki/Pareto_principle",target:"_blank",rel:"nofollow noopener noreferrer"},"Pareto principle ",(0,o.kt)("svg",{class:"embedded-fa-icon"},(0,o.kt)("use",{href:"#external-link-alt"})))),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{href:"https://asthasr.github.io/posts/danger-of-simplicity/",target:"_blank",rel:"nofollow noopener noreferrer"},"The Danger of \u201cSimplicity\u201d ",(0,o.kt)("svg",{class:"embedded-fa-icon"},(0,o.kt)("use",{href:"#external-link-alt"})))),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{href:"https://danluu.com/sounds-easy/",target:"_blank",rel:"nofollow noopener noreferrer"},"I could do that in a weekend! ",(0,o.kt)("svg",{class:"embedded-fa-icon"},(0,o.kt)("use",{href:"#external-link-alt"}))))))}c.isMDXComponent=!0}}]);