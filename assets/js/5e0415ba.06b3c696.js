"use strict";(self.webpackChunkinterview_prep=self.webpackChunkinterview_prep||[]).push([[8021],{3905:function(e,t,r){r.d(t,{Zo:function(){return c},kt:function(){return d}});var n=r(7294);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function s(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function o(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?s(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):s(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function i(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},s=Object.keys(e);for(n=0;n<s.length;n++)r=s[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(n=0;n<s.length;n++)r=s[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var p=n.createContext({}),l=function(e){var t=n.useContext(p),r=t;return e&&(r="function"==typeof e?e(t):o(o({},t),e)),r},c=function(e){var t=l(e.components);return n.createElement(p.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},m=n.forwardRef((function(e,t){var r=e.components,a=e.mdxType,s=e.originalType,p=e.parentName,c=i(e,["components","mdxType","originalType","parentName"]),m=l(r),d=a,g=m["".concat(p,".").concat(d)]||m[d]||u[d]||s;return r?n.createElement(g,o(o({ref:t},c),{},{components:r})):n.createElement(g,o({ref:t},c))}));function d(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var s=r.length,o=new Array(s);o[0]=m;var i={};for(var p in t)hasOwnProperty.call(t,p)&&(i[p]=t[p]);i.originalType=e,i.mdxType="string"==typeof e?e:a,o[1]=i;for(var l=2;l<s;l++)o[l]=r[l];return n.createElement.apply(null,o)}return n.createElement.apply(null,r)}m.displayName="MDXCreateElement"},7820:function(e,t,r){r.r(t),r.d(t,{assets:function(){return c},contentTitle:function(){return p},default:function(){return d},frontMatter:function(){return i},metadata:function(){return l},toc:function(){return u}});var n=r(7462),a=r(3366),s=(r(7294),r(3905)),o=["components"],i={title:"Spread syntax, rest parameters and destructuring (JavaScript)",description:"An overview of JavaScript spread syntax, rest parameters and destructuring",last_modified:new Date("2020-05-30T13:54:15.000Z"),sidebar_label:"Spread syntax, rest parameters and destructuring"},p=void 0,l={unversionedId:"javascript/spread-syntax-rest-parameters-destructuring",id:"javascript/spread-syntax-rest-parameters-destructuring",title:"Spread syntax, rest parameters and destructuring (JavaScript)",description:"An overview of JavaScript spread syntax, rest parameters and destructuring",source:"@site/docs/javascript/spread-syntax-rest-parameters-destructuring.md",sourceDirName:"javascript",slug:"/javascript/spread-syntax-rest-parameters-destructuring",permalink:"/interview-prep/javascript/spread-syntax-rest-parameters-destructuring",draft:!1,tags:[],version:"current",frontMatter:{title:"Spread syntax, rest parameters and destructuring (JavaScript)",description:"An overview of JavaScript spread syntax, rest parameters and destructuring",last_modified:"2020-05-30T13:54:15.000Z",sidebar_label:"Spread syntax, rest parameters and destructuring"},sidebar:"docs",previous:{title:"Scope and closures",permalink:"/interview-prep/javascript/scope-closures"},next:{title:"The this keyword",permalink:"/interview-prep/javascript/this-keyword"}},c={},u=[{value:"Spread syntax",id:"spread-syntax",level:2},{value:"Rest parameters",id:"rest-parameters",level:2},{value:"Destructuring",id:"destructuring",level:2},{value:"Array destructuring",id:"array-destructuring",level:3},{value:"Object destructuring",id:"object-destructuring",level:3},{value:"Resources",id:"resources",level:2}],m={toc:u};function d(e){var t=e.components,r=(0,a.Z)(e,o);return(0,s.kt)("wrapper",(0,n.Z)({},m,r,{components:t,mdxType:"MDXLayout"}),(0,s.kt)("p",null,"An overview of JavaScript spread syntax, rest parameters and destructuring"),(0,s.kt)("h2",{id:"spread-syntax"},"Spread syntax"),(0,s.kt)("ul",null,(0,s.kt)("li",{parentName:"ul"},"Syntax: ",(0,s.kt)("inlineCode",{parentName:"li"},"...")),(0,s.kt)("li",{parentName:"ul"},"Allows expanding an array or string into individual elements/characters"),(0,s.kt)("li",{parentName:"ul"},"Allows expanding an object into key-value pairs of properties")),(0,s.kt)("p",null,"Use case: expanding array into function arguments (before spread syntax, you would need to use ",(0,s.kt)("inlineCode",{parentName:"p"},"apply")," for this)"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-java",metastring:"showLineNumbersscript",showLineNumbersscript:!0},"const test = [1, 7, 3];\nconst max = Math.max(...test); // 7\n")),(0,s.kt)("p",null,"Use case: stitching together arrays"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-java",metastring:"showLineNumbersscript",showLineNumbersscript:!0},"const a = [1, 7, 3];\nconst b = [5, ...a]; // [5, 1, 7, 3]\n")),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-java",metastring:"showLineNumbersscript",showLineNumbersscript:!0},"const c = [1];\nconst d = [2, 3];\nconst e = [...c, ...d]; // [1, 2, 3]\n")),(0,s.kt)("p",null,"Use case: shallow copy of array"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-java",metastring:"showLineNumbersscript",showLineNumbersscript:!0},"const original = [1, 2, 3];\nconst shallowCopy = [...original]\n")),(0,s.kt)("p",null,"Use case: transforming a ",(0,s.kt)("inlineCode",{parentName:"p"},"Set")," (or other iterable) into an array (easy way of filtering array by distinct values)"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-java",metastring:"showLineNumbersscript",showLineNumbersscript:!0},'const original = ["a", "b", "c", "a"];\nconst distinct = [...new Set(original)]; // ["a", "b", "c"];\n')),(0,s.kt)("p",null,"Use case: combining objects (alternative to ",(0,s.kt)("inlineCode",{parentName:"p"},"Object.assign"),")"),(0,s.kt)("p",null,"Note: in case of conflicts, newest overwrites oldest"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-java",metastring:"showLineNumbersscript",showLineNumbersscript:!0},'const a = { prop1: "a", prop2: true };\nconst b = { prop3: 3, ...a }; // { prop3: 3, prop1: "a", prop2: true }\n')),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-java",metastring:"showLineNumbersscript",showLineNumbersscript:!0},'const a = { prop1: "a", prop2: true };\nconst b = { prop2: false, prop3: 3 };\nconst c = { ...a, ...b }; // { prop1: "a", prop2: false, prop3: 3 }\n')),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-java",metastring:"showLineNumbersscript",showLineNumbersscript:!0},"const a = { prop2: true };\nconst b = { prop2: undefined };\nconst c = { ...a, ...b }; // {} (undefined overwrites true)\n")),(0,s.kt)("h2",{id:"rest-parameters"},"Rest parameters"),(0,s.kt)("ul",null,(0,s.kt)("li",{parentName:"ul"},"Syntax: ",(0,s.kt)("inlineCode",{parentName:"li"},"...")),(0,s.kt)("li",{parentName:"ul"},"Allows to represent any number of arguments as an array")),(0,s.kt)("p",null,"Example:"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-java",metastring:"showLineNumbersscript",showLineNumbersscript:!0},"function test(...input) {\n    return input;\n}\n\ntest(1, 2, 3); // [1, 2, 3];\n")),(0,s.kt)("h2",{id:"destructuring"},"Destructuring"),(0,s.kt)("p",null,"Allows unpacking array elements or object properties into separate variables"),(0,s.kt)("h3",{id:"array-destructuring"},"Array destructuring"),(0,s.kt)("p",null,"Use case: unpacking array elements"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-java",metastring:"showLineNumbersscript",showLineNumbersscript:!0},"const x = [1, 2, 3, 4, 5];\nconst [a, b] = x; // a = 1, b = 1\nconst [c, ...rest] = x; // c = 1, rest = [2, 3, 4, 5]\nconst [, d] = x; // d = 2\n")),(0,s.kt)("p",null,"Use case: swapping values of variables"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-java",metastring:"showLineNumbersscript",showLineNumbersscript:!0},"[a, b] = [b, a];\n")),(0,s.kt)("p",null,"Working with default values:"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-java",metastring:"showLineNumbersscript",showLineNumbersscript:!0},"const [a = 1, b = 2] = [3]; // a = 3, b = 2\n")),(0,s.kt)("h3",{id:"object-destructuring"},"Object destructuring"),(0,s.kt)("p",null,"Use case: unpacking object properties"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-java",metastring:"showLineNumbersscript",showLineNumbersscript:!0},'const a = { prop1: "a", prop2: false, prop3: 3 };\nconst { prop1 } = a; // prop1 = "a"\nconst { prop2, ...b } = a; // prop2 = false, b = { prop1: "a", prop3: 3 }\n')),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-java",metastring:"showLineNumbersscript",showLineNumbersscript:!0},'const a = { prop1: "a" };\nconst { prop1: newName } = a; // newName = "a"\n')),(0,s.kt)("p",null,"Working with default values"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-java",metastring:"showLineNumbersscript",showLineNumbersscript:!0},'const a = { prop1: "a" };\nconst { prop1 = "b", prop2 = false } = a; // prop1 = "a", prop2 = false\n')),(0,s.kt)("p",null,"Combining everything, plus default parameters"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-java",metastring:"showLineNumbersscript",showLineNumbersscript:!0},'function test({ name: firstName = "John", lastName = "Doe" } = {}) {\n    console.log(firstName + " " + lastName);\n}\n\ntest(); // John Doe\ntest({}); // John Doe\ntest({ lastName: "Bovi" }); // John Bovi\ntest({ name: "Cookie" }); // Cookie Doe\ntest({ lastName: undefined }); // John Doe\ntest({ lastName: null }); // John null\n')),(0,s.kt)("h2",{id:"resources"},"Resources"),(0,s.kt)("ul",null,(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("a",{href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Spread_syntax",target:"_blank",rel:"nofollow noopener noreferrer"},"Spread syntax ",(0,s.kt)("svg",{class:"embedded-fa-icon"},(0,s.kt)("use",{href:"#external-link-alt"})))),(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("a",{href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Functions/rest_parameters",target:"_blank",rel:"nofollow noopener noreferrer"},"Rest parameters ",(0,s.kt)("svg",{class:"embedded-fa-icon"},(0,s.kt)("use",{href:"#external-link-alt"})))),(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("a",{href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Destructuring_assignment",target:"_blank",rel:"nofollow noopener noreferrer"},"Destructuring assignment ",(0,s.kt)("svg",{class:"embedded-fa-icon"},(0,s.kt)("use",{href:"#external-link-alt"}))))))}d.isMDXComponent=!0}}]);