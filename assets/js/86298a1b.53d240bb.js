"use strict";(self.webpackChunkinterview_prep=self.webpackChunkinterview_prep||[]).push([[8267],{3905:function(e,n,t){t.d(n,{Zo:function(){return l},kt:function(){return g}});var r=t(7294);function a(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function s(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function i(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?s(Object(t),!0).forEach((function(n){a(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):s(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function p(e,n){if(null==e)return{};var t,r,a=function(e,n){if(null==e)return{};var t,r,a={},s=Object.keys(e);for(r=0;r<s.length;r++)t=s[r],n.indexOf(t)>=0||(a[t]=e[t]);return a}(e,n);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(r=0;r<s.length;r++)t=s[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var o=r.createContext({}),u=function(e){var n=r.useContext(o),t=n;return e&&(t="function"==typeof e?e(n):i(i({},n),e)),t},l=function(e){var n=u(e.components);return r.createElement(o.Provider,{value:n},e.children)},c={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},d=r.forwardRef((function(e,n){var t=e.components,a=e.mdxType,s=e.originalType,o=e.parentName,l=p(e,["components","mdxType","originalType","parentName"]),d=u(t),g=a,y=d["".concat(o,".").concat(g)]||d[g]||c[g]||s;return t?r.createElement(y,i(i({ref:n},l),{},{components:t})):r.createElement(y,i({ref:n},l))}));function g(e,n){var t=arguments,a=n&&n.mdxType;if("string"==typeof e||a){var s=t.length,i=new Array(s);i[0]=d;var p={};for(var o in n)hasOwnProperty.call(n,o)&&(p[o]=n[o]);p.originalType=e,p.mdxType="string"==typeof e?e:a,i[1]=p;for(var u=2;u<s;u++)i[u]=t[u];return r.createElement.apply(null,i)}return r.createElement.apply(null,t)}d.displayName="MDXCreateElement"},5323:function(e,n,t){t.r(n),t.d(n,{assets:function(){return l},contentTitle:function(){return o},default:function(){return g},frontMatter:function(){return p},metadata:function(){return u},toc:function(){return c}});var r=t(7462),a=t(3366),s=(t(7294),t(3905)),i=["components"],p={title:"Type guards (TypeScript)",description:"An overview of how to use TypeScript type guards, including creating your own custom ones",last_modified:new Date("2020-10-17T18:41:29.849Z"),sidebar_label:"Type guards"},o=void 0,u={unversionedId:"javascript/typescript/type-guards",id:"javascript/typescript/type-guards",title:"Type guards (TypeScript)",description:"An overview of how to use TypeScript type guards, including creating your own custom ones",source:"@site/docs/javascript/typescript/type-guards.md",sourceDirName:"javascript/typescript",slug:"/javascript/typescript/type-guards",permalink:"/interview-prep/javascript/typescript/type-guards",draft:!1,tags:[],version:"current",frontMatter:{title:"Type guards (TypeScript)",description:"An overview of how to use TypeScript type guards, including creating your own custom ones",last_modified:"2020-10-17T18:41:29.849Z",sidebar_label:"Type guards"},sidebar:"docs",previous:{title:"Runtime type checking in TypeScript",permalink:"/interview-prep/javascript/typescript/runtime-type-checking"},next:{title:"Medium",permalink:"/interview-prep/leetcode-questions/medium"}},l={},c=[{value:"Basic idea",id:"basic-idea",level:2},{value:"Built-in type guards",id:"built-in-type-guards",level:2},{value:"<code>typeof</code> type guards",id:"typeof-type-guards",level:3},{value:"<code>instanceof</code> type guards",id:"instanceof-type-guards",level:3},{value:"Type guards based on common property",id:"type-guards-based-on-common-property",level:3},{value:"Type guards based on available properties",id:"type-guards-based-on-available-properties",level:3},{value:"User-defined type guards",id:"user-defined-type-guards",level:2},{value:"Resources",id:"resources",level:2}],d={toc:c};function g(e){var n=e.components,t=(0,a.Z)(e,i);return(0,s.kt)("wrapper",(0,r.Z)({},d,t,{components:n,mdxType:"MDXLayout"}),(0,s.kt)("p",null,"An overview of how to use TypeScript type guards, including creating your own custom ones"),(0,s.kt)("h2",{id:"basic-idea"},"Basic idea"),(0,s.kt)("ul",null,(0,s.kt)("li",{parentName:"ul"},"Test, at runtime, whether a certain value is of a certain type"),(0,s.kt)("li",{parentName:"ul"},"TypeScript compiler can use this information to make better assumptions")),(0,s.kt)("h2",{id:"built-in-type-guards"},"Built-in type guards"),(0,s.kt)("h3",{id:"typeof-type-guards"},(0,s.kt)("inlineCode",{parentName:"h3"},"typeof")," type guards"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-typescript"},'function test(input: string | string[]) {\n    input.split(""); // compiler error\n    input.filter(() => true); // compiler error\n\n    if (typeof input === "string") {\n        // input has type string here\n        return input.split("");\n    } else {\n        // input has type string[] here\n        return input.filter(() => true);\n    }\n}\n')),(0,s.kt)("h3",{id:"instanceof-type-guards"},(0,s.kt)("inlineCode",{parentName:"h3"},"instanceof")," type guards"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-typescript"},"class ClassA {\n    methodA() {\n        return true;\n    }\n}\n\nclass ClassB {\n    methodB() {\n        return true;\n    }\n}\n\nfunction test(instance: ClassA | ClassB) {\n    instance.methodA(); // compiler error\n    instance.methodB(); // compiler error\n\n    if (instance instanceof ClassA) {\n        // instance has type ClassA here\n        instance.methodA();\n    } else {\n        // instance has type ClassB here\n        instance.methodB();\n    }\n}\n")),(0,s.kt)("h3",{id:"type-guards-based-on-common-property"},"Type guards based on common property"),(0,s.kt)("p",null,"Can be used to implement ",(0,s.kt)("em",{parentName:"p"},"Discriminating Unions")," (see ",(0,s.kt)("a",{href:"https://www.typescriptlang.org/docs/handbook/unions-and-intersections.html#discriminating-unions",target:"_blank",rel:"nofollow noopener noreferrer"},"Discriminating Unions ",(0,s.kt)("svg",{class:"embedded-fa-icon"},(0,s.kt)("use",{href:"#external-link-alt"}))),"):"),(0,s.kt)("ul",null,(0,s.kt)("li",{parentName:"ul"},"Types with common property indicating type"),(0,s.kt)("li",{parentName:"ul"},"A type alias that is the union of these types"),(0,s.kt)("li",{parentName:"ul"},"Type guards on the common property")),(0,s.kt)("p",null,"Example:"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-typescript"},'interface Square {\n    kind: "square";\n    size: number;\n}\n\ninterface Rectangle {\n    kind: "rectangle";\n    width: number;\n    height: number;\n}\n\ninterface Circle {\n    kind: "circle";\n    radius: number;\n}\n\ntype Shape = Square | Rectangle | Circle;\n\nfunction area(shape: Shape) {\n    switch (shape.kind) {\n        case "square":\n            // shape has type Square here\n            return shape.size * shape.size;\n        case "rectangle":\n            // shape has type Rectangle here\n            return shape.height * shape.width;\n        case "circle":\n            // shape has type Circle here\n            return Math.PI * shape.radius ** 2;\n    }\n}\n')),(0,s.kt)("p",null,"TypeScript recognizes that the common property ",(0,s.kt)("inlineCode",{parentName:"p"},"kind")," determines the type here"),(0,s.kt)("p",null,"Also works with regular if-statements:"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-typescript"},'function test(shape: Shape) {\n    if (shape.kind === "rectangle") {\n        // shape has type Rectangle here\n        console.log(shape.height);\n    }\n}\n')),(0,s.kt)("h3",{id:"type-guards-based-on-available-properties"},"Type guards based on available properties"),(0,s.kt)("p",null,"Example code (uses the interfaces from the above example):"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-typescript"},'function test(shape: Shape) {\n    if ("radius" in shape) {\n        // shape has type Circle here\n    }\n}\n')),(0,s.kt)("h2",{id:"user-defined-type-guards"},"User-defined type guards"),(0,s.kt)("p",null,"You can also define your own type guards that perform the type check at runtime by looking at certain properties of the object you receive"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-typescript"},'interface Message {\n    messageType: string;\n}\n\ninterface UserMessage extends Message {\n    messageType: "user";\n    userId: number;\n}\n\ninterface OrderMessage extends Message {\n    messageType: "order";\n    orderId: number;\n}\n\nfunction isMessage(arg: any): arg is Message {\n    return typeof arg.messageType === "string";\n}\n\nfunction isUserMessage(arg: Message): arg is UserMessage {\n    return arg.messageType === "user";\n}\n\nfunction isOrderMessage(arg: Message): arg is OrderMessage {\n    return arg.messageType === "order";\n}\n\nfunction test(input: object) {\n    console.log(input.messageType); // compiler error\n\n    if (isMessage(input)) {\n        // input has type Message here\n\n        console.log(input.messageType);\n        console.log(input.userId); // compiler error\n        console.log(input.orderId); // compiler error\n\n        if (isUserMessage(input)) {\n            // input has type UserMessage here\n            console.log(input.userId);\n        } else if (isOrderMessage(input)) {            \n            // input has type OrderMessage here\n            console.log(input.orderId);\n        }\n    }\n}\n')),(0,s.kt)("h2",{id:"resources"},"Resources"),(0,s.kt)("ul",null,(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("a",{href:"https://www.typescriptlang.org/docs/handbook/advanced-types.html",target:"_blank",rel:"nofollow noopener noreferrer"},"Advanced Types ",(0,s.kt)("svg",{class:"embedded-fa-icon"},(0,s.kt)("use",{href:"#external-link-alt"})))),(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("a",{href:"https://www.typescriptlang.org/docs/handbook/unions-and-intersections.html",target:"_blank",rel:"nofollow noopener noreferrer"},"Unions and Intersection Types ",(0,s.kt)("svg",{class:"embedded-fa-icon"},(0,s.kt)("use",{href:"#external-link-alt"}))))))}g.isMDXComponent=!0}}]);