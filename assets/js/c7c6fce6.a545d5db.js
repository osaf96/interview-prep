"use strict";(self.webpackChunkinterview_prep=self.webpackChunkinterview_prep||[]).push([[5453],{3905:function(e,t,n){n.d(t,{Zo:function(){return p},kt:function(){return d}});var r=n(7294);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function a(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,i=function(e,t){if(null==e)return{};var n,r,i={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var s=r.createContext({}),c=function(e){var t=r.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):a(a({},t),e)),n},p=function(e){var t=c(e.components);return r.createElement(s.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},f=r.forwardRef((function(e,t){var n=e.components,i=e.mdxType,o=e.originalType,s=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),f=c(n),d=i,h=f["".concat(s,".").concat(d)]||f[d]||u[d]||o;return n?r.createElement(h,a(a({ref:t},p),{},{components:n})):r.createElement(h,a({ref:t},p))}));function d(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var o=n.length,a=new Array(o);a[0]=f;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l.mdxType="string"==typeof e?e:i,a[1]=l;for(var c=2;c<o;c++)a[c]=n[c];return r.createElement.apply(null,a)}return r.createElement.apply(null,n)}f.displayName="MDXCreateElement"},8729:function(e,t,n){n.r(t),n.d(t,{assets:function(){return p},contentTitle:function(){return s},default:function(){return d},frontMatter:function(){return l},metadata:function(){return c},toc:function(){return u}});var r=n(7462),i=n(3366),o=(n(7294),n(3905)),a=["components"],l={title:"DFS(Depth First Search)",description:"This will cover the most of the topics that will be part of the Depth First Search.",last_modified:new Date("2022-06-08T15:36:32.363Z"),sidebar_label:"Depth First Search"},s=void 0,c={unversionedId:"preparation/dfs",id:"preparation/dfs",title:"DFS(Depth First Search)",description:"This will cover the most of the topics that will be part of the Depth First Search.",source:"@site/docs/preparation/dfs.md",sourceDirName:"preparation",slug:"/preparation/dfs",permalink:"/interview-prep/preparation/dfs",draft:!1,tags:[],version:"current",frontMatter:{title:"DFS(Depth First Search)",description:"This will cover the most of the topics that will be part of the Depth First Search.",last_modified:"2022-06-08T15:36:32.363Z",sidebar_label:"Depth First Search"},sidebar:"docs",previous:{title:"Deque",permalink:"/interview-prep/preparation/dequeue"},next:{title:"Graph",permalink:"/interview-prep/preparation/graph"}},p={},u=[{value:"Introduction",id:"introduction",level:2},{value:"Implementation of DFS",id:"implementation-of-dfs",level:2},{value:"Application of DFS",id:"application-of-dfs",level:2},{value:"Counting all the possible paths from source to destination in a Binary tree.",id:"counting-all-the-possible-paths-from-source-to-destination-in-a-binary-tree",level:3},{value:"Finding the longest path in a Binary tree.",id:"finding-the-longest-path-in-a-binary-tree",level:3},{value:"Backtracking related problems can be solved using DFS.",id:"backtracking-related-problems-can-be-solved-using-dfs",level:3}],f={toc:u};function d(e){var t=e.components,n=(0,i.Z)(e,a);return(0,o.kt)("wrapper",(0,r.Z)({},f,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("p",null,"This will cover the most of the topics that will be part of the Depth First Search."),(0,o.kt)("h2",{id:"introduction"},"Introduction"),(0,o.kt)("h2",{id:"implementation-of-dfs"},"Implementation of DFS"),(0,o.kt)("p",null,(0,o.kt)("inlineCode",{parentName:"p"},"Both the below implementations are same. The only difference is, the first one uses Stack which you can visualize for the second case, how the internal stack is used. Both are the post order traversal of a Binary Tree.")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-java",metastring:"showLineNumbers",showLineNumbers:!0},"public class Solution{\n    public void dfs(Node root){\n        Stack<Node> stack = new Stack<>();\n        Node current = root;\n        while(current != null || !stack.isEmpty()){\n            if(current != null){\n                stack.push(current);\n                current = current.left;\n            }else{\n                current = stack.pop();\n                System.out.println(current.data);\n                current = current.right;\n            }\n        }\n    }\n}\n")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-java",metastring:"showLineNumbers",showLineNumbers:!0},"public class Solution{\n    public void dfs(Node root){\n        if(root == null) return;\n        System.out.println(root.data);\n        dfs(root.left);\n        dfs(root.right);\n    }\n}\n")),(0,o.kt)("h2",{id:"application-of-dfs"},"Application of DFS"),(0,o.kt)("h3",{id:"counting-all-the-possible-paths-from-source-to-destination-in-a-binary-tree"},"Counting all the possible paths from source to destination in a Binary tree."),(0,o.kt)("h3",{id:"finding-the-longest-path-in-a-binary-tree"},"Finding the longest path in a Binary tree."),(0,o.kt)("h3",{id:"backtracking-related-problems-can-be-solved-using-dfs"},"Backtracking related problems can be solved using DFS."))}d.isMDXComponent=!0}}]);