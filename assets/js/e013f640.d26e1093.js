"use strict";(self.webpackChunkinterview_prep=self.webpackChunkinterview_prep||[]).push([[8187],{3905:function(e,s,a){a.d(s,{Zo:function(){return c},kt:function(){return h}});var i=a(7294);function t(e,s,a){return s in e?Object.defineProperty(e,s,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[s]=a,e}function l(e,s){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);s&&(i=i.filter((function(s){return Object.getOwnPropertyDescriptor(e,s).enumerable}))),a.push.apply(a,i)}return a}function r(e){for(var s=1;s<arguments.length;s++){var a=null!=arguments[s]?arguments[s]:{};s%2?l(Object(a),!0).forEach((function(s){t(e,s,a[s])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):l(Object(a)).forEach((function(s){Object.defineProperty(e,s,Object.getOwnPropertyDescriptor(a,s))}))}return e}function u(e,s){if(null==e)return{};var a,i,t=function(e,s){if(null==e)return{};var a,i,t={},l=Object.keys(e);for(i=0;i<l.length;i++)a=l[i],s.indexOf(a)>=0||(t[a]=e[a]);return t}(e,s);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(i=0;i<l.length;i++)a=l[i],s.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(t[a]=e[a])}return t}var d=i.createContext({}),n=function(e){var s=i.useContext(d),a=s;return e&&(a="function"==typeof e?e(s):r(r({},s),e)),a},c=function(e){var s=n(e.components);return i.createElement(d.Provider,{value:s},e.children)},g={inlineCode:"code",wrapper:function(e){var s=e.children;return i.createElement(i.Fragment,{},s)}},p=i.forwardRef((function(e,s){var a=e.components,t=e.mdxType,l=e.originalType,d=e.parentName,c=u(e,["components","mdxType","originalType","parentName"]),p=n(a),h=t,o=p["".concat(d,".").concat(h)]||p[h]||g[h]||l;return a?i.createElement(o,r(r({ref:s},c),{},{components:a})):i.createElement(o,r({ref:s},c))}));function h(e,s){var a=arguments,t=s&&s.mdxType;if("string"==typeof e||t){var l=a.length,r=new Array(l);r[0]=p;var u={};for(var d in s)hasOwnProperty.call(s,d)&&(u[d]=s[d]);u.originalType=e,u.mdxType="string"==typeof e?e:t,r[1]=u;for(var n=2;n<l;n++)r[n]=a[n];return i.createElement.apply(null,r)}return i.createElement.apply(null,a)}p.displayName="MDXCreateElement"},939:function(e,s,a){a.r(s),a.d(s,{assets:function(){return c},contentTitle:function(){return d},default:function(){return h},frontMatter:function(){return u},metadata:function(){return n},toc:function(){return g}});var i=a(7462),t=a(3366),l=(a(7294),a(3905)),r=["components"],u={title:"Medium",description:"This will cover up all the medium questions that are available on Leetcode.",last_modified:new Date("2022-06-10T00:17:44.174Z"),sidebar_label:"Medium"},d=void 0,n={unversionedId:"leetcode-questions/medium",id:"leetcode-questions/medium",title:"Medium",description:"This will cover up all the medium questions that are available on Leetcode.",source:"@site/docs/leetcode-questions/medium.md",sourceDirName:"leetcode-questions",slug:"/leetcode-questions/medium",permalink:"/interview-prep/leetcode-questions/medium",draft:!1,tags:[],version:"current",frontMatter:{title:"Medium",description:"This will cover up all the medium questions that are available on Leetcode.",last_modified:"2022-06-10T00:17:44.174Z",sidebar_label:"Medium"},sidebar:"docs",previous:{title:"Type guards",permalink:"/interview-prep/javascript/typescript/type-guards"},next:{title:"Solving Leetcode Questions",permalink:"/interview-prep/leetcode-questions/solving-leetcode-problems"}},c={},g=[{value:"Add Two Numbers",id:"add-two-numbers",level:2},{value:"Inputs",id:"inputs",level:3},{value:"Sub-problems",id:"sub-problems",level:3},{value:"Edge Cases",id:"edge-cases",level:3},{value:"Further Readings",id:"further-readings",level:3},{value:"Longest Substring Without Repeating Characters",id:"longest-substring-without-repeating-characters",level:2},{value:"Inputs",id:"inputs-1",level:3},{value:"Sub-problems",id:"sub-problems-1",level:3},{value:"Edge Cases",id:"edge-cases-1",level:3},{value:"Further Readings",id:"further-readings-1",level:3},{value:"Longest Palindromic Substring",id:"longest-palindromic-substring",level:2},{value:"Inputs",id:"inputs-2",level:3},{value:"Sub-problems",id:"sub-problems-2",level:3},{value:"Edge Cases",id:"edge-cases-2",level:3},{value:"Further Readings",id:"further-readings-2",level:3},{value:"Zigzag Conversion",id:"zigzag-conversion",level:2},{value:"Inputs",id:"inputs-3",level:3},{value:"Sub-problems",id:"sub-problems-3",level:3},{value:"Edge Cases",id:"edge-cases-3",level:3},{value:"Further Readings",id:"further-readings-3",level:3},{value:"Reverse Integer",id:"reverse-integer",level:2},{value:"Inputs",id:"inputs-4",level:3},{value:"Sub-problems",id:"sub-problems-4",level:3},{value:"Edge Cases",id:"edge-cases-4",level:3},{value:"Further Readings",id:"further-readings-4",level:3},{value:"String to Integer (atoi)",id:"string-to-integer-atoi",level:2},{value:"Inputs",id:"inputs-5",level:3},{value:"Sub-problems",id:"sub-problems-5",level:3},{value:"Edge Cases",id:"edge-cases-5",level:3},{value:"Further Readings",id:"further-readings-5",level:3},{value:"Container With Most Water",id:"container-with-most-water",level:2},{value:"Inputs",id:"inputs-6",level:3},{value:"Sub-problems",id:"sub-problems-6",level:3},{value:"Edge Cases",id:"edge-cases-6",level:3},{value:"Further Readings",id:"further-readings-6",level:3},{value:"Integer to Roman",id:"integer-to-roman",level:2},{value:"Inputs",id:"inputs-7",level:3},{value:"Sub-problems",id:"sub-problems-7",level:3},{value:"Edge Cases",id:"edge-cases-7",level:3},{value:"Further Readings",id:"further-readings-7",level:3},{value:"3Sum",id:"3sum",level:2},{value:"Inputs",id:"inputs-8",level:3},{value:"Sub-problems",id:"sub-problems-8",level:3},{value:"Edge Cases",id:"edge-cases-8",level:3},{value:"Further Readings",id:"further-readings-8",level:3},{value:"3Sum Closest",id:"3sum-closest",level:2},{value:"Inputs",id:"inputs-9",level:3},{value:"Sub-problems",id:"sub-problems-9",level:3},{value:"Edge Cases",id:"edge-cases-9",level:3},{value:"Further Readings",id:"further-readings-9",level:3},{value:"Letter Combinations of a Phone Number",id:"letter-combinations-of-a-phone-number",level:2},{value:"Inputs",id:"inputs-10",level:3},{value:"Sub-problems",id:"sub-problems-10",level:3},{value:"Edge Cases",id:"edge-cases-10",level:3},{value:"Further Readings",id:"further-readings-10",level:3},{value:"4Sum",id:"4sum",level:2},{value:"Inputs",id:"inputs-11",level:3},{value:"Sub-problems",id:"sub-problems-11",level:3},{value:"Edge Cases",id:"edge-cases-11",level:3},{value:"Further Readings",id:"further-readings-11",level:3},{value:"Remove Nth Node From End of List",id:"remove-nth-node-from-end-of-list",level:2},{value:"Inputs",id:"inputs-12",level:3},{value:"Sub-problems",id:"sub-problems-12",level:3},{value:"Edge Cases",id:"edge-cases-12",level:3},{value:"Further Readings",id:"further-readings-12",level:3},{value:"Generate Parentheses",id:"generate-parentheses",level:2},{value:"Inputs",id:"inputs-13",level:3},{value:"Sub-problems",id:"sub-problems-13",level:3},{value:"Edge Cases",id:"edge-cases-13",level:3},{value:"Further Readings",id:"further-readings-13",level:3},{value:"Swap Nodes in Pairs",id:"swap-nodes-in-pairs",level:2},{value:"Inputs",id:"inputs-14",level:3},{value:"Sub-problems",id:"sub-problems-14",level:3},{value:"Edge Cases",id:"edge-cases-14",level:3},{value:"Further Readings",id:"further-readings-14",level:3},{value:"Divide Two Integers",id:"divide-two-integers",level:2},{value:"Inputs",id:"inputs-15",level:3},{value:"Sub-problems",id:"sub-problems-15",level:3},{value:"Edge Cases",id:"edge-cases-15",level:3},{value:"Further Readings",id:"further-readings-15",level:3},{value:"Next Permutation",id:"next-permutation",level:2},{value:"Inputs",id:"inputs-16",level:3},{value:"Sub-problems",id:"sub-problems-16",level:3},{value:"Edge Cases",id:"edge-cases-16",level:3},{value:"Further Readings",id:"further-readings-16",level:3},{value:"Search in Rotated Sorted Array",id:"search-in-rotated-sorted-array",level:2},{value:"Inputs",id:"inputs-17",level:3},{value:"Sub-problems",id:"sub-problems-17",level:3},{value:"Edge Cases",id:"edge-cases-17",level:3},{value:"Further Readings",id:"further-readings-17",level:3},{value:"Find First and Last Position of Element in Sorted Array",id:"find-first-and-last-position-of-element-in-sorted-array",level:2},{value:"Inputs",id:"inputs-18",level:3},{value:"Sub-problems",id:"sub-problems-18",level:3},{value:"Edge Cases",id:"edge-cases-18",level:3},{value:"Further Readings",id:"further-readings-18",level:3},{value:"Valid Sudoku",id:"valid-sudoku",level:2},{value:"Inputs",id:"inputs-19",level:3},{value:"Sub-problems",id:"sub-problems-19",level:3},{value:"Edge Cases",id:"edge-cases-19",level:3},{value:"Further Readings",id:"further-readings-19",level:3},{value:"Count and Say",id:"count-and-say",level:2},{value:"Inputs",id:"inputs-20",level:3},{value:"Sub-problems",id:"sub-problems-20",level:3},{value:"Edge Cases",id:"edge-cases-20",level:3},{value:"Further Readings",id:"further-readings-20",level:3},{value:"Combination Sum",id:"combination-sum",level:2},{value:"Inputs",id:"inputs-21",level:3},{value:"Sub-problems",id:"sub-problems-21",level:3},{value:"Edge Cases",id:"edge-cases-21",level:3},{value:"Further Readings",id:"further-readings-21",level:3},{value:"Combination Sum II",id:"combination-sum-ii",level:2},{value:"Inputs",id:"inputs-22",level:3},{value:"Sub-problems",id:"sub-problems-22",level:3},{value:"Edge Cases",id:"edge-cases-22",level:3},{value:"Further Readings",id:"further-readings-22",level:3},{value:"Multiply Strings",id:"multiply-strings",level:2},{value:"Inputs",id:"inputs-23",level:3},{value:"Sub-problems",id:"sub-problems-23",level:3},{value:"Edge Cases",id:"edge-cases-23",level:3},{value:"Further Readings",id:"further-readings-23",level:3},{value:"Jump Game II",id:"jump-game-ii",level:2},{value:"Inputs",id:"inputs-24",level:3},{value:"Sub-problems",id:"sub-problems-24",level:3},{value:"Edge Cases",id:"edge-cases-24",level:3},{value:"Further Readings",id:"further-readings-24",level:3},{value:"Permutations",id:"permutations",level:2},{value:"Inputs",id:"inputs-25",level:3},{value:"Sub-problems",id:"sub-problems-25",level:3},{value:"Edge Cases",id:"edge-cases-25",level:3},{value:"Further Readings",id:"further-readings-25",level:3},{value:"Permutations II",id:"permutations-ii",level:2},{value:"Inputs",id:"inputs-26",level:3},{value:"Sub-problems",id:"sub-problems-26",level:3},{value:"Edge Cases",id:"edge-cases-26",level:3},{value:"Further Readings",id:"further-readings-26",level:3},{value:"Rotate Image",id:"rotate-image",level:2},{value:"Inputs",id:"inputs-27",level:3},{value:"Sub-problems",id:"sub-problems-27",level:3},{value:"Edge Cases",id:"edge-cases-27",level:3},{value:"Further Readings",id:"further-readings-27",level:3},{value:"Group Anagrams",id:"group-anagrams",level:2},{value:"Inputs",id:"inputs-28",level:3},{value:"Sub-problems",id:"sub-problems-28",level:3},{value:"Edge Cases",id:"edge-cases-28",level:3},{value:"Further Readings",id:"further-readings-28",level:3},{value:"Pow(x, n)",id:"powx-n",level:2},{value:"Inputs",id:"inputs-29",level:3},{value:"Sub-problems",id:"sub-problems-29",level:3},{value:"Edge Cases",id:"edge-cases-29",level:3},{value:"Further Readings",id:"further-readings-29",level:3},{value:"Spiral Matrix",id:"spiral-matrix",level:2},{value:"Inputs",id:"inputs-30",level:3},{value:"Sub-problems",id:"sub-problems-30",level:3},{value:"Edge Cases",id:"edge-cases-30",level:3},{value:"Further Readings",id:"further-readings-30",level:3},{value:"Jump Game",id:"jump-game",level:2},{value:"Inputs",id:"inputs-31",level:3},{value:"Sub-problems",id:"sub-problems-31",level:3},{value:"Edge Cases",id:"edge-cases-31",level:3},{value:"Further Readings",id:"further-readings-31",level:3},{value:"Merge Intervals",id:"merge-intervals",level:2},{value:"Inputs",id:"inputs-32",level:3},{value:"Sub-problems",id:"sub-problems-32",level:3},{value:"Edge Cases",id:"edge-cases-32",level:3},{value:"Further Readings",id:"further-readings-32",level:3},{value:"Insert Interval",id:"insert-interval",level:2},{value:"Inputs",id:"inputs-33",level:3},{value:"Sub-problems",id:"sub-problems-33",level:3},{value:"Edge Cases",id:"edge-cases-33",level:3},{value:"Further Readings",id:"further-readings-33",level:3},{value:"Spiral Matrix II",id:"spiral-matrix-ii",level:2},{value:"Inputs",id:"inputs-34",level:3},{value:"Sub-problems",id:"sub-problems-34",level:3},{value:"Edge Cases",id:"edge-cases-34",level:3},{value:"Further Readings",id:"further-readings-34",level:3},{value:"Rotate List",id:"rotate-list",level:2},{value:"Inputs",id:"inputs-35",level:3},{value:"Sub-problems",id:"sub-problems-35",level:3},{value:"Edge Cases",id:"edge-cases-35",level:3},{value:"Further Readings",id:"further-readings-35",level:3},{value:"Unique Paths",id:"unique-paths",level:2},{value:"Inputs",id:"inputs-36",level:3},{value:"Sub-problems",id:"sub-problems-36",level:3},{value:"Edge Cases",id:"edge-cases-36",level:3},{value:"Further Readings",id:"further-readings-36",level:3},{value:"Unique Paths II",id:"unique-paths-ii",level:2},{value:"Inputs",id:"inputs-37",level:3},{value:"Sub-problems",id:"sub-problems-37",level:3},{value:"Edge Cases",id:"edge-cases-37",level:3},{value:"Further Readings",id:"further-readings-37",level:3},{value:"Minimum Path Sum",id:"minimum-path-sum",level:2},{value:"Inputs",id:"inputs-38",level:3},{value:"Sub-problems",id:"sub-problems-38",level:3},{value:"Edge Cases",id:"edge-cases-38",level:3},{value:"Further Readings",id:"further-readings-38",level:3},{value:"Simplify Path",id:"simplify-path",level:2},{value:"Inputs",id:"inputs-39",level:3},{value:"Sub-problems",id:"sub-problems-39",level:3},{value:"Edge Cases",id:"edge-cases-39",level:3},{value:"Further Readings",id:"further-readings-39",level:3},{value:"Set Matrix Zeroes",id:"set-matrix-zeroes",level:2},{value:"Inputs",id:"inputs-40",level:3},{value:"Sub-problems",id:"sub-problems-40",level:3},{value:"Edge Cases",id:"edge-cases-40",level:3},{value:"Further Readings",id:"further-readings-40",level:3},{value:"Search a 2D Matrix",id:"search-a-2d-matrix",level:2},{value:"Inputs",id:"inputs-41",level:3},{value:"Sub-problems",id:"sub-problems-41",level:3},{value:"Edge Cases",id:"edge-cases-41",level:3},{value:"Further Readings",id:"further-readings-41",level:3},{value:"Sort Colors",id:"sort-colors",level:2},{value:"Inputs",id:"inputs-42",level:3},{value:"Sub-problems",id:"sub-problems-42",level:3},{value:"Edge Cases",id:"edge-cases-42",level:3},{value:"Further Readings",id:"further-readings-42",level:3},{value:"Combinations",id:"combinations",level:2},{value:"Inputs",id:"inputs-43",level:3},{value:"Sub-problems",id:"sub-problems-43",level:3},{value:"Edge Cases",id:"edge-cases-43",level:3},{value:"Further Readings",id:"further-readings-43",level:3},{value:"Subsets",id:"subsets",level:2},{value:"Inputs",id:"inputs-44",level:3},{value:"Sub-problems",id:"sub-problems-44",level:3},{value:"Edge Cases",id:"edge-cases-44",level:3},{value:"Further Readings",id:"further-readings-44",level:3},{value:"Word Search",id:"word-search",level:2},{value:"Inputs",id:"inputs-45",level:3},{value:"Sub-problems",id:"sub-problems-45",level:3},{value:"Edge Cases",id:"edge-cases-45",level:3},{value:"Further Readings",id:"further-readings-45",level:3},{value:"Remove Duplicates from Sorted Array II",id:"remove-duplicates-from-sorted-array-ii",level:2},{value:"Inputs",id:"inputs-46",level:3},{value:"Sub-problems",id:"sub-problems-46",level:3},{value:"Edge Cases",id:"edge-cases-46",level:3},{value:"Further Readings",id:"further-readings-46",level:3},{value:"Search in Rotated Sorted Array II",id:"search-in-rotated-sorted-array-ii",level:2},{value:"Inputs",id:"inputs-47",level:3},{value:"Sub-problems",id:"sub-problems-47",level:3},{value:"Edge Cases",id:"edge-cases-47",level:3},{value:"Further Readings",id:"further-readings-47",level:3},{value:"Remove Duplicates from Sorted List II",id:"remove-duplicates-from-sorted-list-ii",level:2},{value:"Inputs",id:"inputs-48",level:3},{value:"Sub-problems",id:"sub-problems-48",level:3},{value:"Edge Cases",id:"edge-cases-48",level:3},{value:"Further Readings",id:"further-readings-48",level:3},{value:"Partition List",id:"partition-list",level:2},{value:"Inputs",id:"inputs-49",level:3},{value:"Sub-problems",id:"sub-problems-49",level:3},{value:"Edge Cases",id:"edge-cases-49",level:3},{value:"Further Readings",id:"further-readings-49",level:3},{value:"Gray Code",id:"gray-code",level:2},{value:"Inputs",id:"inputs-50",level:3},{value:"Sub-problems",id:"sub-problems-50",level:3},{value:"Edge Cases",id:"edge-cases-50",level:3},{value:"Further Readings",id:"further-readings-50",level:3},{value:"Subsets II",id:"subsets-ii",level:2},{value:"Inputs",id:"inputs-51",level:3},{value:"Sub-problems",id:"sub-problems-51",level:3},{value:"Edge Cases",id:"edge-cases-51",level:3},{value:"Further Readings",id:"further-readings-51",level:3},{value:"Decode Ways",id:"decode-ways",level:2},{value:"Inputs",id:"inputs-52",level:3},{value:"Sub-problems",id:"sub-problems-52",level:3},{value:"Edge Cases",id:"edge-cases-52",level:3},{value:"Further Readings",id:"further-readings-52",level:3},{value:"Reverse Linked List II",id:"reverse-linked-list-ii",level:2},{value:"Inputs",id:"inputs-53",level:3},{value:"Sub-problems",id:"sub-problems-53",level:3},{value:"Edge Cases",id:"edge-cases-53",level:3},{value:"Further Readings",id:"further-readings-53",level:3},{value:"Restore IP Addresses",id:"restore-ip-addresses",level:2},{value:"Inputs",id:"inputs-54",level:3},{value:"Sub-problems",id:"sub-problems-54",level:3},{value:"Edge Cases",id:"edge-cases-54",level:3},{value:"Further Readings",id:"further-readings-54",level:3},{value:"Unique Binary Search Trees II",id:"unique-binary-search-trees-ii",level:2},{value:"Inputs",id:"inputs-55",level:3},{value:"Sub-problems",id:"sub-problems-55",level:3},{value:"Edge Cases",id:"edge-cases-55",level:3},{value:"Further Readings",id:"further-readings-55",level:3},{value:"Unique Binary Search Trees",id:"unique-binary-search-trees",level:2},{value:"Inputs",id:"inputs-56",level:3},{value:"Sub-problems",id:"sub-problems-56",level:3},{value:"Edge Cases",id:"edge-cases-56",level:3},{value:"Further Readings",id:"further-readings-56",level:3},{value:"Interleaving String",id:"interleaving-string",level:2},{value:"Inputs",id:"inputs-57",level:3},{value:"Sub-problems",id:"sub-problems-57",level:3},{value:"Edge Cases",id:"edge-cases-57",level:3},{value:"Further Readings",id:"further-readings-57",level:3},{value:"Validate Binary Search Tree",id:"validate-binary-search-tree",level:2},{value:"Inputs",id:"inputs-58",level:3},{value:"Sub-problems",id:"sub-problems-58",level:3},{value:"Edge Cases",id:"edge-cases-58",level:3},{value:"Further Readings",id:"further-readings-58",level:3},{value:"Recover Binary Search Tree",id:"recover-binary-search-tree",level:2},{value:"Inputs",id:"inputs-59",level:3},{value:"Sub-problems",id:"sub-problems-59",level:3},{value:"Edge Cases",id:"edge-cases-59",level:3},{value:"Further Readings",id:"further-readings-59",level:3},{value:"Binary Tree Level Order Traversal",id:"binary-tree-level-order-traversal",level:2},{value:"Inputs",id:"inputs-60",level:3},{value:"Sub-problems",id:"sub-problems-60",level:3},{value:"Edge Cases",id:"edge-cases-60",level:3},{value:"Further Readings",id:"further-readings-60",level:3},{value:"Binary Tree Zigzag Level Order Traversal",id:"binary-tree-zigzag-level-order-traversal",level:2},{value:"Inputs",id:"inputs-61",level:3},{value:"Sub-problems",id:"sub-problems-61",level:3},{value:"Edge Cases",id:"edge-cases-61",level:3},{value:"Further Readings",id:"further-readings-61",level:3},{value:"Construct Binary Tree from Preorder and Inorder Traversal",id:"construct-binary-tree-from-preorder-and-inorder-traversal",level:2},{value:"Inputs",id:"inputs-62",level:3},{value:"Sub-problems",id:"sub-problems-62",level:3},{value:"Edge Cases",id:"edge-cases-62",level:3},{value:"Further Readings",id:"further-readings-62",level:3},{value:"Construct Binary Tree from Inorder and Postorder Traversal",id:"construct-binary-tree-from-inorder-and-postorder-traversal",level:2},{value:"Inputs",id:"inputs-63",level:3},{value:"Sub-problems",id:"sub-problems-63",level:3},{value:"Edge Cases",id:"edge-cases-63",level:3},{value:"Further Readings",id:"further-readings-63",level:3},{value:"Binary Tree Level Order Traversal II",id:"binary-tree-level-order-traversal-ii",level:2},{value:"Inputs",id:"inputs-64",level:3},{value:"Sub-problems",id:"sub-problems-64",level:3},{value:"Edge Cases",id:"edge-cases-64",level:3},{value:"Further Readings",id:"further-readings-64",level:3},{value:"Convert Sorted List to Binary Search Tree",id:"convert-sorted-list-to-binary-search-tree",level:2},{value:"Inputs",id:"inputs-65",level:3},{value:"Sub-problems",id:"sub-problems-65",level:3},{value:"Edge Cases",id:"edge-cases-65",level:3},{value:"Further Readings",id:"further-readings-65",level:3},{value:"Path Sum II",id:"path-sum-ii",level:2},{value:"Inputs",id:"inputs-66",level:3},{value:"Sub-problems",id:"sub-problems-66",level:3},{value:"Edge Cases",id:"edge-cases-66",level:3},{value:"Further Readings",id:"further-readings-66",level:3},{value:"Flatten Binary Tree to Linked List",id:"flatten-binary-tree-to-linked-list",level:2},{value:"Inputs",id:"inputs-67",level:3},{value:"Sub-problems",id:"sub-problems-67",level:3},{value:"Edge Cases",id:"edge-cases-67",level:3},{value:"Further Readings",id:"further-readings-67",level:3},{value:"Populating Next Right Pointers in Each Node",id:"populating-next-right-pointers-in-each-node",level:2},{value:"Inputs",id:"inputs-68",level:3},{value:"Sub-problems",id:"sub-problems-68",level:3},{value:"Edge Cases",id:"edge-cases-68",level:3},{value:"Further Readings",id:"further-readings-68",level:3},{value:"Populating Next Right Pointers in Each Node II",id:"populating-next-right-pointers-in-each-node-ii",level:2},{value:"Inputs",id:"inputs-69",level:3},{value:"Sub-problems",id:"sub-problems-69",level:3},{value:"Edge Cases",id:"edge-cases-69",level:3},{value:"Further Readings",id:"further-readings-69",level:3},{value:"Triangle",id:"triangle",level:2},{value:"Inputs",id:"inputs-70",level:3},{value:"Sub-problems",id:"sub-problems-70",level:3},{value:"Edge Cases",id:"edge-cases-70",level:3},{value:"Further Readings",id:"further-readings-70",level:3},{value:"Best Time to Buy and Sell Stock II",id:"best-time-to-buy-and-sell-stock-ii",level:2},{value:"Inputs",id:"inputs-71",level:3},{value:"Sub-problems",id:"sub-problems-71",level:3},{value:"Edge Cases",id:"edge-cases-71",level:3},{value:"Further Readings",id:"further-readings-71",level:3},{value:"Longest Consecutive Sequence",id:"longest-consecutive-sequence",level:2},{value:"Inputs",id:"inputs-72",level:3},{value:"Sub-problems",id:"sub-problems-72",level:3},{value:"Edge Cases",id:"edge-cases-72",level:3},{value:"Further Readings",id:"further-readings-72",level:3},{value:"Sum Root to Leaf Numbers",id:"sum-root-to-leaf-numbers",level:2},{value:"Inputs",id:"inputs-73",level:3},{value:"Sub-problems",id:"sub-problems-73",level:3},{value:"Edge Cases",id:"edge-cases-73",level:3},{value:"Further Readings",id:"further-readings-73",level:3},{value:"Surrounded Regions",id:"surrounded-regions",level:2},{value:"Inputs",id:"inputs-74",level:3},{value:"Sub-problems",id:"sub-problems-74",level:3},{value:"Edge Cases",id:"edge-cases-74",level:3},{value:"Further Readings",id:"further-readings-74",level:3},{value:"Palindrome Partitioning",id:"palindrome-partitioning",level:2},{value:"Inputs",id:"inputs-75",level:3},{value:"Sub-problems",id:"sub-problems-75",level:3},{value:"Edge Cases",id:"edge-cases-75",level:3},{value:"Further Readings",id:"further-readings-75",level:3},{value:"Clone Graph",id:"clone-graph",level:2},{value:"Inputs",id:"inputs-76",level:3},{value:"Sub-problems",id:"sub-problems-76",level:3},{value:"Edge Cases",id:"edge-cases-76",level:3},{value:"Further Readings",id:"further-readings-76",level:3},{value:"Gas Station",id:"gas-station",level:2},{value:"Inputs",id:"inputs-77",level:3},{value:"Sub-problems",id:"sub-problems-77",level:3},{value:"Edge Cases",id:"edge-cases-77",level:3},{value:"Further Readings",id:"further-readings-77",level:3},{value:"Single Number II",id:"single-number-ii",level:2},{value:"Inputs",id:"inputs-78",level:3},{value:"Sub-problems",id:"sub-problems-78",level:3},{value:"Edge Cases",id:"edge-cases-78",level:3},{value:"Further Readings",id:"further-readings-78",level:3},{value:"Copy List with Random Pointer",id:"copy-list-with-random-pointer",level:2},{value:"Inputs",id:"inputs-79",level:3},{value:"Sub-problems",id:"sub-problems-79",level:3},{value:"Edge Cases",id:"edge-cases-79",level:3},{value:"Further Readings",id:"further-readings-79",level:3},{value:"Word Break",id:"word-break",level:2},{value:"Inputs",id:"inputs-80",level:3},{value:"Sub-problems",id:"sub-problems-80",level:3},{value:"Edge Cases",id:"edge-cases-80",level:3},{value:"Further Readings",id:"further-readings-80",level:3},{value:"Linked List Cycle II",id:"linked-list-cycle-ii",level:2},{value:"Inputs",id:"inputs-81",level:3},{value:"Sub-problems",id:"sub-problems-81",level:3},{value:"Edge Cases",id:"edge-cases-81",level:3},{value:"Further Readings",id:"further-readings-81",level:3},{value:"Reorder List",id:"reorder-list",level:2},{value:"Inputs",id:"inputs-82",level:3},{value:"Sub-problems",id:"sub-problems-82",level:3},{value:"Edge Cases",id:"edge-cases-82",level:3},{value:"Further Readings",id:"further-readings-82",level:3},{value:"LRU Cache",id:"lru-cache",level:2},{value:"Inputs",id:"inputs-83",level:3},{value:"Sub-problems",id:"sub-problems-83",level:3},{value:"Edge Cases",id:"edge-cases-83",level:3},{value:"Further Readings",id:"further-readings-83",level:3},{value:"Insertion Sort List",id:"insertion-sort-list",level:2},{value:"Inputs",id:"inputs-84",level:3},{value:"Sub-problems",id:"sub-problems-84",level:3},{value:"Edge Cases",id:"edge-cases-84",level:3},{value:"Further Readings",id:"further-readings-84",level:3},{value:"Sort List",id:"sort-list",level:2},{value:"Inputs",id:"inputs-85",level:3},{value:"Sub-problems",id:"sub-problems-85",level:3},{value:"Edge Cases",id:"edge-cases-85",level:3},{value:"Further Readings",id:"further-readings-85",level:3},{value:"Evaluate Reverse Polish Notation",id:"evaluate-reverse-polish-notation",level:2},{value:"Inputs",id:"inputs-86",level:3},{value:"Sub-problems",id:"sub-problems-86",level:3},{value:"Edge Cases",id:"edge-cases-86",level:3},{value:"Further Readings",id:"further-readings-86",level:3},{value:"Reverse Words in a String",id:"reverse-words-in-a-string",level:2},{value:"Inputs",id:"inputs-87",level:3},{value:"Sub-problems",id:"sub-problems-87",level:3},{value:"Edge Cases",id:"edge-cases-87",level:3},{value:"Further Readings",id:"further-readings-87",level:3},{value:"Maximum Product Subarray",id:"maximum-product-subarray",level:2},{value:"Inputs",id:"inputs-88",level:3},{value:"Sub-problems",id:"sub-problems-88",level:3},{value:"Edge Cases",id:"edge-cases-88",level:3},{value:"Further Readings",id:"further-readings-88",level:3},{value:"Find Minimum in Rotated Sorted Array",id:"find-minimum-in-rotated-sorted-array",level:2},{value:"Inputs",id:"inputs-89",level:3},{value:"Sub-problems",id:"sub-problems-89",level:3},{value:"Edge Cases",id:"edge-cases-89",level:3},{value:"Further Readings",id:"further-readings-89",level:3},{value:"Binary Tree Upside Down",id:"binary-tree-upside-down",level:2},{value:"Inputs",id:"inputs-90",level:3},{value:"Sub-problems",id:"sub-problems-90",level:3},{value:"Edge Cases",id:"edge-cases-90",level:3},{value:"Further Readings",id:"further-readings-90",level:3},{value:"Longest Substring with At Most Two Distinct Characters",id:"longest-substring-with-at-most-two-distinct-characters",level:2},{value:"Inputs",id:"inputs-91",level:3},{value:"Sub-problems",id:"sub-problems-91",level:3},{value:"Edge Cases",id:"edge-cases-91",level:3},{value:"Further Readings",id:"further-readings-91",level:3},{value:"One Edit Distance",id:"one-edit-distance",level:2},{value:"Inputs",id:"inputs-92",level:3},{value:"Sub-problems",id:"sub-problems-92",level:3},{value:"Edge Cases",id:"edge-cases-92",level:3},{value:"Further Readings",id:"further-readings-92",level:3},{value:"Find Peak Element",id:"find-peak-element",level:2},{value:"Inputs",id:"inputs-93",level:3},{value:"Sub-problems",id:"sub-problems-93",level:3},{value:"Edge Cases",id:"edge-cases-93",level:3},{value:"Further Readings",id:"further-readings-93",level:3},{value:"Compare Version Numbers",id:"compare-version-numbers",level:2},{value:"Inputs",id:"inputs-94",level:3},{value:"Sub-problems",id:"sub-problems-94",level:3},{value:"Edge Cases",id:"edge-cases-94",level:3},{value:"Further Readings",id:"further-readings-94",level:3},{value:"Fraction to Recurring Decimal",id:"fraction-to-recurring-decimal",level:2},{value:"Inputs",id:"inputs-95",level:3},{value:"Sub-problems",id:"sub-problems-95",level:3},{value:"Edge Cases",id:"edge-cases-95",level:3},{value:"Further Readings",id:"further-readings-95",level:3},{value:"Two Sum II - Input Array Is Sorted",id:"two-sum-ii---input-array-is-sorted",level:2},{value:"Inputs",id:"inputs-96",level:3},{value:"Sub-problems",id:"sub-problems-96",level:3},{value:"Edge Cases",id:"edge-cases-96",level:3},{value:"Further Readings",id:"further-readings-96",level:3},{value:"Factorial Trailing Zeroes",id:"factorial-trailing-zeroes",level:2},{value:"Inputs",id:"inputs-97",level:3},{value:"Sub-problems",id:"sub-problems-97",level:3},{value:"Edge Cases",id:"edge-cases-97",level:3},{value:"Further Readings",id:"further-readings-97",level:3},{value:"Binary Search Tree Iterator",id:"binary-search-tree-iterator",level:2},{value:"Inputs",id:"inputs-98",level:3},{value:"Sub-problems",id:"sub-problems-98",level:3},{value:"Edge Cases",id:"edge-cases-98",level:3},{value:"Further Readings",id:"further-readings-98",level:3},{value:"Second Highest Salary",id:"second-highest-salary",level:2},{value:"Inputs",id:"inputs-99",level:3},{value:"Sub-problems",id:"sub-problems-99",level:3},{value:"Edge Cases",id:"edge-cases-99",level:3},{value:"Further Readings",id:"further-readings-99",level:3},{value:"Nth Highest Salary",id:"nth-highest-salary",level:2},{value:"Inputs",id:"inputs-100",level:3},{value:"Sub-problems",id:"sub-problems-100",level:3},{value:"Edge Cases",id:"edge-cases-100",level:3},{value:"Further Readings",id:"further-readings-100",level:3},{value:"Rank Scores",id:"rank-scores",level:2},{value:"Inputs",id:"inputs-101",level:3},{value:"Sub-problems",id:"sub-problems-101",level:3},{value:"Edge Cases",id:"edge-cases-101",level:3},{value:"Further Readings",id:"further-readings-101",level:3},{value:"Largest Number",id:"largest-number",level:2},{value:"Inputs",id:"inputs-102",level:3},{value:"Sub-problems",id:"sub-problems-102",level:3},{value:"Edge Cases",id:"edge-cases-102",level:3},{value:"Further Readings",id:"further-readings-102",level:3},{value:"Consecutive Numbers",id:"consecutive-numbers",level:2},{value:"Inputs",id:"inputs-103",level:3},{value:"Sub-problems",id:"sub-problems-103",level:3},{value:"Edge Cases",id:"edge-cases-103",level:3},{value:"Further Readings",id:"further-readings-103",level:3},{value:"Department Highest Salary",id:"department-highest-salary",level:2},{value:"Inputs",id:"inputs-104",level:3},{value:"Sub-problems",id:"sub-problems-104",level:3},{value:"Edge Cases",id:"edge-cases-104",level:3},{value:"Further Readings",id:"further-readings-104",level:3},{value:"Reverse Words in a String II",id:"reverse-words-in-a-string-ii",level:2},{value:"Inputs",id:"inputs-105",level:3},{value:"Sub-problems",id:"sub-problems-105",level:3},{value:"Edge Cases",id:"edge-cases-105",level:3},{value:"Further Readings",id:"further-readings-105",level:3},{value:"Repeated DNA Sequences",id:"repeated-dna-sequences",level:2},{value:"Inputs",id:"inputs-106",level:3},{value:"Sub-problems",id:"sub-problems-106",level:3},{value:"Edge Cases",id:"edge-cases-106",level:3},{value:"Further Readings",id:"further-readings-106",level:3},{value:"Rotate Array",id:"rotate-array",level:2},{value:"Inputs",id:"inputs-107",level:3},{value:"Sub-problems",id:"sub-problems-107",level:3},{value:"Edge Cases",id:"edge-cases-107",level:3},{value:"Further Readings",id:"further-readings-107",level:3},{value:"Word Frequency",id:"word-frequency",level:2},{value:"Inputs",id:"inputs-108",level:3},{value:"Sub-problems",id:"sub-problems-108",level:3},{value:"Edge Cases",id:"edge-cases-108",level:3},{value:"Further Readings",id:"further-readings-108",level:3},{value:"Transpose File",id:"transpose-file",level:2},{value:"Inputs",id:"inputs-109",level:3},{value:"Sub-problems",id:"sub-problems-109",level:3},{value:"Edge Cases",id:"edge-cases-109",level:3},{value:"Further Readings",id:"further-readings-109",level:3},{value:"House Robber",id:"house-robber",level:2},{value:"Inputs",id:"inputs-110",level:3},{value:"Sub-problems",id:"sub-problems-110",level:3},{value:"Edge Cases",id:"edge-cases-110",level:3},{value:"Further Readings",id:"further-readings-110",level:3},{value:"Binary Tree Right Side View",id:"binary-tree-right-side-view",level:2},{value:"Inputs",id:"inputs-111",level:3},{value:"Sub-problems",id:"sub-problems-111",level:3},{value:"Edge Cases",id:"edge-cases-111",level:3},{value:"Further Readings",id:"further-readings-111",level:3},{value:"Number of Islands",id:"number-of-islands",level:2},{value:"Inputs",id:"inputs-112",level:3},{value:"Sub-problems",id:"sub-problems-112",level:3},{value:"Edge Cases",id:"edge-cases-112",level:3},{value:"Further Readings",id:"further-readings-112",level:3},{value:"Bitwise AND of Numbers Range",id:"bitwise-and-of-numbers-range",level:2},{value:"Inputs",id:"inputs-113",level:3},{value:"Sub-problems",id:"sub-problems-113",level:3},{value:"Edge Cases",id:"edge-cases-113",level:3},{value:"Further Readings",id:"further-readings-113",level:3},{value:"Count Primes",id:"count-primes",level:2},{value:"Inputs",id:"inputs-114",level:3},{value:"Sub-problems",id:"sub-problems-114",level:3},{value:"Edge Cases",id:"edge-cases-114",level:3},{value:"Further Readings",id:"further-readings-114",level:3},{value:"Course Schedule",id:"course-schedule",level:2},{value:"Inputs",id:"inputs-115",level:3},{value:"Sub-problems",id:"sub-problems-115",level:3},{value:"Edge Cases",id:"edge-cases-115",level:3},{value:"Further Readings",id:"further-readings-115",level:3},{value:"Implement Trie (Prefix Tree)",id:"implement-trie-prefix-tree",level:2},{value:"Inputs",id:"inputs-116",level:3},{value:"Sub-problems",id:"sub-problems-116",level:3},{value:"Edge Cases",id:"edge-cases-116",level:3},{value:"Further Readings",id:"further-readings-116",level:3},{value:"Minimum Size Subarray Sum",id:"minimum-size-subarray-sum",level:2},{value:"Inputs",id:"inputs-117",level:3},{value:"Sub-problems",id:"sub-problems-117",level:3},{value:"Edge Cases",id:"edge-cases-117",level:3},{value:"Further Readings",id:"further-readings-117",level:3},{value:"Course Schedule II",id:"course-schedule-ii",level:2},{value:"Inputs",id:"inputs-118",level:3},{value:"Sub-problems",id:"sub-problems-118",level:3},{value:"Edge Cases",id:"edge-cases-118",level:3},{value:"Further Readings",id:"further-readings-118",level:3},{value:"Design Add and Search Words Data Structure",id:"design-add-and-search-words-data-structure",level:2},{value:"Inputs",id:"inputs-119",level:3},{value:"Sub-problems",id:"sub-problems-119",level:3},{value:"Edge Cases",id:"edge-cases-119",level:3},{value:"Further Readings",id:"further-readings-119",level:3},{value:"House Robber II",id:"house-robber-ii",level:2},{value:"Inputs",id:"inputs-120",level:3},{value:"Sub-problems",id:"sub-problems-120",level:3},{value:"Edge Cases",id:"edge-cases-120",level:3},{value:"Further Readings",id:"further-readings-120",level:3},{value:"Kth Largest Element in an Array",id:"kth-largest-element-in-an-array",level:2},{value:"Inputs",id:"inputs-121",level:3},{value:"Sub-problems",id:"sub-problems-121",level:3},{value:"Edge Cases",id:"edge-cases-121",level:3},{value:"Further Readings",id:"further-readings-121",level:3},{value:"Combination Sum III",id:"combination-sum-iii",level:2},{value:"Inputs",id:"inputs-122",level:3},{value:"Sub-problems",id:"sub-problems-122",level:3},{value:"Edge Cases",id:"edge-cases-122",level:3},{value:"Further Readings",id:"further-readings-122",level:3},{value:"Contains Duplicate III",id:"contains-duplicate-iii",level:2},{value:"Inputs",id:"inputs-123",level:3},{value:"Sub-problems",id:"sub-problems-123",level:3},{value:"Edge Cases",id:"edge-cases-123",level:3},{value:"Further Readings",id:"further-readings-123",level:3},{value:"Maximal Square",id:"maximal-square",level:2},{value:"Inputs",id:"inputs-124",level:3},{value:"Sub-problems",id:"sub-problems-124",level:3},{value:"Edge Cases",id:"edge-cases-124",level:3},{value:"Further Readings",id:"further-readings-124",level:3},{value:"Count Complete Tree Nodes",id:"count-complete-tree-nodes",level:2},{value:"Inputs",id:"inputs-125",level:3},{value:"Sub-problems",id:"sub-problems-125",level:3},{value:"Edge Cases",id:"edge-cases-125",level:3},{value:"Further Readings",id:"further-readings-125",level:3},{value:"Rectangle Area",id:"rectangle-area",level:2},{value:"Inputs",id:"inputs-126",level:3},{value:"Sub-problems",id:"sub-problems-126",level:3},{value:"Edge Cases",id:"edge-cases-126",level:3},{value:"Further Readings",id:"further-readings-126",level:3},{value:"Basic Calculator II",id:"basic-calculator-ii",level:2},{value:"Inputs",id:"inputs-127",level:3},{value:"Sub-problems",id:"sub-problems-127",level:3},{value:"Edge Cases",id:"edge-cases-127",level:3},{value:"Further Readings",id:"further-readings-127",level:3},{value:"Majority Element II",id:"majority-element-ii",level:2},{value:"Inputs",id:"inputs-128",level:3},{value:"Sub-problems",id:"sub-problems-128",level:3},{value:"Edge Cases",id:"edge-cases-128",level:3},{value:"Further Readings",id:"further-readings-128",level:3},{value:"Kth Smallest Element in a BST",id:"kth-smallest-element-in-a-bst",level:2},{value:"Inputs",id:"inputs-129",level:3},{value:"Sub-problems",id:"sub-problems-129",level:3},{value:"Edge Cases",id:"edge-cases-129",level:3},{value:"Further Readings",id:"further-readings-129",level:3},{value:"Lowest Common Ancestor of a Binary Tree",id:"lowest-common-ancestor-of-a-binary-tree",level:2},{value:"Inputs",id:"inputs-130",level:3},{value:"Sub-problems",id:"sub-problems-130",level:3},{value:"Edge Cases",id:"edge-cases-130",level:3},{value:"Further Readings",id:"further-readings-130",level:3},{value:"Product of Array Except Self",id:"product-of-array-except-self",level:2},{value:"Inputs",id:"inputs-131",level:3},{value:"Sub-problems",id:"sub-problems-131",level:3},{value:"Edge Cases",id:"edge-cases-131",level:3},{value:"Further Readings",id:"further-readings-131",level:3},{value:"Search a 2D Matrix II",id:"search-a-2d-matrix-ii",level:2},{value:"Inputs",id:"inputs-132",level:3},{value:"Sub-problems",id:"sub-problems-132",level:3},{value:"Edge Cases",id:"edge-cases-132",level:3},{value:"Further Readings",id:"further-readings-132",level:3},{value:"Different Ways to Add Parentheses",id:"different-ways-to-add-parentheses",level:2},{value:"Inputs",id:"inputs-133",level:3},{value:"Sub-problems",id:"sub-problems-133",level:3},{value:"Edge Cases",id:"edge-cases-133",level:3},{value:"Further Readings",id:"further-readings-133",level:3},{value:"Shortest Word Distance II",id:"shortest-word-distance-ii",level:2},{value:"Inputs",id:"inputs-134",level:3},{value:"Sub-problems",id:"sub-problems-134",level:3},{value:"Edge Cases",id:"edge-cases-134",level:3},{value:"Further Readings",id:"further-readings-134",level:3},{value:"Shortest Word Distance III",id:"shortest-word-distance-iii",level:2},{value:"Inputs",id:"inputs-135",level:3},{value:"Sub-problems",id:"sub-problems-135",level:3},{value:"Edge Cases",id:"edge-cases-135",level:3},{value:"Further Readings",id:"further-readings-135",level:3},{value:"Strobogrammatic Number II",id:"strobogrammatic-number-ii",level:2},{value:"Inputs",id:"inputs-136",level:3},{value:"Sub-problems",id:"sub-problems-136",level:3},{value:"Edge Cases",id:"edge-cases-136",level:3},{value:"Further Readings",id:"further-readings-136",level:3},{value:"Group Shifted Strings",id:"group-shifted-strings",level:2},{value:"Inputs",id:"inputs-137",level:3},{value:"Sub-problems",id:"sub-problems-137",level:3},{value:"Edge Cases",id:"edge-cases-137",level:3},{value:"Further Readings",id:"further-readings-137",level:3},{value:"Count Univalue Subtrees",id:"count-univalue-subtrees",level:2},{value:"Inputs",id:"inputs-138",level:3},{value:"Sub-problems",id:"sub-problems-138",level:3},{value:"Edge Cases",id:"edge-cases-138",level:3},{value:"Further Readings",id:"further-readings-138",level:3},{value:"Flatten 2D Vector",id:"flatten-2d-vector",level:2},{value:"Inputs",id:"inputs-139",level:3},{value:"Sub-problems",id:"sub-problems-139",level:3},{value:"Edge Cases",id:"edge-cases-139",level:3},{value:"Further Readings",id:"further-readings-139",level:3},{value:"Meeting Rooms II",id:"meeting-rooms-ii",level:2},{value:"Inputs",id:"inputs-140",level:3},{value:"Sub-problems",id:"sub-problems-140",level:3},{value:"Edge Cases",id:"edge-cases-140",level:3},{value:"Further Readings",id:"further-readings-140",level:3},{value:"Factor Combinations",id:"factor-combinations",level:2},{value:"Inputs",id:"inputs-141",level:3},{value:"Sub-problems",id:"sub-problems-141",level:3},{value:"Edge Cases",id:"edge-cases-141",level:3},{value:"Further Readings",id:"further-readings-141",level:3},{value:"Verify Preorder Sequence in Binary Search Tree",id:"verify-preorder-sequence-in-binary-search-tree",level:2},{value:"Inputs",id:"inputs-142",level:3},{value:"Sub-problems",id:"sub-problems-142",level:3},{value:"Edge Cases",id:"edge-cases-142",level:3},{value:"Further Readings",id:"further-readings-142",level:3},{value:"Paint House",id:"paint-house",level:2},{value:"Inputs",id:"inputs-143",level:3},{value:"Sub-problems",id:"sub-problems-143",level:3},{value:"Edge Cases",id:"edge-cases-143",level:3},{value:"Further Readings",id:"further-readings-143",level:3},{value:"3Sum Smaller",id:"3sum-smaller",level:2},{value:"Inputs",id:"inputs-144",level:3},{value:"Sub-problems",id:"sub-problems-144",level:3},{value:"Edge Cases",id:"edge-cases-144",level:3},{value:"Further Readings",id:"further-readings-144",level:3},{value:"Single Number III",id:"single-number-iii",level:2},{value:"Inputs",id:"inputs-145",level:3},{value:"Sub-problems",id:"sub-problems-145",level:3},{value:"Edge Cases",id:"edge-cases-145",level:3},{value:"Further Readings",id:"further-readings-145",level:3},{value:"Graph Valid Tree",id:"graph-valid-tree",level:2},{value:"Inputs",id:"inputs-146",level:3},{value:"Sub-problems",id:"sub-problems-146",level:3},{value:"Edge Cases",id:"edge-cases-146",level:3},{value:"Further Readings",id:"further-readings-146",level:3},{value:"Ugly Number II",id:"ugly-number-ii",level:2},{value:"Inputs",id:"inputs-147",level:3},{value:"Sub-problems",id:"sub-problems-147",level:3},{value:"Edge Cases",id:"edge-cases-147",level:3},{value:"Further Readings",id:"further-readings-147",level:3},{value:"Palindrome Permutation II",id:"palindrome-permutation-ii",level:2},{value:"Inputs",id:"inputs-148",level:3},{value:"Sub-problems",id:"sub-problems-148",level:3},{value:"Edge Cases",id:"edge-cases-148",level:3},{value:"Further Readings",id:"further-readings-148",level:3},{value:"Encode and Decode Strings",id:"encode-and-decode-strings",level:2},{value:"Inputs",id:"inputs-149",level:3},{value:"Sub-problems",id:"sub-problems-149",level:3},{value:"Edge Cases",id:"edge-cases-149",level:3},{value:"Further Readings",id:"further-readings-149",level:3},{value:"H-Index",id:"h-index",level:2},{value:"Inputs",id:"inputs-150",level:3},{value:"Sub-problems",id:"sub-problems-150",level:3},{value:"Edge Cases",id:"edge-cases-150",level:3},{value:"Further Readings",id:"further-readings-150",level:3},{value:"H-Index II",id:"h-index-ii",level:2},{value:"Inputs",id:"inputs-151",level:3},{value:"Sub-problems",id:"sub-problems-151",level:3},{value:"Edge Cases",id:"edge-cases-151",level:3},{value:"Further Readings",id:"further-readings-151",level:3},{value:"Paint Fence",id:"paint-fence",level:2},{value:"Inputs",id:"inputs-152",level:3},{value:"Sub-problems",id:"sub-problems-152",level:3},{value:"Edge Cases",id:"edge-cases-152",level:3},{value:"Further Readings",id:"further-readings-152",level:3},{value:"Find the Celebrity",id:"find-the-celebrity",level:2},{value:"Inputs",id:"inputs-153",level:3},{value:"Sub-problems",id:"sub-problems-153",level:3},{value:"Edge Cases",id:"edge-cases-153",level:3},{value:"Further Readings",id:"further-readings-153",level:3},{value:"Perfect Squares",id:"perfect-squares",level:2},{value:"Inputs",id:"inputs-154",level:3},{value:"Sub-problems",id:"sub-problems-154",level:3},{value:"Edge Cases",id:"edge-cases-154",level:3},{value:"Further Readings",id:"further-readings-154",level:3},{value:"Wiggle Sort",id:"wiggle-sort",level:2},{value:"Inputs",id:"inputs-155",level:3},{value:"Sub-problems",id:"sub-problems-155",level:3},{value:"Edge Cases",id:"edge-cases-155",level:3},{value:"Further Readings",id:"further-readings-155",level:3},{value:"Zigzag Iterator",id:"zigzag-iterator",level:2},{value:"Inputs",id:"inputs-156",level:3},{value:"Sub-problems",id:"sub-problems-156",level:3},{value:"Edge Cases",id:"edge-cases-156",level:3},{value:"Further Readings",id:"further-readings-156",level:3},{value:"Peeking Iterator",id:"peeking-iterator",level:2},{value:"Inputs",id:"inputs-157",level:3},{value:"Sub-problems",id:"sub-problems-157",level:3},{value:"Edge Cases",id:"edge-cases-157",level:3},{value:"Further Readings",id:"further-readings-157",level:3},{value:"Inorder Successor in BST",id:"inorder-successor-in-bst",level:2},{value:"Inputs",id:"inputs-158",level:3},{value:"Sub-problems",id:"sub-problems-158",level:3},{value:"Edge Cases",id:"edge-cases-158",level:3},{value:"Further Readings",id:"further-readings-158",level:3},{value:"Walls and Gates",id:"walls-and-gates",level:2},{value:"Inputs",id:"inputs-159",level:3},{value:"Sub-problems",id:"sub-problems-159",level:3},{value:"Edge Cases",id:"edge-cases-159",level:3},{value:"Further Readings",id:"further-readings-159",level:3},{value:"Find the Duplicate Number",id:"find-the-duplicate-number",level:2},{value:"Inputs",id:"inputs-160",level:3},{value:"Sub-problems",id:"sub-problems-160",level:3},{value:"Edge Cases",id:"edge-cases-160",level:3},{value:"Further Readings",id:"further-readings-160",level:3},{value:"Unique Word Abbreviation",id:"unique-word-abbreviation",level:2},{value:"Inputs",id:"inputs-161",level:3},{value:"Sub-problems",id:"sub-problems-161",level:3},{value:"Edge Cases",id:"edge-cases-161",level:3},{value:"Further Readings",id:"further-readings-161",level:3},{value:"Game of Life",id:"game-of-life",level:2},{value:"Inputs",id:"inputs-162",level:3},{value:"Sub-problems",id:"sub-problems-162",level:3},{value:"Edge Cases",id:"edge-cases-162",level:3},{value:"Further Readings",id:"further-readings-162",level:3},{value:"Word Pattern II",id:"word-pattern-ii",level:2},{value:"Inputs",id:"inputs-163",level:3},{value:"Sub-problems",id:"sub-problems-163",level:3},{value:"Edge Cases",id:"edge-cases-163",level:3},{value:"Further Readings",id:"further-readings-163",level:3},{value:"Flip Game II",id:"flip-game-ii",level:2},{value:"Inputs",id:"inputs-164",level:3},{value:"Sub-problems",id:"sub-problems-164",level:3},{value:"Edge Cases",id:"edge-cases-164",level:3},{value:"Further Readings",id:"further-readings-164",level:3},{value:"Binary Tree Longest Consecutive Sequence",id:"binary-tree-longest-consecutive-sequence",level:2},{value:"Inputs",id:"inputs-165",level:3},{value:"Sub-problems",id:"sub-problems-165",level:3},{value:"Edge Cases",id:"edge-cases-165",level:3},{value:"Further Readings",id:"further-readings-165",level:3},{value:"Bulls and Cows",id:"bulls-and-cows",level:2},{value:"Inputs",id:"inputs-166",level:3},{value:"Sub-problems",id:"sub-problems-166",level:3},{value:"Edge Cases",id:"edge-cases-166",level:3},{value:"Further Readings",id:"further-readings-166",level:3},{value:"Longest Increasing Subsequence",id:"longest-increasing-subsequence",level:2},{value:"Inputs",id:"inputs-167",level:3},{value:"Sub-problems",id:"sub-problems-167",level:3},{value:"Edge Cases",id:"edge-cases-167",level:3},{value:"Further Readings",id:"further-readings-167",level:3},{value:"Range Sum Query 2D - Immutable",id:"range-sum-query-2d---immutable",level:2},{value:"Inputs",id:"inputs-168",level:3},{value:"Sub-problems",id:"sub-problems-168",level:3},{value:"Edge Cases",id:"edge-cases-168",level:3},{value:"Further Readings",id:"further-readings-168",level:3},{value:"Additive Number",id:"additive-number",level:2},{value:"Inputs",id:"inputs-169",level:3},{value:"Sub-problems",id:"sub-problems-169",level:3},{value:"Edge Cases",id:"edge-cases-169",level:3},{value:"Further Readings",id:"further-readings-169",level:3},{value:"Range Sum Query - Mutable",id:"range-sum-query---mutable",level:2},{value:"Inputs",id:"inputs-170",level:3},{value:"Sub-problems",id:"sub-problems-170",level:3},{value:"Edge Cases",id:"edge-cases-170",level:3},{value:"Further Readings",id:"further-readings-170",level:3},{value:"Best Time to Buy and Sell Stock with Cooldown",id:"best-time-to-buy-and-sell-stock-with-cooldown",level:2},{value:"Inputs",id:"inputs-171",level:3},{value:"Sub-problems",id:"sub-problems-171",level:3},{value:"Edge Cases",id:"edge-cases-171",level:3},{value:"Further Readings",id:"further-readings-171",level:3},{value:"Minimum Height Trees",id:"minimum-height-trees",level:2},{value:"Inputs",id:"inputs-172",level:3},{value:"Sub-problems",id:"sub-problems-172",level:3},{value:"Edge Cases",id:"edge-cases-172",level:3},{value:"Further Readings",id:"further-readings-172",level:3},{value:"Sparse Matrix Multiplication",id:"sparse-matrix-multiplication",level:2},{value:"Inputs",id:"inputs-173",level:3},{value:"Sub-problems",id:"sub-problems-173",level:3},{value:"Edge Cases",id:"edge-cases-173",level:3},{value:"Further Readings",id:"further-readings-173",level:3},{value:"Super Ugly Number",id:"super-ugly-number",level:2},{value:"Inputs",id:"inputs-174",level:3},{value:"Sub-problems",id:"sub-problems-174",level:3},{value:"Edge Cases",id:"edge-cases-174",level:3},{value:"Further Readings",id:"further-readings-174",level:3},{value:"Binary Tree Vertical Order Traversal",id:"binary-tree-vertical-order-traversal",level:2},{value:"Inputs",id:"inputs-175",level:3},{value:"Sub-problems",id:"sub-problems-175",level:3},{value:"Edge Cases",id:"edge-cases-175",level:3},{value:"Further Readings",id:"further-readings-175",level:3},{value:"Remove Duplicate Letters",id:"remove-duplicate-letters",level:2},{value:"Inputs",id:"inputs-176",level:3},{value:"Sub-problems",id:"sub-problems-176",level:3},{value:"Edge Cases",id:"edge-cases-176",level:3},{value:"Further Readings",id:"further-readings-176",level:3},{value:"Maximum Product of Word Lengths",id:"maximum-product-of-word-lengths",level:2},{value:"Inputs",id:"inputs-177",level:3},{value:"Sub-problems",id:"sub-problems-177",level:3},{value:"Edge Cases",id:"edge-cases-177",level:3},{value:"Further Readings",id:"further-readings-177",level:3},{value:"Bulb Switcher",id:"bulb-switcher",level:2},{value:"Inputs",id:"inputs-178",level:3},{value:"Sub-problems",id:"sub-problems-178",level:3},{value:"Edge Cases",id:"edge-cases-178",level:3},{value:"Further Readings",id:"further-readings-178",level:3},{value:"Generalized Abbreviation",id:"generalized-abbreviation",level:2},{value:"Inputs",id:"inputs-179",level:3},{value:"Sub-problems",id:"sub-problems-179",level:3},{value:"Edge Cases",id:"edge-cases-179",level:3},{value:"Further Readings",id:"further-readings-179",level:3},{value:"Coin Change",id:"coin-change",level:2},{value:"Inputs",id:"inputs-180",level:3},{value:"Sub-problems",id:"sub-problems-180",level:3},{value:"Edge Cases",id:"edge-cases-180",level:3},{value:"Further Readings",id:"further-readings-180",level:3},{value:"Number of Connected Components in an Undirected Graph",id:"number-of-connected-components-in-an-undirected-graph",level:2},{value:"Inputs",id:"inputs-181",level:3},{value:"Sub-problems",id:"sub-problems-181",level:3},{value:"Edge Cases",id:"edge-cases-181",level:3},{value:"Further Readings",id:"further-readings-181",level:3},{value:"Wiggle Sort II",id:"wiggle-sort-ii",level:2},{value:"Inputs",id:"inputs-182",level:3},{value:"Sub-problems",id:"sub-problems-182",level:3},{value:"Edge Cases",id:"edge-cases-182",level:3},{value:"Further Readings",id:"further-readings-182",level:3},{value:"Maximum Size Subarray Sum Equals k",id:"maximum-size-subarray-sum-equals-k",level:2},{value:"Inputs",id:"inputs-183",level:3},{value:"Sub-problems",id:"sub-problems-183",level:3},{value:"Edge Cases",id:"edge-cases-183",level:3},{value:"Further Readings",id:"further-readings-183",level:3},{value:"Odd Even Linked List",id:"odd-even-linked-list",level:2},{value:"Inputs",id:"inputs-184",level:3},{value:"Sub-problems",id:"sub-problems-184",level:3},{value:"Edge Cases",id:"edge-cases-184",level:3},{value:"Further Readings",id:"further-readings-184",level:3},{value:"Verify Preorder Serialization of a Binary Tree",id:"verify-preorder-serialization-of-a-binary-tree",level:2},{value:"Inputs",id:"inputs-185",level:3},{value:"Sub-problems",id:"sub-problems-185",level:3},{value:"Edge Cases",id:"edge-cases-185",level:3},{value:"Further Readings",id:"further-readings-185",level:3},{value:"Largest BST Subtree",id:"largest-bst-subtree",level:2},{value:"Inputs",id:"inputs-186",level:3},{value:"Sub-problems",id:"sub-problems-186",level:3},{value:"Edge Cases",id:"edge-cases-186",level:3},{value:"Further Readings",id:"further-readings-186",level:3},{value:"Increasing Triplet Subsequence",id:"increasing-triplet-subsequence",level:2},{value:"Inputs",id:"inputs-187",level:3},{value:"Sub-problems",id:"sub-problems-187",level:3},{value:"Edge Cases",id:"edge-cases-187",level:3},{value:"Further Readings",id:"further-readings-187",level:3},{value:"House Robber III",id:"house-robber-iii",level:2},{value:"Inputs",id:"inputs-188",level:3},{value:"Sub-problems",id:"sub-problems-188",level:3},{value:"Edge Cases",id:"edge-cases-188",level:3},{value:"Further Readings",id:"further-readings-188",level:3},{value:"Nested List Weight Sum",id:"nested-list-weight-sum",level:2},{value:"Inputs",id:"inputs-189",level:3},{value:"Sub-problems",id:"sub-problems-189",level:3},{value:"Edge Cases",id:"edge-cases-189",level:3},{value:"Further Readings",id:"further-readings-189",level:3},{value:"Longest Substring with At Most K Distinct Characters",id:"longest-substring-with-at-most-k-distinct-characters",level:2},{value:"Inputs",id:"inputs-190",level:3},{value:"Sub-problems",id:"sub-problems-190",level:3},{value:"Edge Cases",id:"edge-cases-190",level:3},{value:"Further Readings",id:"further-readings-190",level:3},{value:"Flatten Nested List Iterator",id:"flatten-nested-list-iterator",level:2},{value:"Inputs",id:"inputs-191",level:3},{value:"Sub-problems",id:"sub-problems-191",level:3},{value:"Edge Cases",id:"edge-cases-191",level:3},{value:"Further Readings",id:"further-readings-191",level:3},{value:"Integer Break",id:"integer-break",level:2},{value:"Inputs",id:"inputs-192",level:3},{value:"Sub-problems",id:"sub-problems-192",level:3},{value:"Edge Cases",id:"edge-cases-192",level:3},{value:"Further Readings",id:"further-readings-192",level:3},{value:"Top K Frequent Elements",id:"top-k-frequent-elements",level:2},{value:"Inputs",id:"inputs-193",level:3},{value:"Sub-problems",id:"sub-problems-193",level:3},{value:"Edge Cases",id:"edge-cases-193",level:3},{value:"Further Readings",id:"further-readings-193",level:3},{value:"Design Tic-Tac-Toe",id:"design-tic-tac-toe",level:2},{value:"Inputs",id:"inputs-194",level:3},{value:"Sub-problems",id:"sub-problems-194",level:3},{value:"Edge Cases",id:"edge-cases-194",level:3},{value:"Further Readings",id:"further-readings-194",level:3},{value:"Android Unlock Patterns",id:"android-unlock-patterns",level:2},{value:"Inputs",id:"inputs-195",level:3},{value:"Sub-problems",id:"sub-problems-195",level:3},{value:"Edge Cases",id:"edge-cases-195",level:3},{value:"Further Readings",id:"further-readings-195",level:3},{value:"Design Snake Game",id:"design-snake-game",level:2},{value:"Inputs",id:"inputs-196",level:3},{value:"Sub-problems",id:"sub-problems-196",level:3},{value:"Edge Cases",id:"edge-cases-196",level:3},{value:"Further Readings",id:"further-readings-196",level:3},{value:"Design Twitter",id:"design-twitter",level:2},{value:"Inputs",id:"inputs-197",level:3},{value:"Sub-problems",id:"sub-problems-197",level:3},{value:"Edge Cases",id:"edge-cases-197",level:3},{value:"Further Readings",id:"further-readings-197",level:3},{value:"Line Reflection",id:"line-reflection",level:2},{value:"Inputs",id:"inputs-198",level:3},{value:"Sub-problems",id:"sub-problems-198",level:3},{value:"Edge Cases",id:"edge-cases-198",level:3},{value:"Further Readings",id:"further-readings-198",level:3},{value:"Count Numbers with Unique Digits",id:"count-numbers-with-unique-digits",level:2},{value:"Inputs",id:"inputs-199",level:3},{value:"Sub-problems",id:"sub-problems-199",level:3},{value:"Edge Cases",id:"edge-cases-199",level:3},{value:"Further Readings",id:"further-readings-199",level:3},{value:"Sort Transformed Array",id:"sort-transformed-array",level:2},{value:"Inputs",id:"inputs-200",level:3},{value:"Sub-problems",id:"sub-problems-200",level:3},{value:"Edge Cases",id:"edge-cases-200",level:3},{value:"Further Readings",id:"further-readings-200",level:3},{value:"Bomb Enemy",id:"bomb-enemy",level:2},{value:"Inputs",id:"inputs-201",level:3},{value:"Sub-problems",id:"sub-problems-201",level:3},{value:"Edge Cases",id:"edge-cases-201",level:3},{value:"Further Readings",id:"further-readings-201",level:3},{value:"Design Hit Counter",id:"design-hit-counter",level:2},{value:"Inputs",id:"inputs-202",level:3},{value:"Sub-problems",id:"sub-problems-202",level:3},{value:"Edge Cases",id:"edge-cases-202",level:3},{value:"Further Readings",id:"further-readings-202",level:3},{value:"Nested List Weight Sum II",id:"nested-list-weight-sum-ii",level:2},{value:"Inputs",id:"inputs-203",level:3},{value:"Sub-problems",id:"sub-problems-203",level:3},{value:"Edge Cases",id:"edge-cases-203",level:3},{value:"Further Readings",id:"further-readings-203",level:3},{value:"Water and Jug Problem",id:"water-and-jug-problem",level:2},{value:"Inputs",id:"inputs-204",level:3},{value:"Sub-problems",id:"sub-problems-204",level:3},{value:"Edge Cases",id:"edge-cases-204",level:3},{value:"Further Readings",id:"further-readings-204",level:3},{value:"Find Leaves of Binary Tree",id:"find-leaves-of-binary-tree",level:2},{value:"Inputs",id:"inputs-205",level:3},{value:"Sub-problems",id:"sub-problems-205",level:3},{value:"Edge Cases",id:"edge-cases-205",level:3},{value:"Further Readings",id:"further-readings-205",level:3},{value:"Largest Divisible Subset",id:"largest-divisible-subset",level:2},{value:"Inputs",id:"inputs-206",level:3},{value:"Sub-problems",id:"sub-problems-206",level:3},{value:"Edge Cases",id:"edge-cases-206",level:3},{value:"Further Readings",id:"further-readings-206",level:3},{value:"Plus One Linked List",id:"plus-one-linked-list",level:2},{value:"Inputs",id:"inputs-207",level:3},{value:"Sub-problems",id:"sub-problems-207",level:3},{value:"Edge Cases",id:"edge-cases-207",level:3},{value:"Further Readings",id:"further-readings-207",level:3},{value:"Range Addition",id:"range-addition",level:2},{value:"Inputs",id:"inputs-208",level:3},{value:"Sub-problems",id:"sub-problems-208",level:3},{value:"Edge Cases",id:"edge-cases-208",level:3},{value:"Further Readings",id:"further-readings-208",level:3},{value:"Sum of Two Integers",id:"sum-of-two-integers",level:2},{value:"Inputs",id:"inputs-209",level:3},{value:"Sub-problems",id:"sub-problems-209",level:3},{value:"Edge Cases",id:"edge-cases-209",level:3},{value:"Further Readings",id:"further-readings-209",level:3},{value:"Super Pow",id:"super-pow",level:2},{value:"Inputs",id:"inputs-210",level:3},{value:"Sub-problems",id:"sub-problems-210",level:3},{value:"Edge Cases",id:"edge-cases-210",level:3},{value:"Further Readings",id:"further-readings-210",level:3},{value:"Find K Pairs with Smallest Sums",id:"find-k-pairs-with-smallest-sums",level:2},{value:"Inputs",id:"inputs-211",level:3},{value:"Sub-problems",id:"sub-problems-211",level:3},{value:"Edge Cases",id:"edge-cases-211",level:3},{value:"Further Readings",id:"further-readings-211",level:3},{value:"Guess Number Higher or Lower II",id:"guess-number-higher-or-lower-ii",level:2},{value:"Inputs",id:"inputs-212",level:3},{value:"Sub-problems",id:"sub-problems-212",level:3},{value:"Edge Cases",id:"edge-cases-212",level:3},{value:"Further Readings",id:"further-readings-212",level:3},{value:"Wiggle Subsequence",id:"wiggle-subsequence",level:2},{value:"Inputs",id:"inputs-213",level:3},{value:"Sub-problems",id:"sub-problems-213",level:3},{value:"Edge Cases",id:"edge-cases-213",level:3},{value:"Further Readings",id:"further-readings-213",level:3},{value:"Combination Sum IV",id:"combination-sum-iv",level:2},{value:"Inputs",id:"inputs-214",level:3},{value:"Sub-problems",id:"sub-problems-214",level:3},{value:"Edge Cases",id:"edge-cases-214",level:3},{value:"Further Readings",id:"further-readings-214",level:3},{value:"Kth Smallest Element in a Sorted Matrix",id:"kth-smallest-element-in-a-sorted-matrix",level:2},{value:"Inputs",id:"inputs-215",level:3},{value:"Sub-problems",id:"sub-problems-215",level:3},{value:"Edge Cases",id:"edge-cases-215",level:3},{value:"Further Readings",id:"further-readings-215",level:3},{value:"Design Phone Directory",id:"design-phone-directory",level:2},{value:"Inputs",id:"inputs-216",level:3},{value:"Sub-problems",id:"sub-problems-216",level:3},{value:"Edge Cases",id:"edge-cases-216",level:3},{value:"Further Readings",id:"further-readings-216",level:3},{value:"Insert Delete GetRandom O(1)",id:"insert-delete-getrandom-o1",level:2},{value:"Inputs",id:"inputs-217",level:3},{value:"Sub-problems",id:"sub-problems-217",level:3},{value:"Edge Cases",id:"edge-cases-217",level:3},{value:"Further Readings",id:"further-readings-217",level:3},{value:"Linked List Random Node",id:"linked-list-random-node",level:2},{value:"Inputs",id:"inputs-218",level:3},{value:"Sub-problems",id:"sub-problems-218",level:3},{value:"Edge Cases",id:"edge-cases-218",level:3},{value:"Further Readings",id:"further-readings-218",level:3},{value:"Shuffle an Array",id:"shuffle-an-array",level:2},{value:"Inputs",id:"inputs-219",level:3},{value:"Sub-problems",id:"sub-problems-219",level:3},{value:"Edge Cases",id:"edge-cases-219",level:3},{value:"Further Readings",id:"further-readings-219",level:3},{value:"Mini Parser",id:"mini-parser",level:2},{value:"Inputs",id:"inputs-220",level:3},{value:"Sub-problems",id:"sub-problems-220",level:3},{value:"Edge Cases",id:"edge-cases-220",level:3},{value:"Further Readings",id:"further-readings-220",level:3},{value:"Lexicographical Numbers",id:"lexicographical-numbers",level:2},{value:"Inputs",id:"inputs-221",level:3},{value:"Sub-problems",id:"sub-problems-221",level:3},{value:"Edge Cases",id:"edge-cases-221",level:3},{value:"Further Readings",id:"further-readings-221",level:3},{value:"Longest Absolute File Path",id:"longest-absolute-file-path",level:2},{value:"Inputs",id:"inputs-222",level:3},{value:"Sub-problems",id:"sub-problems-222",level:3},{value:"Edge Cases",id:"edge-cases-222",level:3},{value:"Further Readings",id:"further-readings-222",level:3},{value:"Elimination Game",id:"elimination-game",level:2},{value:"Inputs",id:"inputs-223",level:3},{value:"Sub-problems",id:"sub-problems-223",level:3},{value:"Edge Cases",id:"edge-cases-223",level:3},{value:"Further Readings",id:"further-readings-223",level:3},{value:"UTF-8 Validation",id:"utf-8-validation",level:2},{value:"Inputs",id:"inputs-224",level:3},{value:"Sub-problems",id:"sub-problems-224",level:3},{value:"Edge Cases",id:"edge-cases-224",level:3},{value:"Further Readings",id:"further-readings-224",level:3},{value:"Decode String",id:"decode-string",level:2},{value:"Inputs",id:"inputs-225",level:3},{value:"Sub-problems",id:"sub-problems-225",level:3},{value:"Edge Cases",id:"edge-cases-225",level:3},{value:"Further Readings",id:"further-readings-225",level:3},{value:"Longest Substring with At Least K Repeating Characters",id:"longest-substring-with-at-least-k-repeating-characters",level:2},{value:"Inputs",id:"inputs-226",level:3},{value:"Sub-problems",id:"sub-problems-226",level:3},{value:"Edge Cases",id:"edge-cases-226",level:3},{value:"Further Readings",id:"further-readings-226",level:3},{value:"Rotate Function",id:"rotate-function",level:2},{value:"Inputs",id:"inputs-227",level:3},{value:"Sub-problems",id:"sub-problems-227",level:3},{value:"Edge Cases",id:"edge-cases-227",level:3},{value:"Further Readings",id:"further-readings-227",level:3},{value:"Integer Replacement",id:"integer-replacement",level:2},{value:"Inputs",id:"inputs-228",level:3},{value:"Sub-problems",id:"sub-problems-228",level:3},{value:"Edge Cases",id:"edge-cases-228",level:3},{value:"Further Readings",id:"further-readings-228",level:3},{value:"Random Pick Index",id:"random-pick-index",level:2},{value:"Inputs",id:"inputs-229",level:3},{value:"Sub-problems",id:"sub-problems-229",level:3},{value:"Edge Cases",id:"edge-cases-229",level:3},{value:"Further Readings",id:"further-readings-229",level:3},{value:"Evaluate Division",id:"evaluate-division",level:2},{value:"Inputs",id:"inputs-230",level:3},{value:"Sub-problems",id:"sub-problems-230",level:3},{value:"Edge Cases",id:"edge-cases-230",level:3},{value:"Further Readings",id:"further-readings-230",level:3},{value:"Nth Digit",id:"nth-digit",level:2},{value:"Inputs",id:"inputs-231",level:3},{value:"Sub-problems",id:"sub-problems-231",level:3},{value:"Edge Cases",id:"edge-cases-231",level:3},{value:"Further Readings",id:"further-readings-231",level:3},{value:"Remove K Digits",id:"remove-k-digits",level:2},{value:"Inputs",id:"inputs-232",level:3},{value:"Sub-problems",id:"sub-problems-232",level:3},{value:"Edge Cases",id:"edge-cases-232",level:3},{value:"Further Readings",id:"further-readings-232",level:3},{value:"Queue Reconstruction by Height",id:"queue-reconstruction-by-height",level:2},{value:"Inputs",id:"inputs-233",level:3},{value:"Sub-problems",id:"sub-problems-233",level:3},{value:"Edge Cases",id:"edge-cases-233",level:3},{value:"Further Readings",id:"further-readings-233",level:3},{value:"Arithmetic Slices",id:"arithmetic-slices",level:2},{value:"Inputs",id:"inputs-234",level:3},{value:"Sub-problems",id:"sub-problems-234",level:3},{value:"Edge Cases",id:"edge-cases-234",level:3},{value:"Further Readings",id:"further-readings-234",level:3},{value:"Partition Equal Subset Sum",id:"partition-equal-subset-sum",level:2},{value:"Inputs",id:"inputs-235",level:3},{value:"Sub-problems",id:"sub-problems-235",level:3},{value:"Edge Cases",id:"edge-cases-235",level:3},{value:"Further Readings",id:"further-readings-235",level:3},{value:"Pacific Atlantic Water Flow",id:"pacific-atlantic-water-flow",level:2},{value:"Inputs",id:"inputs-236",level:3},{value:"Sub-problems",id:"sub-problems-236",level:3},{value:"Edge Cases",id:"edge-cases-236",level:3},{value:"Further Readings",id:"further-readings-236",level:3},{value:"Sentence Screen Fitting",id:"sentence-screen-fitting",level:2},{value:"Inputs",id:"inputs-237",level:3},{value:"Sub-problems",id:"sub-problems-237",level:3},{value:"Edge Cases",id:"edge-cases-237",level:3},{value:"Further Readings",id:"further-readings-237",level:3},{value:"Battleships in a Board",id:"battleships-in-a-board",level:2},{value:"Inputs",id:"inputs-238",level:3},{value:"Sub-problems",id:"sub-problems-238",level:3},{value:"Edge Cases",id:"edge-cases-238",level:3},{value:"Further Readings",id:"further-readings-238",level:3},{value:"Maximum XOR of Two Numbers in an Array",id:"maximum-xor-of-two-numbers-in-an-array",level:2},{value:"Inputs",id:"inputs-239",level:3},{value:"Sub-problems",id:"sub-problems-239",level:3},{value:"Edge Cases",id:"edge-cases-239",level:3},{value:"Further Readings",id:"further-readings-239",level:3},{value:"Reconstruct Original Digits from English",id:"reconstruct-original-digits-from-english",level:2},{value:"Inputs",id:"inputs-240",level:3},{value:"Sub-problems",id:"sub-problems-240",level:3},{value:"Edge Cases",id:"edge-cases-240",level:3},{value:"Further Readings",id:"further-readings-240",level:3},{value:"Longest Repeating Character Replacement",id:"longest-repeating-character-replacement",level:2},{value:"Inputs",id:"inputs-241",level:3},{value:"Sub-problems",id:"sub-problems-241",level:3},{value:"Edge Cases",id:"edge-cases-241",level:3},{value:"Further Readings",id:"further-readings-241",level:3},{value:"Convert Binary Search Tree to Sorted Doubly Linked List",id:"convert-binary-search-tree-to-sorted-doubly-linked-list",level:2},{value:"Inputs",id:"inputs-242",level:3},{value:"Sub-problems",id:"sub-problems-242",level:3},{value:"Edge Cases",id:"edge-cases-242",level:3},{value:"Further Readings",id:"further-readings-242",level:3},{value:"Construct Quad Tree",id:"construct-quad-tree",level:2},{value:"Inputs",id:"inputs-243",level:3},{value:"Sub-problems",id:"sub-problems-243",level:3},{value:"Edge Cases",id:"edge-cases-243",level:3},{value:"Further Readings",id:"further-readings-243",level:3},{value:"N-ary Tree Level Order Traversal",id:"n-ary-tree-level-order-traversal",level:2},{value:"Inputs",id:"inputs-244",level:3},{value:"Sub-problems",id:"sub-problems-244",level:3},{value:"Edge Cases",id:"edge-cases-244",level:3},{value:"Further Readings",id:"further-readings-244",level:3},{value:"Flatten a Multilevel Doubly Linked List",id:"flatten-a-multilevel-doubly-linked-list",level:2},{value:"Inputs",id:"inputs-245",level:3},{value:"Sub-problems",id:"sub-problems-245",level:3},{value:"Edge Cases",id:"edge-cases-245",level:3},{value:"Further Readings",id:"further-readings-245",level:3},{value:"Minimum Genetic Mutation",id:"minimum-genetic-mutation",level:2},{value:"Inputs",id:"inputs-246",level:3},{value:"Sub-problems",id:"sub-problems-246",level:3},{value:"Edge Cases",id:"edge-cases-246",level:3},{value:"Further Readings",id:"further-readings-246",level:3},{value:"Non-overlapping Intervals",id:"non-overlapping-intervals",level:2},{value:"Inputs",id:"inputs-247",level:3},{value:"Sub-problems",id:"sub-problems-247",level:3},{value:"Edge Cases",id:"edge-cases-247",level:3},{value:"Further Readings",id:"further-readings-247",level:3},{value:"Find Right Interval",id:"find-right-interval",level:2},{value:"Inputs",id:"inputs-248",level:3},{value:"Sub-problems",id:"sub-problems-248",level:3},{value:"Edge Cases",id:"edge-cases-248",level:3},{value:"Further Readings",id:"further-readings-248",level:3},{value:"Path Sum III",id:"path-sum-iii",level:2},{value:"Inputs",id:"inputs-249",level:3},{value:"Sub-problems",id:"sub-problems-249",level:3},{value:"Edge Cases",id:"edge-cases-249",level:3},{value:"Further Readings",id:"further-readings-249",level:3},{value:"Find All Anagrams in a String",id:"find-all-anagrams-in-a-string",level:2},{value:"Inputs",id:"inputs-250",level:3},{value:"Sub-problems",id:"sub-problems-250",level:3},{value:"Edge Cases",id:"edge-cases-250",level:3},{value:"Further Readings",id:"further-readings-250",level:3},{value:"Ternary Expression Parser",id:"ternary-expression-parser",level:2},{value:"Inputs",id:"inputs-251",level:3},{value:"Sub-problems",id:"sub-problems-251",level:3},{value:"Edge Cases",id:"edge-cases-251",level:3},{value:"Further Readings",id:"further-readings-251",level:3},{value:"Find All Duplicates in an Array",id:"find-all-duplicates-in-an-array",level:2},{value:"Inputs",id:"inputs-252",level:3},{value:"Sub-problems",id:"sub-problems-252",level:3},{value:"Edge Cases",id:"edge-cases-252",level:3},{value:"Further Readings",id:"further-readings-252",level:3},{value:"String Compression",id:"string-compression",level:2},{value:"Inputs",id:"inputs-253",level:3},{value:"Sub-problems",id:"sub-problems-253",level:3},{value:"Edge Cases",id:"edge-cases-253",level:3},{value:"Further Readings",id:"further-readings-253",level:3},{value:"Sequence Reconstruction",id:"sequence-reconstruction",level:2},{value:"Inputs",id:"inputs-254",level:3},{value:"Sub-problems",id:"sub-problems-254",level:3},{value:"Edge Cases",id:"edge-cases-254",level:3},{value:"Further Readings",id:"further-readings-254",level:3},{value:"Add Two Numbers II",id:"add-two-numbers-ii",level:2},{value:"Inputs",id:"inputs-255",level:3},{value:"Sub-problems",id:"sub-problems-255",level:3},{value:"Edge Cases",id:"edge-cases-255",level:3},{value:"Further Readings",id:"further-readings-255",level:3},{value:"Number of Boomerangs",id:"number-of-boomerangs",level:2},{value:"Inputs",id:"inputs-256",level:3},{value:"Sub-problems",id:"sub-problems-256",level:3},{value:"Edge Cases",id:"edge-cases-256",level:3},{value:"Further Readings",id:"further-readings-256",level:3},{value:"Serialize and Deserialize BST",id:"serialize-and-deserialize-bst",level:2},{value:"Inputs",id:"inputs-257",level:3},{value:"Sub-problems",id:"sub-problems-257",level:3},{value:"Edge Cases",id:"edge-cases-257",level:3},{value:"Further Readings",id:"further-readings-257",level:3},{value:"Delete Node in a BST",id:"delete-node-in-a-bst",level:2},{value:"Inputs",id:"inputs-258",level:3},{value:"Sub-problems",id:"sub-problems-258",level:3},{value:"Edge Cases",id:"edge-cases-258",level:3},{value:"Further Readings",id:"further-readings-258",level:3},{value:"Sort Characters By Frequency",id:"sort-characters-by-frequency",level:2},{value:"Inputs",id:"inputs-259",level:3},{value:"Sub-problems",id:"sub-problems-259",level:3},{value:"Edge Cases",id:"edge-cases-259",level:3},{value:"Further Readings",id:"further-readings-259",level:3},{value:"Minimum Number of Arrows to Burst Balloons",id:"minimum-number-of-arrows-to-burst-balloons",level:2},{value:"Inputs",id:"inputs-260",level:3},{value:"Sub-problems",id:"sub-problems-260",level:3},{value:"Edge Cases",id:"edge-cases-260",level:3},{value:"Further Readings",id:"further-readings-260",level:3},{value:"Minimum Moves to Equal Array Elements",id:"minimum-moves-to-equal-array-elements",level:2},{value:"Inputs",id:"inputs-261",level:3},{value:"Sub-problems",id:"sub-problems-261",level:3},{value:"Edge Cases",id:"edge-cases-261",level:3},{value:"Further Readings",id:"further-readings-261",level:3},{value:"4Sum II",id:"4sum-ii",level:2},{value:"Inputs",id:"inputs-262",level:3},{value:"Sub-problems",id:"sub-problems-262",level:3},{value:"Edge Cases",id:"edge-cases-262",level:3},{value:"Further Readings",id:"further-readings-262",level:3},{value:"132 Pattern",id:"132-pattern",level:2},{value:"Inputs",id:"inputs-263",level:3},{value:"Sub-problems",id:"sub-problems-263",level:3},{value:"Edge Cases",id:"edge-cases-263",level:3},{value:"Further Readings",id:"further-readings-263",level:3},{value:"Circular Array Loop",id:"circular-array-loop",level:2},{value:"Inputs",id:"inputs-264",level:3},{value:"Sub-problems",id:"sub-problems-264",level:3},{value:"Edge Cases",id:"edge-cases-264",level:3},{value:"Further Readings",id:"further-readings-264",level:3},{value:"Minimum Moves to Equal Array Elements II",id:"minimum-moves-to-equal-array-elements-ii",level:2},{value:"Inputs",id:"inputs-265",level:3},{value:"Sub-problems",id:"sub-problems-265",level:3},{value:"Edge Cases",id:"edge-cases-265",level:3},{value:"Further Readings",id:"further-readings-265",level:3},{value:"Can I Win",id:"can-i-win",level:2},{value:"Inputs",id:"inputs-266",level:3},{value:"Sub-problems",id:"sub-problems-266",level:3},{value:"Edge Cases",id:"edge-cases-266",level:3},{value:"Further Readings",id:"further-readings-266",level:3},{value:"Unique Substrings in Wraparound String",id:"unique-substrings-in-wraparound-string",level:2},{value:"Inputs",id:"inputs-267",level:3},{value:"Sub-problems",id:"sub-problems-267",level:3},{value:"Edge Cases",id:"edge-cases-267",level:3},{value:"Further Readings",id:"further-readings-267",level:3},{value:"Validate IP Address",id:"validate-ip-address",level:2},{value:"Inputs",id:"inputs-268",level:3},{value:"Sub-problems",id:"sub-problems-268",level:3},{value:"Edge Cases",id:"edge-cases-268",level:3},{value:"Further Readings",id:"further-readings-268",level:3},{value:"Convex Polygon",id:"convex-polygon",level:2},{value:"Inputs",id:"inputs-269",level:3},{value:"Sub-problems",id:"sub-problems-269",level:3},{value:"Edge Cases",id:"edge-cases-269",level:3},{value:"Further Readings",id:"further-readings-269",level:3},{value:"Implement Rand10() Using Rand7()",id:"implement-rand10-using-rand7",level:2},{value:"Inputs",id:"inputs-270",level:3},{value:"Sub-problems",id:"sub-problems-270",level:3},{value:"Edge Cases",id:"edge-cases-270",level:3},{value:"Further Readings",id:"further-readings-270",level:3},{value:"Matchsticks to Square",id:"matchsticks-to-square",level:2},{value:"Inputs",id:"inputs-271",level:3},{value:"Sub-problems",id:"sub-problems-271",level:3},{value:"Edge Cases",id:"edge-cases-271",level:3},{value:"Further Readings",id:"further-readings-271",level:3},{value:"Ones and Zeroes",id:"ones-and-zeroes",level:2},{value:"Inputs",id:"inputs-272",level:3},{value:"Sub-problems",id:"sub-problems-272",level:3},{value:"Edge Cases",id:"edge-cases-272",level:3},{value:"Further Readings",id:"further-readings-272",level:3},{value:"Heaters",id:"heaters",level:2},{value:"Inputs",id:"inputs-273",level:3},{value:"Sub-problems",id:"sub-problems-273",level:3},{value:"Edge Cases",id:"edge-cases-273",level:3},{value:"Further Readings",id:"further-readings-273",level:3},{value:"Total Hamming Distance",id:"total-hamming-distance",level:2},{value:"Inputs",id:"inputs-274",level:3},{value:"Sub-problems",id:"sub-problems-274",level:3},{value:"Edge Cases",id:"edge-cases-274",level:3},{value:"Further Readings",id:"further-readings-274",level:3},{value:"Generate Random Point in a Circle",id:"generate-random-point-in-a-circle",level:2},{value:"Inputs",id:"inputs-275",level:3},{value:"Sub-problems",id:"sub-problems-275",level:3},{value:"Edge Cases",id:"edge-cases-275",level:3},{value:"Further Readings",id:"further-readings-275",level:3},{value:"Magical String",id:"magical-string",level:2},{value:"Inputs",id:"inputs-276",level:3},{value:"Sub-problems",id:"sub-problems-276",level:3},{value:"Edge Cases",id:"edge-cases-276",level:3},{value:"Further Readings",id:"further-readings-276",level:3},{value:"Find Permutation",id:"find-permutation",level:2},{value:"Inputs",id:"inputs-277",level:3},{value:"Sub-problems",id:"sub-problems-277",level:3},{value:"Edge Cases",id:"edge-cases-277",level:3},{value:"Further Readings",id:"further-readings-277",level:3},{value:"Predict the Winner",id:"predict-the-winner",level:2},{value:"Inputs",id:"inputs-278",level:3},{value:"Sub-problems",id:"sub-problems-278",level:3},{value:"Edge Cases",id:"edge-cases-278",level:3},{value:"Further Readings",id:"further-readings-278",level:3},{value:"Max Consecutive Ones II",id:"max-consecutive-ones-ii",level:2},{value:"Inputs",id:"inputs-279",level:3},{value:"Sub-problems",id:"sub-problems-279",level:3},{value:"Edge Cases",id:"edge-cases-279",level:3},{value:"Further Readings",id:"further-readings-279",level:3},{value:"The Maze",id:"the-maze",level:2},{value:"Inputs",id:"inputs-280",level:3},{value:"Sub-problems",id:"sub-problems-280",level:3},{value:"Edge Cases",id:"edge-cases-280",level:3},{value:"Further Readings",id:"further-readings-280",level:3},{value:"Increasing Subsequences",id:"increasing-subsequences",level:2},{value:"Inputs",id:"inputs-281",level:3},{value:"Sub-problems",id:"sub-problems-281",level:3},{value:"Edge Cases",id:"edge-cases-281",level:3},{value:"Further Readings",id:"further-readings-281",level:3},{value:"Target Sum",id:"target-sum",level:2},{value:"Inputs",id:"inputs-282",level:3},{value:"Sub-problems",id:"sub-problems-282",level:3},{value:"Edge Cases",id:"edge-cases-282",level:3},{value:"Further Readings",id:"further-readings-282",level:3},{value:"Random Point in Non-overlapping Rectangles",id:"random-point-in-non-overlapping-rectangles",level:2},{value:"Inputs",id:"inputs-283",level:3},{value:"Sub-problems",id:"sub-problems-283",level:3},{value:"Edge Cases",id:"edge-cases-283",level:3},{value:"Further Readings",id:"further-readings-283",level:3},{value:"Diagonal Traverse",id:"diagonal-traverse",level:2},{value:"Inputs",id:"inputs-284",level:3},{value:"Sub-problems",id:"sub-problems-284",level:3},{value:"Edge Cases",id:"edge-cases-284",level:3},{value:"Further Readings",id:"further-readings-284",level:3},{value:"Next Greater Element II",id:"next-greater-element-ii",level:2},{value:"Inputs",id:"inputs-285",level:3},{value:"Sub-problems",id:"sub-problems-285",level:3},{value:"Edge Cases",id:"edge-cases-285",level:3},{value:"Further Readings",id:"further-readings-285",level:3},{value:"The Maze II",id:"the-maze-ii",level:2},{value:"Inputs",id:"inputs-286",level:3},{value:"Sub-problems",id:"sub-problems-286",level:3},{value:"Edge Cases",id:"edge-cases-286",level:3},{value:"Further Readings",id:"further-readings-286",level:3},{value:"Most Frequent Subtree Sum",id:"most-frequent-subtree-sum",level:2},{value:"Inputs",id:"inputs-287",level:3},{value:"Sub-problems",id:"sub-problems-287",level:3},{value:"Edge Cases",id:"edge-cases-287",level:3},{value:"Further Readings",id:"further-readings-287",level:3},{value:"Inorder Successor in BST II",id:"inorder-successor-in-bst-ii",level:2},{value:"Inputs",id:"inputs-288",level:3},{value:"Sub-problems",id:"sub-problems-288",level:3},{value:"Edge Cases",id:"edge-cases-288",level:3},{value:"Further Readings",id:"further-readings-288",level:3},{value:"Find Bottom Left Tree Value",id:"find-bottom-left-tree-value",level:2},{value:"Inputs",id:"inputs-289",level:3},{value:"Sub-problems",id:"sub-problems-289",level:3},{value:"Edge Cases",id:"edge-cases-289",level:3},{value:"Further Readings",id:"further-readings-289",level:3},{value:"Find Largest Value in Each Tree Row",id:"find-largest-value-in-each-tree-row",level:2},{value:"Inputs",id:"inputs-290",level:3},{value:"Sub-problems",id:"sub-problems-290",level:3},{value:"Edge Cases",id:"edge-cases-290",level:3},{value:"Further Readings",id:"further-readings-290",level:3},{value:"Longest Palindromic Subsequence",id:"longest-palindromic-subsequence",level:2},{value:"Inputs",id:"inputs-291",level:3},{value:"Sub-problems",id:"sub-problems-291",level:3},{value:"Edge Cases",id:"edge-cases-291",level:3},{value:"Further Readings",id:"further-readings-291",level:3},{value:"Coin Change 2",id:"coin-change-2",level:2},{value:"Inputs",id:"inputs-292",level:3},{value:"Sub-problems",id:"sub-problems-292",level:3},{value:"Edge Cases",id:"edge-cases-292",level:3},{value:"Further Readings",id:"further-readings-292",level:3},{value:"Random Flip Matrix",id:"random-flip-matrix",level:2},{value:"Inputs",id:"inputs-293",level:3},{value:"Sub-problems",id:"sub-problems-293",level:3},{value:"Edge Cases",id:"edge-cases-293",level:3},{value:"Further Readings",id:"further-readings-293",level:3},{value:"Longest Uncommon Subsequence II",id:"longest-uncommon-subsequence-ii",level:2},{value:"Inputs",id:"inputs-294",level:3},{value:"Sub-problems",id:"sub-problems-294",level:3},{value:"Edge Cases",id:"edge-cases-294",level:3},{value:"Further Readings",id:"further-readings-294",level:3},{value:"Continuous Subarray Sum",id:"continuous-subarray-sum",level:2},{value:"Inputs",id:"inputs-295",level:3},{value:"Sub-problems",id:"sub-problems-295",level:3},{value:"Edge Cases",id:"edge-cases-295",level:3},{value:"Further Readings",id:"further-readings-295",level:3},{value:"Longest Word in Dictionary through Deleting",id:"longest-word-in-dictionary-through-deleting",level:2},{value:"Inputs",id:"inputs-296",level:3},{value:"Sub-problems",id:"sub-problems-296",level:3},{value:"Edge Cases",id:"edge-cases-296",level:3},{value:"Further Readings",id:"further-readings-296",level:3},{value:"Contiguous Array",id:"contiguous-array",level:2},{value:"Inputs",id:"inputs-297",level:3},{value:"Sub-problems",id:"sub-problems-297",level:3},{value:"Edge Cases",id:"edge-cases-297",level:3},{value:"Further Readings",id:"further-readings-297",level:3},{value:"Beautiful Arrangement",id:"beautiful-arrangement",level:2},{value:"Inputs",id:"inputs-298",level:3},{value:"Sub-problems",id:"sub-problems-298",level:3},{value:"Edge Cases",id:"edge-cases-298",level:3},{value:"Further Readings",id:"further-readings-298",level:3},{value:"Random Pick with Weight",id:"random-pick-with-weight",level:2},{value:"Inputs",id:"inputs-299",level:3},{value:"Sub-problems",id:"sub-problems-299",level:3},{value:"Edge Cases",id:"edge-cases-299",level:3},{value:"Further Readings",id:"further-readings-299",level:3},{value:"Minesweeper",id:"minesweeper",level:2},{value:"Inputs",id:"inputs-300",level:3},{value:"Sub-problems",id:"sub-problems-300",level:3},{value:"Edge Cases",id:"edge-cases-300",level:3},{value:"Further Readings",id:"further-readings-300",level:3},{value:"Lonely Pixel I",id:"lonely-pixel-i",level:2},{value:"Inputs",id:"inputs-301",level:3},{value:"Sub-problems",id:"sub-problems-301",level:3},{value:"Edge Cases",id:"edge-cases-301",level:3},{value:"Further Readings",id:"further-readings-301",level:3},{value:"K-diff Pairs in an Array",id:"k-diff-pairs-in-an-array",level:2},{value:"Inputs",id:"inputs-302",level:3},{value:"Sub-problems",id:"sub-problems-302",level:3},{value:"Edge Cases",id:"edge-cases-302",level:3},{value:"Further Readings",id:"further-readings-302",level:3},{value:"Lonely Pixel II",id:"lonely-pixel-ii",level:2},{value:"Inputs",id:"inputs-303",level:3},{value:"Sub-problems",id:"sub-problems-303",level:3},{value:"Edge Cases",id:"edge-cases-303",level:3},{value:"Further Readings",id:"further-readings-303",level:3},{value:"Game Play Analysis III",id:"game-play-analysis-iii",level:2},{value:"Inputs",id:"inputs-304",level:3},{value:"Sub-problems",id:"sub-problems-304",level:3},{value:"Edge Cases",id:"edge-cases-304",level:3},{value:"Further Readings",id:"further-readings-304",level:3},{value:"Encode and Decode TinyURL",id:"encode-and-decode-tinyurl",level:2},{value:"Inputs",id:"inputs-305",level:3},{value:"Sub-problems",id:"sub-problems-305",level:3},{value:"Edge Cases",id:"edge-cases-305",level:3},{value:"Further Readings",id:"further-readings-305",level:3},{value:"Construct Binary Tree from String",id:"construct-binary-tree-from-string",level:2},{value:"Inputs",id:"inputs-306",level:3},{value:"Sub-problems",id:"sub-problems-306",level:3},{value:"Edge Cases",id:"edge-cases-306",level:3},{value:"Further Readings",id:"further-readings-306",level:3},{value:"Complex Number Multiplication",id:"complex-number-multiplication",level:2},{value:"Inputs",id:"inputs-307",level:3},{value:"Sub-problems",id:"sub-problems-307",level:3},{value:"Edge Cases",id:"edge-cases-307",level:3},{value:"Further Readings",id:"further-readings-307",level:3},{value:"Convert BST to Greater Tree",id:"convert-bst-to-greater-tree",level:2},{value:"Inputs",id:"inputs-308",level:3},{value:"Sub-problems",id:"sub-problems-308",level:3},{value:"Edge Cases",id:"edge-cases-308",level:3},{value:"Further Readings",id:"further-readings-308",level:3},{value:"Minimum Time Difference",id:"minimum-time-difference",level:2},{value:"Inputs",id:"inputs-309",level:3},{value:"Sub-problems",id:"sub-problems-309",level:3},{value:"Edge Cases",id:"edge-cases-309",level:3},{value:"Further Readings",id:"further-readings-309",level:3},{value:"Single Element in a Sorted Array",id:"single-element-in-a-sorted-array",level:2},{value:"Inputs",id:"inputs-310",level:3},{value:"Sub-problems",id:"sub-problems-310",level:3},{value:"Edge Cases",id:"edge-cases-310",level:3},{value:"Further Readings",id:"further-readings-310",level:3},{value:"01 Matrix",id:"01-matrix",level:2},{value:"Inputs",id:"inputs-311",level:3},{value:"Sub-problems",id:"sub-problems-311",level:3},{value:"Edge Cases",id:"edge-cases-311",level:3},{value:"Further Readings",id:"further-readings-311",level:3},{value:"Output Contest Matches",id:"output-contest-matches",level:2},{value:"Inputs",id:"inputs-312",level:3},{value:"Sub-problems",id:"sub-problems-312",level:3},{value:"Edge Cases",id:"edge-cases-312",level:3},{value:"Further Readings",id:"further-readings-312",level:3},{value:"Boundary of Binary Tree",id:"boundary-of-binary-tree",level:2},{value:"Inputs",id:"inputs-313",level:3},{value:"Sub-problems",id:"sub-problems-313",level:3},{value:"Edge Cases",id:"edge-cases-313",level:3},{value:"Further Readings",id:"further-readings-313",level:3},{value:"Number of Provinces",id:"number-of-provinces",level:2},{value:"Inputs",id:"inputs-314",level:3},{value:"Sub-problems",id:"sub-problems-314",level:3},{value:"Edge Cases",id:"edge-cases-314",level:3},{value:"Further Readings",id:"further-readings-314",level:3},{value:"Binary Tree Longest Consecutive Sequence II",id:"binary-tree-longest-consecutive-sequence-ii",level:2},{value:"Inputs",id:"inputs-315",level:3},{value:"Sub-problems",id:"sub-problems-315",level:3},{value:"Edge Cases",id:"edge-cases-315",level:3},{value:"Further Readings",id:"further-readings-315",level:3},{value:"Game Play Analysis IV",id:"game-play-analysis-iv",level:2},{value:"Inputs",id:"inputs-316",level:3},{value:"Sub-problems",id:"sub-problems-316",level:3},{value:"Edge Cases",id:"edge-cases-316",level:3},{value:"Further Readings",id:"further-readings-316",level:3},{value:"Optimal Division",id:"optimal-division",level:2},{value:"Inputs",id:"inputs-317",level:3},{value:"Sub-problems",id:"sub-problems-317",level:3},{value:"Edge Cases",id:"edge-cases-317",level:3},{value:"Further Readings",id:"further-readings-317",level:3},{value:"Brick Wall",id:"brick-wall",level:2},{value:"Inputs",id:"inputs-318",level:3},{value:"Sub-problems",id:"sub-problems-318",level:3},{value:"Edge Cases",id:"edge-cases-318",level:3},{value:"Further Readings",id:"further-readings-318",level:3},{value:"Split Concatenated Strings",id:"split-concatenated-strings",level:2},{value:"Inputs",id:"inputs-319",level:3},{value:"Sub-problems",id:"sub-problems-319",level:3},{value:"Edge Cases",id:"edge-cases-319",level:3},{value:"Further Readings",id:"further-readings-319",level:3},{value:"Next Greater Element III",id:"next-greater-element-iii",level:2},{value:"Inputs",id:"inputs-320",level:3},{value:"Sub-problems",id:"sub-problems-320",level:3},{value:"Edge Cases",id:"edge-cases-320",level:3},{value:"Further Readings",id:"further-readings-320",level:3},{value:"Logical OR of Two Binary Grids Represented as Quad-Trees",id:"logical-or-of-two-binary-grids-represented-as-quad-trees",level:2},{value:"Inputs",id:"inputs-321",level:3},{value:"Sub-problems",id:"sub-problems-321",level:3},{value:"Edge Cases",id:"edge-cases-321",level:3},{value:"Further Readings",id:"further-readings-321",level:3},{value:"Subarray Sum Equals K",id:"subarray-sum-equals-k",level:2},{value:"Inputs",id:"inputs-322",level:3},{value:"Sub-problems",id:"sub-problems-322",level:3},{value:"Edge Cases",id:"edge-cases-322",level:3},{value:"Further Readings",id:"further-readings-322",level:3},{value:"Longest Line of Consecutive One in Matrix",id:"longest-line-of-consecutive-one-in-matrix",level:2},{value:"Inputs",id:"inputs-323",level:3},{value:"Sub-problems",id:"sub-problems-323",level:3},{value:"Edge Cases",id:"edge-cases-323",level:3},{value:"Further Readings",id:"further-readings-323",level:3},{value:"Array Nesting",id:"array-nesting",level:2},{value:"Inputs",id:"inputs-324",level:3},{value:"Sub-problems",id:"sub-problems-324",level:3},{value:"Edge Cases",id:"edge-cases-324",level:3},{value:"Further Readings",id:"further-readings-324",level:3},{value:"Permutation in String",id:"permutation-in-string",level:2},{value:"Inputs",id:"inputs-325",level:3},{value:"Sub-problems",id:"sub-problems-325",level:3},{value:"Edge Cases",id:"edge-cases-325",level:3},{value:"Further Readings",id:"further-readings-325",level:3},{value:"Managers with at Least 5 Direct Reports",id:"managers-with-at-least-5-direct-reports",level:2},{value:"Inputs",id:"inputs-326",level:3},{value:"Sub-problems",id:"sub-problems-326",level:3},{value:"Edge Cases",id:"edge-cases-326",level:3},{value:"Further Readings",id:"further-readings-326",level:3},{value:"Squirrel Simulation",id:"squirrel-simulation",level:2},{value:"Inputs",id:"inputs-327",level:3},{value:"Sub-problems",id:"sub-problems-327",level:3},{value:"Edge Cases",id:"edge-cases-327",level:3},{value:"Further Readings",id:"further-readings-327",level:3},{value:"Winning Candidate",id:"winning-candidate",level:2},{value:"Inputs",id:"inputs-328",level:3},{value:"Sub-problems",id:"sub-problems-328",level:3},{value:"Edge Cases",id:"edge-cases-328",level:3},{value:"Further Readings",id:"further-readings-328",level:3},{value:"Out of Boundary Paths",id:"out-of-boundary-paths",level:2},{value:"Inputs",id:"inputs-329",level:3},{value:"Sub-problems",id:"sub-problems-329",level:3},{value:"Edge Cases",id:"edge-cases-329",level:3},{value:"Further Readings",id:"further-readings-329",level:3},{value:"Get Highest Answer Rate Question",id:"get-highest-answer-rate-question",level:2},{value:"Inputs",id:"inputs-330",level:3},{value:"Sub-problems",id:"sub-problems-330",level:3},{value:"Edge Cases",id:"edge-cases-330",level:3},{value:"Further Readings",id:"further-readings-330",level:3},{value:"Count Student Number in Departments",id:"count-student-number-in-departments",level:2},{value:"Inputs",id:"inputs-331",level:3},{value:"Sub-problems",id:"sub-problems-331",level:3},{value:"Edge Cases",id:"edge-cases-331",level:3},{value:"Further Readings",id:"further-readings-331",level:3},{value:"Shortest Unsorted Continuous Subarray",id:"shortest-unsorted-continuous-subarray",level:2},{value:"Inputs",id:"inputs-332",level:3},{value:"Sub-problems",id:"sub-problems-332",level:3},{value:"Edge Cases",id:"edge-cases-332",level:3},{value:"Further Readings",id:"further-readings-332",level:3},{value:"Kill Process",id:"kill-process",level:2},{value:"Inputs",id:"inputs-333",level:3},{value:"Sub-problems",id:"sub-problems-333",level:3},{value:"Edge Cases",id:"edge-cases-333",level:3},{value:"Further Readings",id:"further-readings-333",level:3},{value:"Delete Operation for Two Strings",id:"delete-operation-for-two-strings",level:2},{value:"Inputs",id:"inputs-334",level:3},{value:"Sub-problems",id:"sub-problems-334",level:3},{value:"Edge Cases",id:"edge-cases-334",level:3},{value:"Further Readings",id:"further-readings-334",level:3},{value:"Investments in 2016",id:"investments-in-2016",level:2},{value:"Inputs",id:"inputs-335",level:3},{value:"Sub-problems",id:"sub-problems-335",level:3},{value:"Edge Cases",id:"edge-cases-335",level:3},{value:"Further Readings",id:"further-readings-335",level:3},{value:"Fraction Addition and Subtraction",id:"fraction-addition-and-subtraction",level:2},{value:"Inputs",id:"inputs-336",level:3},{value:"Sub-problems",id:"sub-problems-336",level:3},{value:"Edge Cases",id:"edge-cases-336",level:3},{value:"Further Readings",id:"further-readings-336",level:3},{value:"Valid Square",id:"valid-square",level:2},{value:"Inputs",id:"inputs-337",level:3},{value:"Sub-problems",id:"sub-problems-337",level:3},{value:"Edge Cases",id:"edge-cases-337",level:3},{value:"Further Readings",id:"further-readings-337",level:3},{value:"Friend Requests II: Who Has the Most Friends",id:"friend-requests-ii-who-has-the-most-friends",level:2},{value:"Inputs",id:"inputs-338",level:3},{value:"Sub-problems",id:"sub-problems-338",level:3},{value:"Edge Cases",id:"edge-cases-338",level:3},{value:"Further Readings",id:"further-readings-338",level:3},{value:"Tree Node",id:"tree-node",level:2},{value:"Inputs",id:"inputs-339",level:3},{value:"Sub-problems",id:"sub-problems-339",level:3},{value:"Edge Cases",id:"edge-cases-339",level:3},{value:"Further Readings",id:"further-readings-339",level:3},{value:"Find Duplicate File in System",id:"find-duplicate-file-in-system",level:2},{value:"Inputs",id:"inputs-340",level:3},{value:"Sub-problems",id:"sub-problems-340",level:3},{value:"Edge Cases",id:"edge-cases-340",level:3},{value:"Further Readings",id:"further-readings-340",level:3},{value:"Valid Triangle Number",id:"valid-triangle-number",level:2},{value:"Inputs",id:"inputs-341",level:3},{value:"Sub-problems",id:"sub-problems-341",level:3},{value:"Edge Cases",id:"edge-cases-341",level:3},{value:"Further Readings",id:"further-readings-341",level:3},{value:"Shortest Distance in a Plane",id:"shortest-distance-in-a-plane",level:2},{value:"Inputs",id:"inputs-342",level:3},{value:"Sub-problems",id:"sub-problems-342",level:3},{value:"Edge Cases",id:"edge-cases-342",level:3},{value:"Further Readings",id:"further-readings-342",level:3},{value:"Second Degree Follower",id:"second-degree-follower",level:2},{value:"Inputs",id:"inputs-343",level:3},{value:"Sub-problems",id:"sub-problems-343",level:3},{value:"Edge Cases",id:"edge-cases-343",level:3},{value:"Further Readings",id:"further-readings-343",level:3},{value:"Add Bold Tag in String",id:"add-bold-tag-in-string",level:2},{value:"Inputs",id:"inputs-344",level:3},{value:"Sub-problems",id:"sub-problems-344",level:3},{value:"Edge Cases",id:"edge-cases-344",level:3},{value:"Further Readings",id:"further-readings-344",level:3},{value:"Task Scheduler",id:"task-scheduler",level:2},{value:"Inputs",id:"inputs-345",level:3},{value:"Sub-problems",id:"sub-problems-345",level:3},{value:"Edge Cases",id:"edge-cases-345",level:3},{value:"Further Readings",id:"further-readings-345",level:3},{value:"Design Circular Queue",id:"design-circular-queue",level:2},{value:"Inputs",id:"inputs-346",level:3},{value:"Sub-problems",id:"sub-problems-346",level:3},{value:"Edge Cases",id:"edge-cases-346",level:3},{value:"Further Readings",id:"further-readings-346",level:3},{value:"Add One Row to Tree",id:"add-one-row-to-tree",level:2},{value:"Inputs",id:"inputs-347",level:3},{value:"Sub-problems",id:"sub-problems-347",level:3},{value:"Edge Cases",id:"edge-cases-347",level:3},{value:"Further Readings",id:"further-readings-347",level:3},{value:"Maximum Distance in Arrays",id:"maximum-distance-in-arrays",level:2},{value:"Inputs",id:"inputs-348",level:3},{value:"Sub-problems",id:"sub-problems-348",level:3},{value:"Edge Cases",id:"edge-cases-348",level:3},{value:"Further Readings",id:"further-readings-348",level:3},{value:"Minimum Factorization",id:"minimum-factorization",level:2},{value:"Inputs",id:"inputs-349",level:3},{value:"Sub-problems",id:"sub-problems-349",level:3},{value:"Edge Cases",id:"edge-cases-349",level:3},{value:"Further Readings",id:"further-readings-349",level:3},{value:"Exchange Seats",id:"exchange-seats",level:2},{value:"Inputs",id:"inputs-350",level:3},{value:"Sub-problems",id:"sub-problems-350",level:3},{value:"Edge Cases",id:"edge-cases-350",level:3},{value:"Further Readings",id:"further-readings-350",level:3},{value:"Sum of Square Numbers",id:"sum-of-square-numbers",level:2},{value:"Inputs",id:"inputs-351",level:3},{value:"Sub-problems",id:"sub-problems-351",level:3},{value:"Edge Cases",id:"edge-cases-351",level:3},{value:"Further Readings",id:"further-readings-351",level:3},{value:"Find the Derangement of An Array",id:"find-the-derangement-of-an-array",level:2},{value:"Inputs",id:"inputs-352",level:3},{value:"Sub-problems",id:"sub-problems-352",level:3},{value:"Edge Cases",id:"edge-cases-352",level:3},{value:"Further Readings",id:"further-readings-352",level:3},{value:"Design Log Storage System",id:"design-log-storage-system",level:2},{value:"Inputs",id:"inputs-353",level:3},{value:"Sub-problems",id:"sub-problems-353",level:3},{value:"Edge Cases",id:"edge-cases-353",level:3},{value:"Further Readings",id:"further-readings-353",level:3},{value:"Exclusive Time of Functions",id:"exclusive-time-of-functions",level:2},{value:"Inputs",id:"inputs-354",level:3},{value:"Sub-problems",id:"sub-problems-354",level:3},{value:"Edge Cases",id:"edge-cases-354",level:3},{value:"Further Readings",id:"further-readings-354",level:3},{value:"Shopping Offers",id:"shopping-offers",level:2},{value:"Inputs",id:"inputs-355",level:3},{value:"Sub-problems",id:"sub-problems-355",level:3},{value:"Edge Cases",id:"edge-cases-355",level:3},{value:"Further Readings",id:"further-readings-355",level:3},{value:"Solve the Equation",id:"solve-the-equation",level:2},{value:"Inputs",id:"inputs-356",level:3},{value:"Sub-problems",id:"sub-problems-356",level:3},{value:"Edge Cases",id:"edge-cases-356",level:3},{value:"Further Readings",id:"further-readings-356",level:3},{value:"Design Circular Deque",id:"design-circular-deque",level:2},{value:"Inputs",id:"inputs-357",level:3},{value:"Sub-problems",id:"sub-problems-357",level:3},{value:"Edge Cases",id:"edge-cases-357",level:3},{value:"Further Readings",id:"further-readings-357",level:3},{value:"Maximum Length of Pair Chain",id:"maximum-length-of-pair-chain",level:2},{value:"Inputs",id:"inputs-358",level:3},{value:"Sub-problems",id:"sub-problems-358",level:3},{value:"Edge Cases",id:"edge-cases-358",level:3},{value:"Further Readings",id:"further-readings-358",level:3},{value:"Palindromic Substrings",id:"palindromic-substrings",level:2},{value:"Inputs",id:"inputs-359",level:3},{value:"Sub-problems",id:"sub-problems-359",level:3},{value:"Edge Cases",id:"edge-cases-359",level:3},{value:"Further Readings",id:"further-readings-359",level:3},{value:"Replace Words",id:"replace-words",level:2},{value:"Inputs",id:"inputs-360",level:3},{value:"Sub-problems",id:"sub-problems-360",level:3},{value:"Edge Cases",id:"edge-cases-360",level:3},{value:"Further Readings",id:"further-readings-360",level:3},{value:"Dota2 Senate",id:"dota2-senate",level:2},{value:"Inputs",id:"inputs-361",level:3},{value:"Sub-problems",id:"sub-problems-361",level:3},{value:"Edge Cases",id:"edge-cases-361",level:3},{value:"Further Readings",id:"further-readings-361",level:3},{value:"2 Keys Keyboard",id:"2-keys-keyboard",level:2},{value:"Inputs",id:"inputs-362",level:3},{value:"Sub-problems",id:"sub-problems-362",level:3},{value:"Edge Cases",id:"edge-cases-362",level:3},{value:"Further Readings",id:"further-readings-362",level:3},{value:"4 Keys Keyboard",id:"4-keys-keyboard",level:2},{value:"Inputs",id:"inputs-363",level:3},{value:"Sub-problems",id:"sub-problems-363",level:3},{value:"Edge Cases",id:"edge-cases-363",level:3},{value:"Further Readings",id:"further-readings-363",level:3},{value:"Find Duplicate Subtrees",id:"find-duplicate-subtrees",level:2},{value:"Inputs",id:"inputs-364",level:3},{value:"Sub-problems",id:"sub-problems-364",level:3},{value:"Edge Cases",id:"edge-cases-364",level:3},{value:"Further Readings",id:"further-readings-364",level:3},{value:"Maximum Binary Tree",id:"maximum-binary-tree",level:2},{value:"Inputs",id:"inputs-365",level:3},{value:"Sub-problems",id:"sub-problems-365",level:3},{value:"Edge Cases",id:"edge-cases-365",level:3},{value:"Further Readings",id:"further-readings-365",level:3},{value:"Print Binary Tree",id:"print-binary-tree",level:2},{value:"Inputs",id:"inputs-366",level:3},{value:"Sub-problems",id:"sub-problems-366",level:3},{value:"Edge Cases",id:"edge-cases-366",level:3},{value:"Further Readings",id:"further-readings-366",level:3},{value:"Find K Closest Elements",id:"find-k-closest-elements",level:2},{value:"Inputs",id:"inputs-367",level:3},{value:"Sub-problems",id:"sub-problems-367",level:3},{value:"Edge Cases",id:"edge-cases-367",level:3},{value:"Further Readings",id:"further-readings-367",level:3},{value:"Split Array into Consecutive Subsequences",id:"split-array-into-consecutive-subsequences",level:2},{value:"Inputs",id:"inputs-368",level:3},{value:"Sub-problems",id:"sub-problems-368",level:3},{value:"Edge Cases",id:"edge-cases-368",level:3},{value:"Further Readings",id:"further-readings-368",level:3},{value:"Maximum Width of Binary Tree",id:"maximum-width-of-binary-tree",level:2},{value:"Inputs",id:"inputs-369",level:3},{value:"Sub-problems",id:"sub-problems-369",level:3},{value:"Edge Cases",id:"edge-cases-369",level:3},{value:"Further Readings",id:"further-readings-369",level:3},{value:"Equal Tree Partition",id:"equal-tree-partition",level:2},{value:"Inputs",id:"inputs-370",level:3},{value:"Sub-problems",id:"sub-problems-370",level:3},{value:"Edge Cases",id:"edge-cases-370",level:3},{value:"Further Readings",id:"further-readings-370",level:3},{value:"Non-decreasing Array",id:"non-decreasing-array",level:2},{value:"Inputs",id:"inputs-371",level:3},{value:"Sub-problems",id:"sub-problems-371",level:3},{value:"Edge Cases",id:"edge-cases-371",level:3},{value:"Further Readings",id:"further-readings-371",level:3},{value:"Path Sum IV",id:"path-sum-iv",level:2},{value:"Inputs",id:"inputs-372",level:3},{value:"Sub-problems",id:"sub-problems-372",level:3},{value:"Edge Cases",id:"edge-cases-372",level:3},{value:"Further Readings",id:"further-readings-372",level:3},{value:"Beautiful Arrangement II",id:"beautiful-arrangement-ii",level:2},{value:"Inputs",id:"inputs-373",level:3},{value:"Sub-problems",id:"sub-problems-373",level:3},{value:"Edge Cases",id:"edge-cases-373",level:3},{value:"Further Readings",id:"further-readings-373",level:3},{value:"Trim a Binary Search Tree",id:"trim-a-binary-search-tree",level:2},{value:"Inputs",id:"inputs-374",level:3},{value:"Sub-problems",id:"sub-problems-374",level:3},{value:"Edge Cases",id:"edge-cases-374",level:3},{value:"Further Readings",id:"further-readings-374",level:3},{value:"Maximum Swap",id:"maximum-swap",level:2},{value:"Inputs",id:"inputs-375",level:3},{value:"Sub-problems",id:"sub-problems-375",level:3},{value:"Edge Cases",id:"edge-cases-375",level:3},{value:"Further Readings",id:"further-readings-375",level:3},{value:"Bulb Switcher II",id:"bulb-switcher-ii",level:2},{value:"Inputs",id:"inputs-376",level:3},{value:"Sub-problems",id:"sub-problems-376",level:3},{value:"Edge Cases",id:"edge-cases-376",level:3},{value:"Further Readings",id:"further-readings-376",level:3},{value:"Number of Longest Increasing Subsequence",id:"number-of-longest-increasing-subsequence",level:2},{value:"Inputs",id:"inputs-377",level:3},{value:"Sub-problems",id:"sub-problems-377",level:3},{value:"Edge Cases",id:"edge-cases-377",level:3},{value:"Further Readings",id:"further-readings-377",level:3},{value:"Implement Magic Dictionary",id:"implement-magic-dictionary",level:2},{value:"Inputs",id:"inputs-378",level:3},{value:"Sub-problems",id:"sub-problems-378",level:3},{value:"Edge Cases",id:"edge-cases-378",level:3},{value:"Further Readings",id:"further-readings-378",level:3},{value:"Map Sum Pairs",id:"map-sum-pairs",level:2},{value:"Inputs",id:"inputs-379",level:3},{value:"Sub-problems",id:"sub-problems-379",level:3},{value:"Edge Cases",id:"edge-cases-379",level:3},{value:"Further Readings",id:"further-readings-379",level:3},{value:"Valid Parenthesis String",id:"valid-parenthesis-string",level:2},{value:"Inputs",id:"inputs-380",level:3},{value:"Sub-problems",id:"sub-problems-380",level:3},{value:"Edge Cases",id:"edge-cases-380",level:3},{value:"Further Readings",id:"further-readings-380",level:3},{value:"Next Closest Time",id:"next-closest-time",level:2},{value:"Inputs",id:"inputs-381",level:3},{value:"Sub-problems",id:"sub-problems-381",level:3},{value:"Edge Cases",id:"edge-cases-381",level:3},{value:"Further Readings",id:"further-readings-381",level:3},{value:"Redundant Connection",id:"redundant-connection",level:2},{value:"Inputs",id:"inputs-382",level:3},{value:"Sub-problems",id:"sub-problems-382",level:3},{value:"Edge Cases",id:"edge-cases-382",level:3},{value:"Further Readings",id:"further-readings-382",level:3},{value:"Repeated String Match",id:"repeated-string-match",level:2},{value:"Inputs",id:"inputs-383",level:3},{value:"Sub-problems",id:"sub-problems-383",level:3},{value:"Edge Cases",id:"edge-cases-383",level:3},{value:"Further Readings",id:"further-readings-383",level:3},{value:"Longest Univalue Path",id:"longest-univalue-path",level:2},{value:"Inputs",id:"inputs-384",level:3},{value:"Sub-problems",id:"sub-problems-384",level:3},{value:"Edge Cases",id:"edge-cases-384",level:3},{value:"Further Readings",id:"further-readings-384",level:3},{value:"Knight Probability in Chessboard",id:"knight-probability-in-chessboard",level:2},{value:"Inputs",id:"inputs-385",level:3},{value:"Sub-problems",id:"sub-problems-385",level:3},{value:"Edge Cases",id:"edge-cases-385",level:3},{value:"Further Readings",id:"further-readings-385",level:3},{value:"Employee Importance",id:"employee-importance",level:2},{value:"Inputs",id:"inputs-386",level:3},{value:"Sub-problems",id:"sub-problems-386",level:3},{value:"Edge Cases",id:"edge-cases-386",level:3},{value:"Further Readings",id:"further-readings-386",level:3},{value:"Top K Frequent Words",id:"top-k-frequent-words",level:2},{value:"Inputs",id:"inputs-387",level:3},{value:"Sub-problems",id:"sub-problems-387",level:3},{value:"Edge Cases",id:"edge-cases-387",level:3},{value:"Further Readings",id:"further-readings-387",level:3},{value:"Number of Distinct Islands",id:"number-of-distinct-islands",level:2},{value:"Inputs",id:"inputs-388",level:3},{value:"Sub-problems",id:"sub-problems-388",level:3},{value:"Edge Cases",id:"edge-cases-388",level:3},{value:"Further Readings",id:"further-readings-388",level:3},{value:"Max Area of Island",id:"max-area-of-island",level:2},{value:"Inputs",id:"inputs-389",level:3},{value:"Sub-problems",id:"sub-problems-389",level:3},{value:"Edge Cases",id:"edge-cases-389",level:3},{value:"Further Readings",id:"further-readings-389",level:3},{value:"Partition to K Equal Sum Subsets",id:"partition-to-k-equal-sum-subsets",level:2},{value:"Inputs",id:"inputs-390",level:3},{value:"Sub-problems",id:"sub-problems-390",level:3},{value:"Edge Cases",id:"edge-cases-390",level:3},{value:"Further Readings",id:"further-readings-390",level:3},{value:"Insert into a Binary Search Tree",id:"insert-into-a-binary-search-tree",level:2},{value:"Inputs",id:"inputs-391",level:3},{value:"Sub-problems",id:"sub-problems-391",level:3},{value:"Edge Cases",id:"edge-cases-391",level:3},{value:"Further Readings",id:"further-readings-391",level:3},{value:"Search in a Sorted Array of Unknown Size",id:"search-in-a-sorted-array-of-unknown-size",level:2},{value:"Inputs",id:"inputs-392",level:3},{value:"Sub-problems",id:"sub-problems-392",level:3},{value:"Edge Cases",id:"edge-cases-392",level:3},{value:"Further Readings",id:"further-readings-392",level:3},{value:"Design Linked List",id:"design-linked-list",level:2},{value:"Inputs",id:"inputs-393",level:3},{value:"Sub-problems",id:"sub-problems-393",level:3},{value:"Edge Cases",id:"edge-cases-393",level:3},{value:"Further Readings",id:"further-readings-393",level:3},{value:"Insert into a Sorted Circular Linked List",id:"insert-into-a-sorted-circular-linked-list",level:2},{value:"Inputs",id:"inputs-394",level:3},{value:"Sub-problems",id:"sub-problems-394",level:3},{value:"Edge Cases",id:"edge-cases-394",level:3},{value:"Further Readings",id:"further-readings-394",level:3},{value:"Minimum ASCII Delete Sum for Two Strings",id:"minimum-ascii-delete-sum-for-two-strings",level:2},{value:"Inputs",id:"inputs-395",level:3},{value:"Sub-problems",id:"sub-problems-395",level:3},{value:"Edge Cases",id:"edge-cases-395",level:3},{value:"Further Readings",id:"further-readings-395",level:3},{value:"Subarray Product Less Than K",id:"subarray-product-less-than-k",level:2},{value:"Inputs",id:"inputs-396",level:3},{value:"Sub-problems",id:"sub-problems-396",level:3},{value:"Edge Cases",id:"edge-cases-396",level:3},{value:"Further Readings",id:"further-readings-396",level:3},{value:"Best Time to Buy and Sell Stock with Transaction Fee",id:"best-time-to-buy-and-sell-stock-with-transaction-fee",level:2},{value:"Inputs",id:"inputs-397",level:3},{value:"Sub-problems",id:"sub-problems-397",level:3},{value:"Edge Cases",id:"edge-cases-397",level:3},{value:"Further Readings",id:"further-readings-397",level:3},{value:"Maximum Length of Repeated Subarray",id:"maximum-length-of-repeated-subarray",level:2},{value:"Inputs",id:"inputs-398",level:3},{value:"Sub-problems",id:"sub-problems-398",level:3},{value:"Edge Cases",id:"edge-cases-398",level:3},{value:"Further Readings",id:"further-readings-398",level:3},{value:"Longest Word in Dictionary",id:"longest-word-in-dictionary",level:2},{value:"Inputs",id:"inputs-399",level:3},{value:"Sub-problems",id:"sub-problems-399",level:3},{value:"Edge Cases",id:"edge-cases-399",level:3},{value:"Further Readings",id:"further-readings-399",level:3},{value:"Accounts Merge",id:"accounts-merge",level:2},{value:"Inputs",id:"inputs-400",level:3},{value:"Sub-problems",id:"sub-problems-400",level:3},{value:"Edge Cases",id:"edge-cases-400",level:3},{value:"Further Readings",id:"further-readings-400",level:3},{value:"Remove Comments",id:"remove-comments",level:2},{value:"Inputs",id:"inputs-401",level:3},{value:"Sub-problems",id:"sub-problems-401",level:3},{value:"Edge Cases",id:"edge-cases-401",level:3},{value:"Further Readings",id:"further-readings-401",level:3},{value:"Candy Crush",id:"candy-crush",level:2},{value:"Inputs",id:"inputs-402",level:3},{value:"Sub-problems",id:"sub-problems-402",level:3},{value:"Edge Cases",id:"edge-cases-402",level:3},{value:"Further Readings",id:"further-readings-402",level:3},{value:"Split Linked List in Parts",id:"split-linked-list-in-parts",level:2},{value:"Inputs",id:"inputs-403",level:3},{value:"Sub-problems",id:"sub-problems-403",level:3},{value:"Edge Cases",id:"edge-cases-403",level:3},{value:"Further Readings",id:"further-readings-403",level:3},{value:"My Calendar I",id:"my-calendar-i",level:2},{value:"Inputs",id:"inputs-404",level:3},{value:"Sub-problems",id:"sub-problems-404",level:3},{value:"Edge Cases",id:"edge-cases-404",level:3},{value:"Further Readings",id:"further-readings-404",level:3},{value:"My Calendar II",id:"my-calendar-ii",level:2},{value:"Inputs",id:"inputs-405",level:3},{value:"Sub-problems",id:"sub-problems-405",level:3},{value:"Edge Cases",id:"edge-cases-405",level:3},{value:"Further Readings",id:"further-readings-405",level:3},{value:"Asteroid Collision",id:"asteroid-collision",level:2},{value:"Inputs",id:"inputs-406",level:3},{value:"Sub-problems",id:"sub-problems-406",level:3},{value:"Edge Cases",id:"edge-cases-406",level:3},{value:"Further Readings",id:"further-readings-406",level:3},{value:"Sentence Similarity II",id:"sentence-similarity-ii",level:2},{value:"Inputs",id:"inputs-407",level:3},{value:"Sub-problems",id:"sub-problems-407",level:3},{value:"Edge Cases",id:"edge-cases-407",level:3},{value:"Further Readings",id:"further-readings-407",level:3},{value:"Monotone Increasing Digits",id:"monotone-increasing-digits",level:2},{value:"Inputs",id:"inputs-408",level:3},{value:"Sub-problems",id:"sub-problems-408",level:3},{value:"Edge Cases",id:"edge-cases-408",level:3},{value:"Further Readings",id:"further-readings-408",level:3},{value:"Daily Temperatures",id:"daily-temperatures",level:2},{value:"Inputs",id:"inputs-409",level:3},{value:"Sub-problems",id:"sub-problems-409",level:3},{value:"Edge Cases",id:"edge-cases-409",level:3},{value:"Further Readings",id:"further-readings-409",level:3},{value:"Delete and Earn",id:"delete-and-earn",level:2},{value:"Inputs",id:"inputs-410",level:3},{value:"Sub-problems",id:"sub-problems-410",level:3},{value:"Edge Cases",id:"edge-cases-410",level:3},{value:"Further Readings",id:"further-readings-410",level:3},{value:"Closest Leaf in a Binary Tree",id:"closest-leaf-in-a-binary-tree",level:2},{value:"Inputs",id:"inputs-411",level:3},{value:"Sub-problems",id:"sub-problems-411",level:3},{value:"Edge Cases",id:"edge-cases-411",level:3},{value:"Further Readings",id:"further-readings-411",level:3},{value:"Network Delay Time",id:"network-delay-time",level:2},{value:"Inputs",id:"inputs-412",level:3},{value:"Sub-problems",id:"sub-problems-412",level:3},{value:"Edge Cases",id:"edge-cases-412",level:3},{value:"Further Readings",id:"further-readings-412",level:3},{value:"Number Of Corner Rectangles",id:"number-of-corner-rectangles",level:2},{value:"Inputs",id:"inputs-413",level:3},{value:"Sub-problems",id:"sub-problems-413",level:3},{value:"Edge Cases",id:"edge-cases-413",level:3},{value:"Further Readings",id:"further-readings-413",level:3},{value:"IP to CIDR",id:"ip-to-cidr",level:2},{value:"Inputs",id:"inputs-414",level:3},{value:"Sub-problems",id:"sub-problems-414",level:3},{value:"Edge Cases",id:"edge-cases-414",level:3},{value:"Further Readings",id:"further-readings-414",level:3},{value:"Open the Lock",id:"open-the-lock",level:2},{value:"Inputs",id:"inputs-415",level:3},{value:"Sub-problems",id:"sub-problems-415",level:3},{value:"Edge Cases",id:"edge-cases-415",level:3},{value:"Further Readings",id:"further-readings-415",level:3},{value:"Reach a Number",id:"reach-a-number",level:2},{value:"Inputs",id:"inputs-416",level:3},{value:"Sub-problems",id:"sub-problems-416",level:3},{value:"Edge Cases",id:"edge-cases-416",level:3},{value:"Further Readings",id:"further-readings-416",level:3},{value:"Pour Water",id:"pour-water",level:2},{value:"Inputs",id:"inputs-417",level:3},{value:"Sub-problems",id:"sub-problems-417",level:3},{value:"Edge Cases",id:"edge-cases-417",level:3},{value:"Further Readings",id:"further-readings-417",level:3},{value:"Pyramid Transition Matrix",id:"pyramid-transition-matrix",level:2},{value:"Inputs",id:"inputs-418",level:3},{value:"Sub-problems",id:"sub-problems-418",level:3},{value:"Edge Cases",id:"edge-cases-418",level:3},{value:"Further Readings",id:"further-readings-418",level:3},{value:"Bold Words in String",id:"bold-words-in-string",level:2},{value:"Inputs",id:"inputs-419",level:3},{value:"Sub-problems",id:"sub-problems-419",level:3},{value:"Edge Cases",id:"edge-cases-419",level:3},{value:"Further Readings",id:"further-readings-419",level:3},{value:"Partition Labels",id:"partition-labels",level:2},{value:"Inputs",id:"inputs-420",level:3},{value:"Sub-problems",id:"sub-problems-420",level:3},{value:"Edge Cases",id:"edge-cases-420",level:3},{value:"Further Readings",id:"further-readings-420",level:3},{value:"Largest Plus Sign",id:"largest-plus-sign",level:2},{value:"Inputs",id:"inputs-421",level:3},{value:"Sub-problems",id:"sub-problems-421",level:3},{value:"Edge Cases",id:"edge-cases-421",level:3},{value:"Further Readings",id:"further-readings-421",level:3},{value:"Reorganize String",id:"reorganize-string",level:2},{value:"Inputs",id:"inputs-422",level:3},{value:"Sub-problems",id:"sub-problems-422",level:3},{value:"Edge Cases",id:"edge-cases-422",level:3},{value:"Further Readings",id:"further-readings-422",level:3},{value:"Max Chunks To Make Sorted",id:"max-chunks-to-make-sorted",level:2},{value:"Inputs",id:"inputs-423",level:3},{value:"Sub-problems",id:"sub-problems-423",level:3},{value:"Edge Cases",id:"edge-cases-423",level:3},{value:"Further Readings",id:"further-readings-423",level:3},{value:"Global and Local Inversions",id:"global-and-local-inversions",level:2},{value:"Inputs",id:"inputs-424",level:3},{value:"Sub-problems",id:"sub-problems-424",level:3},{value:"Edge Cases",id:"edge-cases-424",level:3},{value:"Further Readings",id:"further-readings-424",level:3},{value:"Split BST",id:"split-bst",level:2},{value:"Inputs",id:"inputs-425",level:3},{value:"Sub-problems",id:"sub-problems-425",level:3},{value:"Edge Cases",id:"edge-cases-425",level:3},{value:"Further Readings",id:"further-readings-425",level:3},{value:"Swap Adjacent in LR String",id:"swap-adjacent-in-lr-string",level:2},{value:"Inputs",id:"inputs-426",level:3},{value:"Sub-problems",id:"sub-problems-426",level:3},{value:"Edge Cases",id:"edge-cases-426",level:3},{value:"Further Readings",id:"further-readings-426",level:3},{value:"K-th Symbol in Grammar",id:"k-th-symbol-in-grammar",level:2},{value:"Inputs",id:"inputs-427",level:3},{value:"Sub-problems",id:"sub-problems-427",level:3},{value:"Edge Cases",id:"edge-cases-427",level:3},{value:"Further Readings",id:"further-readings-427",level:3},{value:"Rabbits in Forest",id:"rabbits-in-forest",level:2},{value:"Inputs",id:"inputs-428",level:3},{value:"Sub-problems",id:"sub-problems-428",level:3},{value:"Edge Cases",id:"edge-cases-428",level:3},{value:"Further Readings",id:"further-readings-428",level:3},{value:"Letter Case Permutation",id:"letter-case-permutation",level:2},{value:"Inputs",id:"inputs-429",level:3},{value:"Sub-problems",id:"sub-problems-429",level:3},{value:"Edge Cases",id:"edge-cases-429",level:3},{value:"Further Readings",id:"further-readings-429",level:3},{value:"Is Graph Bipartite?",id:"is-graph-bipartite",level:2},{value:"Inputs",id:"inputs-430",level:3},{value:"Sub-problems",id:"sub-problems-430",level:3},{value:"Edge Cases",id:"edge-cases-430",level:3},{value:"Further Readings",id:"further-readings-430",level:3},{value:"Cheapest Flights Within K Stops",id:"cheapest-flights-within-k-stops",level:2},{value:"Inputs",id:"inputs-431",level:3},{value:"Sub-problems",id:"sub-problems-431",level:3},{value:"Edge Cases",id:"edge-cases-431",level:3},{value:"Further Readings",id:"further-readings-431",level:3},{value:"Rotated Digits",id:"rotated-digits",level:2},{value:"Inputs",id:"inputs-432",level:3},{value:"Sub-problems",id:"sub-problems-432",level:3},{value:"Edge Cases",id:"edge-cases-432",level:3},{value:"Further Readings",id:"further-readings-432",level:3},{value:"Escape The Ghosts",id:"escape-the-ghosts",level:2},{value:"Inputs",id:"inputs-433",level:3},{value:"Sub-problems",id:"sub-problems-433",level:3},{value:"Edge Cases",id:"edge-cases-433",level:3},{value:"Further Readings",id:"further-readings-433",level:3},{value:"Domino and Tromino Tiling",id:"domino-and-tromino-tiling",level:2},{value:"Inputs",id:"inputs-434",level:3},{value:"Sub-problems",id:"sub-problems-434",level:3},{value:"Edge Cases",id:"edge-cases-434",level:3},{value:"Further Readings",id:"further-readings-434",level:3},{value:"Custom Sort String",id:"custom-sort-string",level:2},{value:"Inputs",id:"inputs-435",level:3},{value:"Sub-problems",id:"sub-problems-435",level:3},{value:"Edge Cases",id:"edge-cases-435",level:3},{value:"Further Readings",id:"further-readings-435",level:3},{value:"Number of Matching Subsequences",id:"number-of-matching-subsequences",level:2},{value:"Inputs",id:"inputs-436",level:3},{value:"Sub-problems",id:"sub-problems-436",level:3},{value:"Edge Cases",id:"edge-cases-436",level:3},{value:"Further Readings",id:"further-readings-436",level:3},{value:"Valid Tic-Tac-Toe State",id:"valid-tic-tac-toe-state",level:2},{value:"Inputs",id:"inputs-437",level:3},{value:"Sub-problems",id:"sub-problems-437",level:3},{value:"Edge Cases",id:"edge-cases-437",level:3},{value:"Further Readings",id:"further-readings-437",level:3},{value:"Number of Subarrays with Bounded Maximum",id:"number-of-subarrays-with-bounded-maximum",level:2},{value:"Inputs",id:"inputs-438",level:3},{value:"Sub-problems",id:"sub-problems-438",level:3},{value:"Edge Cases",id:"edge-cases-438",level:3},{value:"Further Readings",id:"further-readings-438",level:3},{value:"All Paths From Source to Target",id:"all-paths-from-source-to-target",level:2},{value:"Inputs",id:"inputs-439",level:3},{value:"Sub-problems",id:"sub-problems-439",level:3},{value:"Edge Cases",id:"edge-cases-439",level:3},{value:"Further Readings",id:"further-readings-439",level:3},{value:"Champagne Tower",id:"champagne-tower",level:2},{value:"Inputs",id:"inputs-440",level:3},{value:"Sub-problems",id:"sub-problems-440",level:3},{value:"Edge Cases",id:"edge-cases-440",level:3},{value:"Further Readings",id:"further-readings-440",level:3},{value:"Find Eventual Safe States",id:"find-eventual-safe-states",level:2},{value:"Inputs",id:"inputs-441",level:3},{value:"Sub-problems",id:"sub-problems-441",level:3},{value:"Edge Cases",id:"edge-cases-441",level:3},{value:"Further Readings",id:"further-readings-441",level:3},{value:"Max Increase to Keep City Skyline",id:"max-increase-to-keep-city-skyline",level:2},{value:"Inputs",id:"inputs-442",level:3},{value:"Sub-problems",id:"sub-problems-442",level:3},{value:"Edge Cases",id:"edge-cases-442",level:3},{value:"Further Readings",id:"further-readings-442",level:3},{value:"Soup Servings",id:"soup-servings",level:2},{value:"Inputs",id:"inputs-443",level:3},{value:"Sub-problems",id:"sub-problems-443",level:3},{value:"Edge Cases",id:"edge-cases-443",level:3},{value:"Further Readings",id:"further-readings-443",level:3},{value:"Expressive Words",id:"expressive-words",level:2},{value:"Inputs",id:"inputs-444",level:3},{value:"Sub-problems",id:"sub-problems-444",level:3},{value:"Edge Cases",id:"edge-cases-444",level:3},{value:"Further Readings",id:"further-readings-444",level:3},{value:"Subdomain Visit Count",id:"subdomain-visit-count",level:2},{value:"Inputs",id:"inputs-445",level:3},{value:"Sub-problems",id:"sub-problems-445",level:3},{value:"Edge Cases",id:"edge-cases-445",level:3},{value:"Further Readings",id:"further-readings-445",level:3},{value:"Largest Sum of Averages",id:"largest-sum-of-averages",level:2},{value:"Inputs",id:"inputs-446",level:3},{value:"Sub-problems",id:"sub-problems-446",level:3},{value:"Edge Cases",id:"edge-cases-446",level:3},{value:"Further Readings",id:"further-readings-446",level:3},{value:"Binary Tree Pruning",id:"binary-tree-pruning",level:2},{value:"Inputs",id:"inputs-447",level:3},{value:"Sub-problems",id:"sub-problems-447",level:3},{value:"Edge Cases",id:"edge-cases-447",level:3},{value:"Further Readings",id:"further-readings-447",level:3},{value:"Ambiguous Coordinates",id:"ambiguous-coordinates",level:2},{value:"Inputs",id:"inputs-448",level:3},{value:"Sub-problems",id:"sub-problems-448",level:3},{value:"Edge Cases",id:"edge-cases-448",level:3},{value:"Further Readings",id:"further-readings-448",level:3},{value:"Linked List Components",id:"linked-list-components",level:2},{value:"Inputs",id:"inputs-449",level:3},{value:"Sub-problems",id:"sub-problems-449",level:3},{value:"Edge Cases",id:"edge-cases-449",level:3},{value:"Further Readings",id:"further-readings-449",level:3},{value:"Short Encoding of Words",id:"short-encoding-of-words",level:2},{value:"Inputs",id:"inputs-450",level:3},{value:"Sub-problems",id:"sub-problems-450",level:3},{value:"Edge Cases",id:"edge-cases-450",level:3},{value:"Further Readings",id:"further-readings-450",level:3},{value:"Card Flipping Game",id:"card-flipping-game",level:2},{value:"Inputs",id:"inputs-451",level:3},{value:"Sub-problems",id:"sub-problems-451",level:3},{value:"Edge Cases",id:"edge-cases-451",level:3},{value:"Further Readings",id:"further-readings-451",level:3},{value:"Binary Trees With Factors",id:"binary-trees-with-factors",level:2},{value:"Inputs",id:"inputs-452",level:3},{value:"Sub-problems",id:"sub-problems-452",level:3},{value:"Edge Cases",id:"edge-cases-452",level:3},{value:"Further Readings",id:"further-readings-452",level:3},{value:"Friends Of Appropriate Ages",id:"friends-of-appropriate-ages",level:2},{value:"Inputs",id:"inputs-453",level:3},{value:"Sub-problems",id:"sub-problems-453",level:3},{value:"Edge Cases",id:"edge-cases-453",level:3},{value:"Further Readings",id:"further-readings-453",level:3},{value:"Most Profit Assigning Work",id:"most-profit-assigning-work",level:2},{value:"Inputs",id:"inputs-454",level:3},{value:"Sub-problems",id:"sub-problems-454",level:3},{value:"Edge Cases",id:"edge-cases-454",level:3},{value:"Further Readings",id:"further-readings-454",level:3},{value:"Masking Personal Information",id:"masking-personal-information",level:2},{value:"Inputs",id:"inputs-455",level:3},{value:"Sub-problems",id:"sub-problems-455",level:3},{value:"Edge Cases",id:"edge-cases-455",level:3},{value:"Further Readings",id:"further-readings-455",level:3},{value:"Find And Replace in String",id:"find-and-replace-in-string",level:2},{value:"Inputs",id:"inputs-456",level:3},{value:"Sub-problems",id:"sub-problems-456",level:3},{value:"Edge Cases",id:"edge-cases-456",level:3},{value:"Further Readings",id:"further-readings-456",level:3},{value:"Image Overlap",id:"image-overlap",level:2},{value:"Inputs",id:"inputs-457",level:3},{value:"Sub-problems",id:"sub-problems-457",level:3},{value:"Edge Cases",id:"edge-cases-457",level:3},{value:"Further Readings",id:"further-readings-457",level:3},{value:"New 21 Game",id:"new-21-game",level:2},{value:"Inputs",id:"inputs-458",level:3},{value:"Sub-problems",id:"sub-problems-458",level:3},{value:"Edge Cases",id:"edge-cases-458",level:3},{value:"Further Readings",id:"further-readings-458",level:3},{value:"Push Dominoes",id:"push-dominoes",level:2},{value:"Inputs",id:"inputs-459",level:3},{value:"Sub-problems",id:"sub-problems-459",level:3},{value:"Edge Cases",id:"edge-cases-459",level:3},{value:"Further Readings",id:"further-readings-459",level:3},{value:"Magic Squares In Grid",id:"magic-squares-in-grid",level:2},{value:"Inputs",id:"inputs-460",level:3},{value:"Sub-problems",id:"sub-problems-460",level:3},{value:"Edge Cases",id:"edge-cases-460",level:3},{value:"Further Readings",id:"further-readings-460",level:3},{value:"Keys and Rooms",id:"keys-and-rooms",level:2},{value:"Inputs",id:"inputs-461",level:3},{value:"Sub-problems",id:"sub-problems-461",level:3},{value:"Edge Cases",id:"edge-cases-461",level:3},{value:"Further Readings",id:"further-readings-461",level:3},{value:"Split Array into Fibonacci Sequence",id:"split-array-into-fibonacci-sequence",level:2},{value:"Inputs",id:"inputs-462",level:3},{value:"Sub-problems",id:"sub-problems-462",level:3},{value:"Edge Cases",id:"edge-cases-462",level:3},{value:"Further Readings",id:"further-readings-462",level:3},{value:"Longest Mountain in Array",id:"longest-mountain-in-array",level:2},{value:"Inputs",id:"inputs-463",level:3},{value:"Sub-problems",id:"sub-problems-463",level:3},{value:"Edge Cases",id:"edge-cases-463",level:3},{value:"Further Readings",id:"further-readings-463",level:3},{value:"Hand of Straights",id:"hand-of-straights",level:2},{value:"Inputs",id:"inputs-464",level:3},{value:"Sub-problems",id:"sub-problems-464",level:3},{value:"Edge Cases",id:"edge-cases-464",level:3},{value:"Further Readings",id:"further-readings-464",level:3},{value:"Shifting Letters",id:"shifting-letters",level:2},{value:"Inputs",id:"inputs-465",level:3},{value:"Sub-problems",id:"sub-problems-465",level:3},{value:"Edge Cases",id:"edge-cases-465",level:3},{value:"Further Readings",id:"further-readings-465",level:3},{value:"Maximize Distance to Closest Person",id:"maximize-distance-to-closest-person",level:2},{value:"Inputs",id:"inputs-466",level:3},{value:"Sub-problems",id:"sub-problems-466",level:3},{value:"Edge Cases",id:"edge-cases-466",level:3},{value:"Further Readings",id:"further-readings-466",level:3},{value:"Loud and Rich",id:"loud-and-rich",level:2},{value:"Inputs",id:"inputs-467",level:3},{value:"Sub-problems",id:"sub-problems-467",level:3},{value:"Edge Cases",id:"edge-cases-467",level:3},{value:"Further Readings",id:"further-readings-467",level:3},{value:"Car Fleet",id:"car-fleet",level:2},{value:"Inputs",id:"inputs-468",level:3},{value:"Sub-problems",id:"sub-problems-468",level:3},{value:"Edge Cases",id:"edge-cases-468",level:3},{value:"Further Readings",id:"further-readings-468",level:3},{value:"Exam Room",id:"exam-room",level:2},{value:"Inputs",id:"inputs-469",level:3},{value:"Sub-problems",id:"sub-problems-469",level:3},{value:"Edge Cases",id:"edge-cases-469",level:3},{value:"Further Readings",id:"further-readings-469",level:3},{value:"Score of Parentheses",id:"score-of-parentheses",level:2},{value:"Inputs",id:"inputs-470",level:3},{value:"Sub-problems",id:"sub-problems-470",level:3},{value:"Edge Cases",id:"edge-cases-470",level:3},{value:"Further Readings",id:"further-readings-470",level:3},{value:"Mirror Reflection",id:"mirror-reflection",level:2},{value:"Inputs",id:"inputs-471",level:3},{value:"Sub-problems",id:"sub-problems-471",level:3},{value:"Edge Cases",id:"edge-cases-471",level:3},{value:"Further Readings",id:"further-readings-471",level:3},{value:"Score After Flipping Matrix",id:"score-after-flipping-matrix",level:2},{value:"Inputs",id:"inputs-472",level:3},{value:"Sub-problems",id:"sub-problems-472",level:3},{value:"Edge Cases",id:"edge-cases-472",level:3},{value:"Further Readings",id:"further-readings-472",level:3},{value:"All Nodes Distance K in Binary Tree",id:"all-nodes-distance-k-in-binary-tree",level:2},{value:"Inputs",id:"inputs-473",level:3},{value:"Sub-problems",id:"sub-problems-473",level:3},{value:"Edge Cases",id:"edge-cases-473",level:3},{value:"Further Readings",id:"further-readings-473",level:3},{value:"Smallest Subtree with all the Deepest Nodes",id:"smallest-subtree-with-all-the-deepest-nodes",level:2},{value:"Inputs",id:"inputs-474",level:3},{value:"Sub-problems",id:"sub-problems-474",level:3},{value:"Edge Cases",id:"edge-cases-474",level:3},{value:"Further Readings",id:"further-readings-474",level:3},{value:"Prime Palindrome",id:"prime-palindrome",level:2},{value:"Inputs",id:"inputs-475",level:3},{value:"Sub-problems",id:"sub-problems-475",level:3},{value:"Edge Cases",id:"edge-cases-475",level:3},{value:"Further Readings",id:"further-readings-475",level:3},{value:"Reordered Power of 2",id:"reordered-power-of-2",level:2},{value:"Inputs",id:"inputs-476",level:3},{value:"Sub-problems",id:"sub-problems-476",level:3},{value:"Edge Cases",id:"edge-cases-476",level:3},{value:"Further Readings",id:"further-readings-476",level:3},{value:"Advantage Shuffle",id:"advantage-shuffle",level:2},{value:"Inputs",id:"inputs-477",level:3},{value:"Sub-problems",id:"sub-problems-477",level:3},{value:"Edge Cases",id:"edge-cases-477",level:3},{value:"Further Readings",id:"further-readings-477",level:3},{value:"Length of Longest Fibonacci Subsequence",id:"length-of-longest-fibonacci-subsequence",level:2},{value:"Inputs",id:"inputs-478",level:3},{value:"Sub-problems",id:"sub-problems-478",level:3},{value:"Edge Cases",id:"edge-cases-478",level:3},{value:"Further Readings",id:"further-readings-478",level:3},{value:"Walking Robot Simulation",id:"walking-robot-simulation",level:2},{value:"Inputs",id:"inputs-479",level:3},{value:"Sub-problems",id:"sub-problems-479",level:3},{value:"Edge Cases",id:"edge-cases-479",level:3},{value:"Further Readings",id:"further-readings-479",level:3},{value:"Koko Eating Bananas",id:"koko-eating-bananas",level:2},{value:"Inputs",id:"inputs-480",level:3},{value:"Sub-problems",id:"sub-problems-480",level:3},{value:"Edge Cases",id:"edge-cases-480",level:3},{value:"Further Readings",id:"further-readings-480",level:3},{value:"Stone Game",id:"stone-game",level:2},{value:"Inputs",id:"inputs-481",level:3},{value:"Sub-problems",id:"sub-problems-481",level:3},{value:"Edge Cases",id:"edge-cases-481",level:3},{value:"Further Readings",id:"further-readings-481",level:3},{value:"Decoded String at Index",id:"decoded-string-at-index",level:2},{value:"Inputs",id:"inputs-482",level:3},{value:"Sub-problems",id:"sub-problems-482",level:3},{value:"Edge Cases",id:"edge-cases-482",level:3},{value:"Further Readings",id:"further-readings-482",level:3},{value:"Boats to Save People",id:"boats-to-save-people",level:2},{value:"Inputs",id:"inputs-483",level:3},{value:"Sub-problems",id:"sub-problems-483",level:3},{value:"Edge Cases",id:"edge-cases-483",level:3},{value:"Further Readings",id:"further-readings-483",level:3},{value:"Spiral Matrix III",id:"spiral-matrix-iii",level:2},{value:"Inputs",id:"inputs-484",level:3},{value:"Sub-problems",id:"sub-problems-484",level:3},{value:"Edge Cases",id:"edge-cases-484",level:3},{value:"Further Readings",id:"further-readings-484",level:3},{value:"Possible Bipartition",id:"possible-bipartition",level:2},{value:"Inputs",id:"inputs-485",level:3},{value:"Sub-problems",id:"sub-problems-485",level:3},{value:"Edge Cases",id:"edge-cases-485",level:3},{value:"Further Readings",id:"further-readings-485",level:3},{value:"Construct Binary Tree from Preorder and Postorder Traversal",id:"construct-binary-tree-from-preorder-and-postorder-traversal",level:2},{value:"Inputs",id:"inputs-486",level:3},{value:"Sub-problems",id:"sub-problems-486",level:3},{value:"Edge Cases",id:"edge-cases-486",level:3},{value:"Further Readings",id:"further-readings-486",level:3},{value:"Find and Replace Pattern",id:"find-and-replace-pattern",level:2},{value:"Inputs",id:"inputs-487",level:3},{value:"Sub-problems",id:"sub-problems-487",level:3},{value:"Edge Cases",id:"edge-cases-487",level:3},{value:"Further Readings",id:"further-readings-487",level:3},{value:"Groups of Special-Equivalent Strings",id:"groups-of-special-equivalent-strings",level:2},{value:"Inputs",id:"inputs-488",level:3},{value:"Sub-problems",id:"sub-problems-488",level:3},{value:"Edge Cases",id:"edge-cases-488",level:3},{value:"Further Readings",id:"further-readings-488",level:3},{value:"All Possible Full Binary Trees",id:"all-possible-full-binary-trees",level:2},{value:"Inputs",id:"inputs-489",level:3},{value:"Sub-problems",id:"sub-problems-489",level:3},{value:"Edge Cases",id:"edge-cases-489",level:3},{value:"Further Readings",id:"further-readings-489",level:3},{value:"Bitwise ORs of Subarrays",id:"bitwise-ors-of-subarrays",level:2},{value:"Inputs",id:"inputs-490",level:3},{value:"Sub-problems",id:"sub-problems-490",level:3},{value:"Edge Cases",id:"edge-cases-490",level:3},{value:"Further Readings",id:"further-readings-490",level:3},{value:"RLE Iterator",id:"rle-iterator",level:2},{value:"Inputs",id:"inputs-491",level:3},{value:"Sub-problems",id:"sub-problems-491",level:3},{value:"Edge Cases",id:"edge-cases-491",level:3},{value:"Further Readings",id:"further-readings-491",level:3},{value:"Online Stock Span",id:"online-stock-span",level:2},{value:"Inputs",id:"inputs-492",level:3},{value:"Sub-problems",id:"sub-problems-492",level:3},{value:"Edge Cases",id:"edge-cases-492",level:3},{value:"Further Readings",id:"further-readings-492",level:3},{value:"Fruit Into Baskets",id:"fruit-into-baskets",level:2},{value:"Inputs",id:"inputs-493",level:3},{value:"Sub-problems",id:"sub-problems-493",level:3},{value:"Edge Cases",id:"edge-cases-493",level:3},{value:"Further Readings",id:"further-readings-493",level:3},{value:"Sum of Subarray Minimums",id:"sum-of-subarray-minimums",level:2},{value:"Inputs",id:"inputs-494",level:3},{value:"Sub-problems",id:"sub-problems-494",level:3},{value:"Edge Cases",id:"edge-cases-494",level:3},{value:"Further Readings",id:"further-readings-494",level:3},{value:"Snakes and Ladders",id:"snakes-and-ladders",level:2},{value:"Inputs",id:"inputs-495",level:3},{value:"Sub-problems",id:"sub-problems-495",level:3},{value:"Edge Cases",id:"edge-cases-495",level:3},{value:"Further Readings",id:"further-readings-495",level:3},{value:"Smallest Range II",id:"smallest-range-ii",level:2},{value:"Inputs",id:"inputs-496",level:3},{value:"Sub-problems",id:"sub-problems-496",level:3},{value:"Edge Cases",id:"edge-cases-496",level:3},{value:"Further Readings",id:"further-readings-496",level:3},{value:"Online Election",id:"online-election",level:2},{value:"Inputs",id:"inputs-497",level:3},{value:"Sub-problems",id:"sub-problems-497",level:3},{value:"Edge Cases",id:"edge-cases-497",level:3},{value:"Further Readings",id:"further-readings-497",level:3},{value:"Sort an Array",id:"sort-an-array",level:2},{value:"Inputs",id:"inputs-498",level:3},{value:"Sub-problems",id:"sub-problems-498",level:3},{value:"Edge Cases",id:"edge-cases-498",level:3},{value:"Further Readings",id:"further-readings-498",level:3},{value:"Partition Array into Disjoint Intervals",id:"partition-array-into-disjoint-intervals",level:2},{value:"Inputs",id:"inputs-499",level:3},{value:"Sub-problems",id:"sub-problems-499",level:3},{value:"Edge Cases",id:"edge-cases-499",level:3},{value:"Further Readings",id:"further-readings-499",level:3},{value:"Word Subsets",id:"word-subsets",level:2},{value:"Inputs",id:"inputs-500",level:3},{value:"Sub-problems",id:"sub-problems-500",level:3},{value:"Edge Cases",id:"edge-cases-500",level:3},{value:"Further Readings",id:"further-readings-500",level:3},{value:"Maximum Sum Circular Subarray",id:"maximum-sum-circular-subarray",level:2},{value:"Inputs",id:"inputs-501",level:3},{value:"Sub-problems",id:"sub-problems-501",level:3},{value:"Edge Cases",id:"edge-cases-501",level:3},{value:"Further Readings",id:"further-readings-501",level:3},{value:"Complete Binary Tree Inserter",id:"complete-binary-tree-inserter",level:2},{value:"Inputs",id:"inputs-502",level:3},{value:"Sub-problems",id:"sub-problems-502",level:3},{value:"Edge Cases",id:"edge-cases-502",level:3},{value:"Further Readings",id:"further-readings-502",level:3},{value:"Minimum Add to Make Parentheses Valid",id:"minimum-add-to-make-parentheses-valid",level:2},{value:"Inputs",id:"inputs-503",level:3},{value:"Sub-problems",id:"sub-problems-503",level:3},{value:"Edge Cases",id:"edge-cases-503",level:3},{value:"Further Readings",id:"further-readings-503",level:3},{value:"3Sum With Multiplicity",id:"3sum-with-multiplicity",level:2},{value:"Inputs",id:"inputs-504",level:3},{value:"Sub-problems",id:"sub-problems-504",level:3},{value:"Edge Cases",id:"edge-cases-504",level:3},{value:"Further Readings",id:"further-readings-504",level:3},{value:"Flip String to Monotone Increasing",id:"flip-string-to-monotone-increasing",level:2},{value:"Inputs",id:"inputs-505",level:3},{value:"Sub-problems",id:"sub-problems-505",level:3},{value:"Edge Cases",id:"edge-cases-505",level:3},{value:"Further Readings",id:"further-readings-505",level:3},{value:"Binary Subarrays With Sum",id:"binary-subarrays-with-sum",level:2},{value:"Inputs",id:"inputs-506",level:3},{value:"Sub-problems",id:"sub-problems-506",level:3},{value:"Edge Cases",id:"edge-cases-506",level:3},{value:"Further Readings",id:"further-readings-506",level:3},{value:"Minimum Falling Path Sum",id:"minimum-falling-path-sum",level:2},{value:"Inputs",id:"inputs-507",level:3},{value:"Sub-problems",id:"sub-problems-507",level:3},{value:"Edge Cases",id:"edge-cases-507",level:3},{value:"Further Readings",id:"further-readings-507",level:3},{value:"Beautiful Array",id:"beautiful-array",level:2},{value:"Inputs",id:"inputs-508",level:3},{value:"Sub-problems",id:"sub-problems-508",level:3},{value:"Edge Cases",id:"edge-cases-508",level:3},{value:"Further Readings",id:"further-readings-508",level:3},{value:"Shortest Bridge",id:"shortest-bridge",level:2},{value:"Inputs",id:"inputs-509",level:3},{value:"Sub-problems",id:"sub-problems-509",level:3},{value:"Edge Cases",id:"edge-cases-509",level:3},{value:"Further Readings",id:"further-readings-509",level:3},{value:"Knight Dialer",id:"knight-dialer",level:2},{value:"Inputs",id:"inputs-510",level:3},{value:"Sub-problems",id:"sub-problems-510",level:3},{value:"Edge Cases",id:"edge-cases-510",level:3},{value:"Further Readings",id:"further-readings-510",level:3},{value:"Minimum Area Rectangle",id:"minimum-area-rectangle",level:2},{value:"Inputs",id:"inputs-511",level:3},{value:"Sub-problems",id:"sub-problems-511",level:3},{value:"Edge Cases",id:"edge-cases-511",level:3},{value:"Further Readings",id:"further-readings-511",level:3},{value:"Minimum Increment to Make Array Unique",id:"minimum-increment-to-make-array-unique",level:2},{value:"Inputs",id:"inputs-512",level:3},{value:"Sub-problems",id:"sub-problems-512",level:3},{value:"Edge Cases",id:"edge-cases-512",level:3},{value:"Further Readings",id:"further-readings-512",level:3},{value:"Validate Stack Sequences",id:"validate-stack-sequences",level:2},{value:"Inputs",id:"inputs-513",level:3},{value:"Sub-problems",id:"sub-problems-513",level:3},{value:"Edge Cases",id:"edge-cases-513",level:3},{value:"Further Readings",id:"further-readings-513",level:3},{value:"Most Stones Removed with Same Row or Column",id:"most-stones-removed-with-same-row-or-column",level:2},{value:"Inputs",id:"inputs-514",level:3},{value:"Sub-problems",id:"sub-problems-514",level:3},{value:"Edge Cases",id:"edge-cases-514",level:3},{value:"Further Readings",id:"further-readings-514",level:3},{value:"Bag of Tokens",id:"bag-of-tokens",level:2},{value:"Inputs",id:"inputs-515",level:3},{value:"Sub-problems",id:"sub-problems-515",level:3},{value:"Edge Cases",id:"edge-cases-515",level:3},{value:"Further Readings",id:"further-readings-515",level:3},{value:"Largest Time for Given Digits",id:"largest-time-for-given-digits",level:2},{value:"Inputs",id:"inputs-516",level:3},{value:"Sub-problems",id:"sub-problems-516",level:3},{value:"Edge Cases",id:"edge-cases-516",level:3},{value:"Further Readings",id:"further-readings-516",level:3},{value:"Reveal Cards In Increasing Order",id:"reveal-cards-in-increasing-order",level:2},{value:"Inputs",id:"inputs-517",level:3},{value:"Sub-problems",id:"sub-problems-517",level:3},{value:"Edge Cases",id:"edge-cases-517",level:3},{value:"Further Readings",id:"further-readings-517",level:3},{value:"Flip Equivalent Binary Trees",id:"flip-equivalent-binary-trees",level:2},{value:"Inputs",id:"inputs-518",level:3},{value:"Sub-problems",id:"sub-problems-518",level:3},{value:"Edge Cases",id:"edge-cases-518",level:3},{value:"Further Readings",id:"further-readings-518",level:3},{value:"Array of Doubled Pairs",id:"array-of-doubled-pairs",level:2},{value:"Inputs",id:"inputs-519",level:3},{value:"Sub-problems",id:"sub-problems-519",level:3},{value:"Edge Cases",id:"edge-cases-519",level:3},{value:"Further Readings",id:"further-readings-519",level:3},{value:"Delete Columns to Make Sorted II",id:"delete-columns-to-make-sorted-ii",level:2},{value:"Inputs",id:"inputs-520",level:3},{value:"Sub-problems",id:"sub-problems-520",level:3},{value:"Edge Cases",id:"edge-cases-520",level:3},{value:"Further Readings",id:"further-readings-520",level:3},{value:"Prison Cells After N Days",id:"prison-cells-after-n-days",level:2},{value:"Inputs",id:"inputs-521",level:3},{value:"Sub-problems",id:"sub-problems-521",level:3},{value:"Edge Cases",id:"edge-cases-521",level:3},{value:"Further Readings",id:"further-readings-521",level:3},{value:"Check Completeness of a Binary Tree",id:"check-completeness-of-a-binary-tree",level:2},{value:"Inputs",id:"inputs-522",level:3},{value:"Sub-problems",id:"sub-problems-522",level:3},{value:"Edge Cases",id:"edge-cases-522",level:3},{value:"Further Readings",id:"further-readings-522",level:3},{value:"Regions Cut By Slashes",id:"regions-cut-by-slashes",level:2},{value:"Inputs",id:"inputs-523",level:3},{value:"Sub-problems",id:"sub-problems-523",level:3},{value:"Edge Cases",id:"edge-cases-523",level:3},{value:"Further Readings",id:"further-readings-523",level:3},{value:"Maximum Width Ramp",id:"maximum-width-ramp",level:2},{value:"Inputs",id:"inputs-524",level:3},{value:"Sub-problems",id:"sub-problems-524",level:3},{value:"Edge Cases",id:"edge-cases-524",level:3},{value:"Further Readings",id:"further-readings-524",level:3},{value:"Minimum Area Rectangle II",id:"minimum-area-rectangle-ii",level:2},{value:"Inputs",id:"inputs-525",level:3},{value:"Sub-problems",id:"sub-problems-525",level:3},{value:"Edge Cases",id:"edge-cases-525",level:3},{value:"Further Readings",id:"further-readings-525",level:3},{value:"Vowel Spellchecker",id:"vowel-spellchecker",level:2},{value:"Inputs",id:"inputs-526",level:3},{value:"Sub-problems",id:"sub-problems-526",level:3},{value:"Edge Cases",id:"edge-cases-526",level:3},{value:"Further Readings",id:"further-readings-526",level:3},{value:"Numbers With Same Consecutive Differences",id:"numbers-with-same-consecutive-differences",level:2},{value:"Inputs",id:"inputs-527",level:3},{value:"Sub-problems",id:"sub-problems-527",level:3},{value:"Edge Cases",id:"edge-cases-527",level:3},{value:"Further Readings",id:"further-readings-527",level:3},{value:"Pancake Sorting",id:"pancake-sorting",level:2},{value:"Inputs",id:"inputs-528",level:3},{value:"Sub-problems",id:"sub-problems-528",level:3},{value:"Edge Cases",id:"edge-cases-528",level:3},{value:"Further Readings",id:"further-readings-528",level:3},{value:"Powerful Integers",id:"powerful-integers",level:2},{value:"Inputs",id:"inputs-529",level:3},{value:"Sub-problems",id:"sub-problems-529",level:3},{value:"Edge Cases",id:"edge-cases-529",level:3},{value:"Further Readings",id:"further-readings-529",level:3},{value:"Flip Binary Tree To Match Preorder Traversal",id:"flip-binary-tree-to-match-preorder-traversal",level:2},{value:"Inputs",id:"inputs-530",level:3},{value:"Sub-problems",id:"sub-problems-530",level:3},{value:"Edge Cases",id:"edge-cases-530",level:3},{value:"Further Readings",id:"further-readings-530",level:3},{value:"K Closest Points to Origin",id:"k-closest-points-to-origin",level:2},{value:"Inputs",id:"inputs-531",level:3},{value:"Sub-problems",id:"sub-problems-531",level:3},{value:"Edge Cases",id:"edge-cases-531",level:3},{value:"Further Readings",id:"further-readings-531",level:3},{value:"Subarray Sums Divisible by K",id:"subarray-sums-divisible-by-k",level:2},{value:"Inputs",id:"inputs-532",level:3},{value:"Sub-problems",id:"sub-problems-532",level:3},{value:"Edge Cases",id:"edge-cases-532",level:3},{value:"Further Readings",id:"further-readings-532",level:3},{value:"Longest Turbulent Subarray",id:"longest-turbulent-subarray",level:2},{value:"Inputs",id:"inputs-533",level:3},{value:"Sub-problems",id:"sub-problems-533",level:3},{value:"Edge Cases",id:"edge-cases-533",level:3},{value:"Further Readings",id:"further-readings-533",level:3},{value:"Distribute Coins in Binary Tree",id:"distribute-coins-in-binary-tree",level:2},{value:"Inputs",id:"inputs-534",level:3},{value:"Sub-problems",id:"sub-problems-534",level:3},{value:"Edge Cases",id:"edge-cases-534",level:3},{value:"Further Readings",id:"further-readings-534",level:3},{value:"Time Based Key-Value Store",id:"time-based-key-value-store",level:2},{value:"Inputs",id:"inputs-535",level:3},{value:"Sub-problems",id:"sub-problems-535",level:3},{value:"Edge Cases",id:"edge-cases-535",level:3},{value:"Further Readings",id:"further-readings-535",level:3},{value:"Minimum Cost For Tickets",id:"minimum-cost-for-tickets",level:2},{value:"Inputs",id:"inputs-536",level:3},{value:"Sub-problems",id:"sub-problems-536",level:3},{value:"Edge Cases",id:"edge-cases-536",level:3},{value:"Further Readings",id:"further-readings-536",level:3},{value:"String Without AAA or BBB",id:"string-without-aaa-or-bbb",level:2},{value:"Inputs",id:"inputs-537",level:3},{value:"Sub-problems",id:"sub-problems-537",level:3},{value:"Edge Cases",id:"edge-cases-537",level:3},{value:"Further Readings",id:"further-readings-537",level:3},{value:"Sum of Even Numbers After Queries",id:"sum-of-even-numbers-after-queries",level:2},{value:"Inputs",id:"inputs-538",level:3},{value:"Sub-problems",id:"sub-problems-538",level:3},{value:"Edge Cases",id:"edge-cases-538",level:3},{value:"Further Readings",id:"further-readings-538",level:3},{value:"Interval List Intersections",id:"interval-list-intersections",level:2},{value:"Inputs",id:"inputs-539",level:3},{value:"Sub-problems",id:"sub-problems-539",level:3},{value:"Edge Cases",id:"edge-cases-539",level:3},{value:"Further Readings",id:"further-readings-539",level:3},{value:"Smallest String Starting From Leaf",id:"smallest-string-starting-from-leaf",level:2},{value:"Inputs",id:"inputs-540",level:3},{value:"Sub-problems",id:"sub-problems-540",level:3},{value:"Edge Cases",id:"edge-cases-540",level:3},{value:"Further Readings",id:"further-readings-540",level:3},{value:"Satisfiability of Equality Equations",id:"satisfiability-of-equality-equations",level:2},{value:"Inputs",id:"inputs-541",level:3},{value:"Sub-problems",id:"sub-problems-541",level:3},{value:"Edge Cases",id:"edge-cases-541",level:3},{value:"Further Readings",id:"further-readings-541",level:3},{value:"Broken Calculator",id:"broken-calculator",level:2},{value:"Inputs",id:"inputs-542",level:3},{value:"Sub-problems",id:"sub-problems-542",level:3},{value:"Edge Cases",id:"edge-cases-542",level:3},{value:"Further Readings",id:"further-readings-542",level:3},{value:"Rotting Oranges",id:"rotting-oranges",level:2},{value:"Inputs",id:"inputs-543",level:3},{value:"Sub-problems",id:"sub-problems-543",level:3},{value:"Edge Cases",id:"edge-cases-543",level:3},{value:"Further Readings",id:"further-readings-543",level:3},{value:"Maximum Binary Tree II",id:"maximum-binary-tree-ii",level:2},{value:"Inputs",id:"inputs-544",level:3},{value:"Sub-problems",id:"sub-problems-544",level:3},{value:"Edge Cases",id:"edge-cases-544",level:3},{value:"Further Readings",id:"further-readings-544",level:3},{value:"Check If Word Is Valid After Substitutions",id:"check-if-word-is-valid-after-substitutions",level:2},{value:"Inputs",id:"inputs-545",level:3},{value:"Sub-problems",id:"sub-problems-545",level:3},{value:"Edge Cases",id:"edge-cases-545",level:3},{value:"Further Readings",id:"further-readings-545",level:3},{value:"Max Consecutive Ones III",id:"max-consecutive-ones-iii",level:2},{value:"Inputs",id:"inputs-546",level:3},{value:"Sub-problems",id:"sub-problems-546",level:3},{value:"Edge Cases",id:"edge-cases-546",level:3},{value:"Further Readings",id:"further-readings-546",level:3},{value:"Clumsy Factorial",id:"clumsy-factorial",level:2},{value:"Inputs",id:"inputs-547",level:3},{value:"Sub-problems",id:"sub-problems-547",level:3},{value:"Edge Cases",id:"edge-cases-547",level:3},{value:"Further Readings",id:"further-readings-547",level:3},{value:"Minimum Domino Rotations For Equal Row",id:"minimum-domino-rotations-for-equal-row",level:2},{value:"Inputs",id:"inputs-548",level:3},{value:"Sub-problems",id:"sub-problems-548",level:3},{value:"Edge Cases",id:"edge-cases-548",level:3},{value:"Further Readings",id:"further-readings-548",level:3},{value:"Construct Binary Search Tree from Preorder Traversal",id:"construct-binary-search-tree-from-preorder-traversal",level:2},{value:"Inputs",id:"inputs-549",level:3},{value:"Sub-problems",id:"sub-problems-549",level:3},{value:"Edge Cases",id:"edge-cases-549",level:3},{value:"Further Readings",id:"further-readings-549",level:3},{value:"Pairs of Songs With Total Durations Divisible by 60",id:"pairs-of-songs-with-total-durations-divisible-by-60",level:2},{value:"Inputs",id:"inputs-550",level:3},{value:"Sub-problems",id:"sub-problems-550",level:3},{value:"Edge Cases",id:"edge-cases-550",level:3},{value:"Further Readings",id:"further-readings-550",level:3},{value:"Capacity To Ship Packages Within D Days",id:"capacity-to-ship-packages-within-d-days",level:2},{value:"Inputs",id:"inputs-551",level:3},{value:"Sub-problems",id:"sub-problems-551",level:3},{value:"Edge Cases",id:"edge-cases-551",level:3},{value:"Further Readings",id:"further-readings-551",level:3},{value:"Best Sightseeing Pair",id:"best-sightseeing-pair",level:2},{value:"Inputs",id:"inputs-552",level:3},{value:"Sub-problems",id:"sub-problems-552",level:3},{value:"Edge Cases",id:"edge-cases-552",level:3},{value:"Further Readings",id:"further-readings-552",level:3},{value:"Smallest Integer Divisible by K",id:"smallest-integer-divisible-by-k",level:2},{value:"Inputs",id:"inputs-553",level:3},{value:"Sub-problems",id:"sub-problems-553",level:3},{value:"Edge Cases",id:"edge-cases-553",level:3},{value:"Further Readings",id:"further-readings-553",level:3},{value:"Binary String With Substrings Representing 1 To N",id:"binary-string-with-substrings-representing-1-to-n",level:2},{value:"Inputs",id:"inputs-554",level:3},{value:"Sub-problems",id:"sub-problems-554",level:3},{value:"Edge Cases",id:"edge-cases-554",level:3},{value:"Further Readings",id:"further-readings-554",level:3},{value:"Convert to Base -2",id:"convert-to-base--2",level:2},{value:"Inputs",id:"inputs-555",level:3},{value:"Sub-problems",id:"sub-problems-555",level:3},{value:"Edge Cases",id:"edge-cases-555",level:3},{value:"Further Readings",id:"further-readings-555",level:3},{value:"Next Greater Node In Linked List",id:"next-greater-node-in-linked-list",level:2},{value:"Inputs",id:"inputs-556",level:3},{value:"Sub-problems",id:"sub-problems-556",level:3},{value:"Edge Cases",id:"edge-cases-556",level:3},{value:"Further Readings",id:"further-readings-556",level:3},{value:"Number of Enclaves",id:"number-of-enclaves",level:2},{value:"Inputs",id:"inputs-557",level:3},{value:"Sub-problems",id:"sub-problems-557",level:3},{value:"Edge Cases",id:"edge-cases-557",level:3},{value:"Further Readings",id:"further-readings-557",level:3},{value:"Camelcase Matching",id:"camelcase-matching",level:2},{value:"Inputs",id:"inputs-558",level:3},{value:"Sub-problems",id:"sub-problems-558",level:3},{value:"Edge Cases",id:"edge-cases-558",level:3},{value:"Further Readings",id:"further-readings-558",level:3},{value:"Video Stitching",id:"video-stitching",level:2},{value:"Inputs",id:"inputs-559",level:3},{value:"Sub-problems",id:"sub-problems-559",level:3},{value:"Edge Cases",id:"edge-cases-559",level:3},{value:"Further Readings",id:"further-readings-559",level:3},{value:"Maximum Difference Between Node and Ancestor",id:"maximum-difference-between-node-and-ancestor",level:2},{value:"Inputs",id:"inputs-560",level:3},{value:"Sub-problems",id:"sub-problems-560",level:3},{value:"Edge Cases",id:"edge-cases-560",level:3},{value:"Further Readings",id:"further-readings-560",level:3},{value:"Longest Arithmetic Subsequence",id:"longest-arithmetic-subsequence",level:2},{value:"Inputs",id:"inputs-561",level:3},{value:"Sub-problems",id:"sub-problems-561",level:3},{value:"Edge Cases",id:"edge-cases-561",level:3},{value:"Further Readings",id:"further-readings-561",level:3},{value:"Two City Scheduling",id:"two-city-scheduling",level:2},{value:"Inputs",id:"inputs-562",level:3},{value:"Sub-problems",id:"sub-problems-562",level:3},{value:"Edge Cases",id:"edge-cases-562",level:3},{value:"Further Readings",id:"further-readings-562",level:3},{value:"Maximum Sum of Two Non-Overlapping Subarrays",id:"maximum-sum-of-two-non-overlapping-subarrays",level:2},{value:"Inputs",id:"inputs-563",level:3},{value:"Sub-problems",id:"sub-problems-563",level:3},{value:"Edge Cases",id:"edge-cases-563",level:3},{value:"Further Readings",id:"further-readings-563",level:3},{value:"Moving Stones Until Consecutive",id:"moving-stones-until-consecutive",level:2},{value:"Inputs",id:"inputs-564",level:3},{value:"Sub-problems",id:"sub-problems-564",level:3},{value:"Edge Cases",id:"edge-cases-564",level:3},{value:"Further Readings",id:"further-readings-564",level:3},{value:"Coloring A Border",id:"coloring-a-border",level:2},{value:"Inputs",id:"inputs-565",level:3},{value:"Sub-problems",id:"sub-problems-565",level:3},{value:"Edge Cases",id:"edge-cases-565",level:3},{value:"Further Readings",id:"further-readings-565",level:3},{value:"Uncrossed Lines",id:"uncrossed-lines",level:2},{value:"Inputs",id:"inputs-566",level:3},{value:"Sub-problems",id:"sub-problems-566",level:3},{value:"Edge Cases",id:"edge-cases-566",level:3},{value:"Further Readings",id:"further-readings-566",level:3},{value:"Binary Search Tree to Greater Sum Tree",id:"binary-search-tree-to-greater-sum-tree",level:2},{value:"Inputs",id:"inputs-567",level:3},{value:"Sub-problems",id:"sub-problems-567",level:3},{value:"Edge Cases",id:"edge-cases-567",level:3},{value:"Further Readings",id:"further-readings-567",level:3},{value:"Minimum Score Triangulation of Polygon",id:"minimum-score-triangulation-of-polygon",level:2},{value:"Inputs",id:"inputs-568",level:3},{value:"Sub-problems",id:"sub-problems-568",level:3},{value:"Edge Cases",id:"edge-cases-568",level:3},{value:"Further Readings",id:"further-readings-568",level:3},{value:"Moving Stones Until Consecutive II",id:"moving-stones-until-consecutive-ii",level:2},{value:"Inputs",id:"inputs-569",level:3},{value:"Sub-problems",id:"sub-problems-569",level:3},{value:"Edge Cases",id:"edge-cases-569",level:3},{value:"Further Readings",id:"further-readings-569",level:3},{value:"Robot Bounded In Circle",id:"robot-bounded-in-circle",level:2},{value:"Inputs",id:"inputs-570",level:3},{value:"Sub-problems",id:"sub-problems-570",level:3},{value:"Edge Cases",id:"edge-cases-570",level:3},{value:"Further Readings",id:"further-readings-570",level:3},{value:"Flower Planting With No Adjacent",id:"flower-planting-with-no-adjacent",level:2},{value:"Inputs",id:"inputs-571",level:3},{value:"Sub-problems",id:"sub-problems-571",level:3},{value:"Edge Cases",id:"edge-cases-571",level:3},{value:"Further Readings",id:"further-readings-571",level:3},{value:"Partition Array for Maximum Sum",id:"partition-array-for-maximum-sum",level:2},{value:"Inputs",id:"inputs-572",level:3},{value:"Sub-problems",id:"sub-problems-572",level:3},{value:"Edge Cases",id:"edge-cases-572",level:3},{value:"Further Readings",id:"further-readings-572",level:3},{value:"Customers Who Bought All Products",id:"customers-who-bought-all-products",level:2},{value:"Inputs",id:"inputs-573",level:3},{value:"Sub-problems",id:"sub-problems-573",level:3},{value:"Edge Cases",id:"edge-cases-573",level:3},{value:"Further Readings",id:"further-readings-573",level:3},{value:"Longest String Chain",id:"longest-string-chain",level:2},{value:"Inputs",id:"inputs-574",level:3},{value:"Sub-problems",id:"sub-problems-574",level:3},{value:"Edge Cases",id:"edge-cases-574",level:3},{value:"Further Readings",id:"further-readings-574",level:3},{value:"Last Stone Weight II",id:"last-stone-weight-ii",level:2},{value:"Inputs",id:"inputs-575",level:3},{value:"Sub-problems",id:"sub-problems-575",level:3},{value:"Edge Cases",id:"edge-cases-575",level:3},{value:"Further Readings",id:"further-readings-575",level:3},{value:"Grumpy Bookstore Owner",id:"grumpy-bookstore-owner",level:2},{value:"Inputs",id:"inputs-576",level:3},{value:"Sub-problems",id:"sub-problems-576",level:3},{value:"Edge Cases",id:"edge-cases-576",level:3},{value:"Further Readings",id:"further-readings-576",level:3},{value:"Previous Permutation With One Swap",id:"previous-permutation-with-one-swap",level:2},{value:"Inputs",id:"inputs-577",level:3},{value:"Sub-problems",id:"sub-problems-577",level:3},{value:"Edge Cases",id:"edge-cases-577",level:3},{value:"Further Readings",id:"further-readings-577",level:3},{value:"Distant Barcodes",id:"distant-barcodes",level:2},{value:"Inputs",id:"inputs-578",level:3},{value:"Sub-problems",id:"sub-problems-578",level:3},{value:"Edge Cases",id:"edge-cases-578",level:3},{value:"Further Readings",id:"further-readings-578",level:3},{value:"Shortest Way to Form String",id:"shortest-way-to-form-string",level:2},{value:"Inputs",id:"inputs-579",level:3},{value:"Sub-problems",id:"sub-problems-579",level:3},{value:"Edge Cases",id:"edge-cases-579",level:3},{value:"Further Readings",id:"further-readings-579",level:3},{value:"Campus Bikes",id:"campus-bikes",level:2},{value:"Inputs",id:"inputs-580",level:3},{value:"Sub-problems",id:"sub-problems-580",level:3},{value:"Edge Cases",id:"edge-cases-580",level:3},{value:"Further Readings",id:"further-readings-580",level:3},{value:"Minimize Rounding Error to Meet Target",id:"minimize-rounding-error-to-meet-target",level:2},{value:"Inputs",id:"inputs-581",level:3},{value:"Sub-problems",id:"sub-problems-581",level:3},{value:"Edge Cases",id:"edge-cases-581",level:3},{value:"Further Readings",id:"further-readings-581",level:3},{value:"All Paths from Source Lead to Destination",id:"all-paths-from-source-lead-to-destination",level:2},{value:"Inputs",id:"inputs-582",level:3},{value:"Sub-problems",id:"sub-problems-582",level:3},{value:"Edge Cases",id:"edge-cases-582",level:3},{value:"Further Readings",id:"further-readings-582",level:3},{value:"Missing Element in Sorted Array",id:"missing-element-in-sorted-array",level:2},{value:"Inputs",id:"inputs-583",level:3},{value:"Sub-problems",id:"sub-problems-583",level:3},{value:"Edge Cases",id:"edge-cases-583",level:3},{value:"Further Readings",id:"further-readings-583",level:3},{value:"Lexicographically Smallest Equivalent String",id:"lexicographically-smallest-equivalent-string",level:2},{value:"Inputs",id:"inputs-584",level:3},{value:"Sub-problems",id:"sub-problems-584",level:3},{value:"Edge Cases",id:"edge-cases-584",level:3},{value:"Further Readings",id:"further-readings-584",level:3},{value:"Longest Repeating Substring",id:"longest-repeating-substring",level:2},{value:"Inputs",id:"inputs-585",level:3},{value:"Sub-problems",id:"sub-problems-585",level:3},{value:"Edge Cases",id:"edge-cases-585",level:3},{value:"Further Readings",id:"further-readings-585",level:3},{value:"Campus Bikes II",id:"campus-bikes-ii",level:2},{value:"Inputs",id:"inputs-586",level:3},{value:"Sub-problems",id:"sub-problems-586",level:3},{value:"Edge Cases",id:"edge-cases-586",level:3},{value:"Further Readings",id:"further-readings-586",level:3},{value:"Product Sales Analysis III",id:"product-sales-analysis-iii",level:2},{value:"Inputs",id:"inputs-587",level:3},{value:"Sub-problems",id:"sub-problems-587",level:3},{value:"Edge Cases",id:"edge-cases-587",level:3},{value:"Further Readings",id:"further-readings-587",level:3},{value:"Flip Columns For Maximum Number of Equal Rows",id:"flip-columns-for-maximum-number-of-equal-rows",level:2},{value:"Inputs",id:"inputs-588",level:3},{value:"Sub-problems",id:"sub-problems-588",level:3},{value:"Edge Cases",id:"edge-cases-588",level:3},{value:"Further Readings",id:"further-readings-588",level:3},{value:"Adding Two Negabinary Numbers",id:"adding-two-negabinary-numbers",level:2},{value:"Inputs",id:"inputs-589",level:3},{value:"Sub-problems",id:"sub-problems-589",level:3},{value:"Edge Cases",id:"edge-cases-589",level:3},{value:"Further Readings",id:"further-readings-589",level:3},{value:"Project Employees III",id:"project-employees-iii",level:2},{value:"Inputs",id:"inputs-590",level:3},{value:"Sub-problems",id:"sub-problems-590",level:3},{value:"Edge Cases",id:"edge-cases-590",level:3},{value:"Further Readings",id:"further-readings-590",level:3},{value:"Letter Tile Possibilities",id:"letter-tile-possibilities",level:2},{value:"Inputs",id:"inputs-591",level:3},{value:"Sub-problems",id:"sub-problems-591",level:3},{value:"Edge Cases",id:"edge-cases-591",level:3},{value:"Further Readings",id:"further-readings-591",level:3},{value:"Insufficient Nodes in Root to Leaf Paths",id:"insufficient-nodes-in-root-to-leaf-paths",level:2},{value:"Inputs",id:"inputs-592",level:3},{value:"Sub-problems",id:"sub-problems-592",level:3},{value:"Edge Cases",id:"edge-cases-592",level:3},{value:"Further Readings",id:"further-readings-592",level:3},{value:"Smallest Subsequence of Distinct Characters",id:"smallest-subsequence-of-distinct-characters",level:2},{value:"Inputs",id:"inputs-593",level:3},{value:"Sub-problems",id:"sub-problems-593",level:3},{value:"Edge Cases",id:"edge-cases-593",level:3},{value:"Further Readings",id:"further-readings-593",level:3},{value:"Brace Expansion",id:"brace-expansion",level:2},{value:"Inputs",id:"inputs-594",level:3},{value:"Sub-problems",id:"sub-problems-594",level:3},{value:"Edge Cases",id:"edge-cases-594",level:3},{value:"Further Readings",id:"further-readings-594",level:3},{value:"Largest Values From Labels",id:"largest-values-from-labels",level:2},{value:"Inputs",id:"inputs-595",level:3},{value:"Sub-problems",id:"sub-problems-595",level:3},{value:"Edge Cases",id:"edge-cases-595",level:3},{value:"Further Readings",id:"further-readings-595",level:3},{value:"Shortest Path in Binary Matrix",id:"shortest-path-in-binary-matrix",level:2},{value:"Inputs",id:"inputs-596",level:3},{value:"Sub-problems",id:"sub-problems-596",level:3},{value:"Edge Cases",id:"edge-cases-596",level:3},{value:"Further Readings",id:"further-readings-596",level:3},{value:"Statistics from a Large Sample",id:"statistics-from-a-large-sample",level:2},{value:"Inputs",id:"inputs-597",level:3},{value:"Sub-problems",id:"sub-problems-597",level:3},{value:"Edge Cases",id:"edge-cases-597",level:3},{value:"Further Readings",id:"further-readings-597",level:3},{value:"Car Pooling",id:"car-pooling",level:2},{value:"Inputs",id:"inputs-598",level:3},{value:"Sub-problems",id:"sub-problems-598",level:3},{value:"Edge Cases",id:"edge-cases-598",level:3},{value:"Further Readings",id:"further-readings-598",level:3},{value:"Unpopular Books",id:"unpopular-books",level:2},{value:"Inputs",id:"inputs-599",level:3},{value:"Sub-problems",id:"sub-problems-599",level:3},{value:"Edge Cases",id:"edge-cases-599",level:3},{value:"Further Readings",id:"further-readings-599",level:3},{value:"Find K-Length Substrings With No Repeated Characters",id:"find-k-length-substrings-with-no-repeated-characters",level:2},{value:"Inputs",id:"inputs-600",level:3},{value:"Sub-problems",id:"sub-problems-600",level:3},{value:"Edge Cases",id:"edge-cases-600",level:3},{value:"Further Readings",id:"further-readings-600",level:3},{value:"The Earliest Moment When Everyone Become Friends",id:"the-earliest-moment-when-everyone-become-friends",level:2},{value:"Inputs",id:"inputs-601",level:3},{value:"Sub-problems",id:"sub-problems-601",level:3},{value:"Edge Cases",id:"edge-cases-601",level:3},{value:"Further Readings",id:"further-readings-601",level:3},{value:"Path With Maximum Minimum Value",id:"path-with-maximum-minimum-value",level:2},{value:"Inputs",id:"inputs-602",level:3},{value:"Sub-problems",id:"sub-problems-602",level:3},{value:"Edge Cases",id:"edge-cases-602",level:3},{value:"Further Readings",id:"further-readings-602",level:3},{value:"Path In Zigzag Labelled Binary Tree",id:"path-in-zigzag-labelled-binary-tree",level:2},{value:"Inputs",id:"inputs-603",level:3},{value:"Sub-problems",id:"sub-problems-603",level:3},{value:"Edge Cases",id:"edge-cases-603",level:3},{value:"Further Readings",id:"further-readings-603",level:3},{value:"Filling Bookcase Shelves",id:"filling-bookcase-shelves",level:2},{value:"Inputs",id:"inputs-604",level:3},{value:"Sub-problems",id:"sub-problems-604",level:3},{value:"Edge Cases",id:"edge-cases-604",level:3},{value:"Further Readings",id:"further-readings-604",level:3},{value:"New Users Daily Count",id:"new-users-daily-count",level:2},{value:"Inputs",id:"inputs-605",level:3},{value:"Sub-problems",id:"sub-problems-605",level:3},{value:"Edge Cases",id:"edge-cases-605",level:3},{value:"Further Readings",id:"further-readings-605",level:3},{value:"Corporate Flight Bookings",id:"corporate-flight-bookings",level:2},{value:"Inputs",id:"inputs-606",level:3},{value:"Sub-problems",id:"sub-problems-606",level:3},{value:"Edge Cases",id:"edge-cases-606",level:3},{value:"Further Readings",id:"further-readings-606",level:3},{value:"Delete Nodes And Return Forest",id:"delete-nodes-and-return-forest",level:2},{value:"Inputs",id:"inputs-607",level:3},{value:"Sub-problems",id:"sub-problems-607",level:3},{value:"Edge Cases",id:"edge-cases-607",level:3},{value:"Further Readings",id:"further-readings-607",level:3},{value:"Maximum Nesting Depth of Two Valid Parentheses Strings",id:"maximum-nesting-depth-of-two-valid-parentheses-strings",level:2},{value:"Inputs",id:"inputs-608",level:3},{value:"Sub-problems",id:"sub-problems-608",level:3},{value:"Edge Cases",id:"edge-cases-608",level:3},{value:"Further Readings",id:"further-readings-608",level:3},{value:"Highest Grade For Each Student",id:"highest-grade-for-each-student",level:2},{value:"Inputs",id:"inputs-609",level:3},{value:"Sub-problems",id:"sub-problems-609",level:3},{value:"Edge Cases",id:"edge-cases-609",level:3},{value:"Further Readings",id:"further-readings-609",level:3},{value:"Print FooBar Alternately",id:"print-foobar-alternately",level:2},{value:"Inputs",id:"inputs-610",level:3},{value:"Sub-problems",id:"sub-problems-610",level:3},{value:"Edge Cases",id:"edge-cases-610",level:3},{value:"Further Readings",id:"further-readings-610",level:3},{value:"Print Zero Even Odd",id:"print-zero-even-odd",level:2},{value:"Inputs",id:"inputs-611",level:3},{value:"Sub-problems",id:"sub-problems-611",level:3},{value:"Edge Cases",id:"edge-cases-611",level:3},{value:"Further Readings",id:"further-readings-611",level:3},{value:"Building H2O",id:"building-h2o",level:2},{value:"Inputs",id:"inputs-612",level:3},{value:"Sub-problems",id:"sub-problems-612",level:3},{value:"Edge Cases",id:"edge-cases-612",level:3},{value:"Further Readings",id:"further-readings-612",level:3},{value:"Maximum Average Subtree",id:"maximum-average-subtree",level:2},{value:"Inputs",id:"inputs-613",level:3},{value:"Sub-problems",id:"sub-problems-613",level:3},{value:"Edge Cases",id:"edge-cases-613",level:3},{value:"Further Readings",id:"further-readings-613",level:3},{value:"Lowest Common Ancestor of Deepest Leaves",id:"lowest-common-ancestor-of-deepest-leaves",level:2},{value:"Inputs",id:"inputs-614",level:3},{value:"Sub-problems",id:"sub-problems-614",level:3},{value:"Edge Cases",id:"edge-cases-614",level:3},{value:"Further Readings",id:"further-readings-614",level:3},{value:"Longest Well-Performing Interval",id:"longest-well-performing-interval",level:2},{value:"Inputs",id:"inputs-615",level:3},{value:"Sub-problems",id:"sub-problems-615",level:3},{value:"Edge Cases",id:"edge-cases-615",level:3},{value:"Further Readings",id:"further-readings-615",level:3},{value:"Active Businesses",id:"active-businesses",level:2},{value:"Inputs",id:"inputs-616",level:3},{value:"Sub-problems",id:"sub-problems-616",level:3},{value:"Edge Cases",id:"edge-cases-616",level:3},{value:"Further Readings",id:"further-readings-616",level:3},{value:"Shortest Path with Alternating Colors",id:"shortest-path-with-alternating-colors",level:2},{value:"Inputs",id:"inputs-617",level:3},{value:"Sub-problems",id:"sub-problems-617",level:3},{value:"Edge Cases",id:"edge-cases-617",level:3},{value:"Further Readings",id:"further-readings-617",level:3},{value:"Minimum Cost Tree From Leaf Values",id:"minimum-cost-tree-from-leaf-values",level:2},{value:"Inputs",id:"inputs-618",level:3},{value:"Sub-problems",id:"sub-problems-618",level:3},{value:"Edge Cases",id:"edge-cases-618",level:3},{value:"Further Readings",id:"further-readings-618",level:3},{value:"Maximum of Absolute Value Expression",id:"maximum-of-absolute-value-expression",level:2},{value:"Inputs",id:"inputs-619",level:3},{value:"Sub-problems",id:"sub-problems-619",level:3},{value:"Edge Cases",id:"edge-cases-619",level:3},{value:"Further Readings",id:"further-readings-619",level:3},{value:"Reported Posts II",id:"reported-posts-ii",level:2},{value:"Inputs",id:"inputs-620",level:3},{value:"Sub-problems",id:"sub-problems-620",level:3},{value:"Edge Cases",id:"edge-cases-620",level:3},{value:"Further Readings",id:"further-readings-620",level:3},{value:"Connecting Cities With Minimum Cost",id:"connecting-cities-with-minimum-cost",level:2},{value:"Inputs",id:"inputs-621",level:3},{value:"Sub-problems",id:"sub-problems-621",level:3},{value:"Edge Cases",id:"edge-cases-621",level:3},{value:"Further Readings",id:"further-readings-621",level:3},{value:"Parallel Courses",id:"parallel-courses",level:2},{value:"Inputs",id:"inputs-622",level:3},{value:"Sub-problems",id:"sub-problems-622",level:3},{value:"Edge Cases",id:"edge-cases-622",level:3},{value:"Further Readings",id:"further-readings-622",level:3},{value:"Alphabet Board Path",id:"alphabet-board-path",level:2},{value:"Inputs",id:"inputs-623",level:3},{value:"Sub-problems",id:"sub-problems-623",level:3},{value:"Edge Cases",id:"edge-cases-623",level:3},{value:"Further Readings",id:"further-readings-623",level:3},{value:"Largest 1-Bordered Square",id:"largest-1-bordered-square",level:2},{value:"Inputs",id:"inputs-624",level:3},{value:"Sub-problems",id:"sub-problems-624",level:3},{value:"Edge Cases",id:"edge-cases-624",level:3},{value:"Further Readings",id:"further-readings-624",level:3},{value:"Stone Game II",id:"stone-game-ii",level:2},{value:"Inputs",id:"inputs-625",level:3},{value:"Sub-problems",id:"sub-problems-625",level:3},{value:"Edge Cases",id:"edge-cases-625",level:3},{value:"Further Readings",id:"further-readings-625",level:3},{value:"Longest Common Subsequence",id:"longest-common-subsequence",level:2},{value:"Inputs",id:"inputs-626",level:3},{value:"Sub-problems",id:"sub-problems-626",level:3},{value:"Edge Cases",id:"edge-cases-626",level:3},{value:"Further Readings",id:"further-readings-626",level:3},{value:"Decrease Elements To Make Array Zigzag",id:"decrease-elements-to-make-array-zigzag",level:2},{value:"Inputs",id:"inputs-627",level:3},{value:"Sub-problems",id:"sub-problems-627",level:3},{value:"Edge Cases",id:"edge-cases-627",level:3},{value:"Further Readings",id:"further-readings-627",level:3},{value:"Binary Tree Coloring Game",id:"binary-tree-coloring-game",level:2},{value:"Inputs",id:"inputs-628",level:3},{value:"Sub-problems",id:"sub-problems-628",level:3},{value:"Edge Cases",id:"edge-cases-628",level:3},{value:"Further Readings",id:"further-readings-628",level:3},{value:"Snapshot Array",id:"snapshot-array",level:2},{value:"Inputs",id:"inputs-629",level:3},{value:"Sub-problems",id:"sub-problems-629",level:3},{value:"Edge Cases",id:"edge-cases-629",level:3},{value:"Further Readings",id:"further-readings-629",level:3},{value:"Article Views II",id:"article-views-ii",level:2},{value:"Inputs",id:"inputs-630",level:3},{value:"Sub-problems",id:"sub-problems-630",level:3},{value:"Edge Cases",id:"edge-cases-630",level:3},{value:"Further Readings",id:"further-readings-630",level:3},{value:"Minimum Swaps to Group All 1&#39;s Together",id:"minimum-swaps-to-group-all-1s-together",level:2},{value:"Inputs",id:"inputs-631",level:3},{value:"Sub-problems",id:"sub-problems-631",level:3},{value:"Edge Cases",id:"edge-cases-631",level:3},{value:"Further Readings",id:"further-readings-631",level:3},{value:"Analyze User Website Visit Pattern",id:"analyze-user-website-visit-pattern",level:2},{value:"Inputs",id:"inputs-632",level:3},{value:"Sub-problems",id:"sub-problems-632",level:3},{value:"Edge Cases",id:"edge-cases-632",level:3},{value:"Further Readings",id:"further-readings-632",level:3},{value:"Number of Dice Rolls With Target Sum",id:"number-of-dice-rolls-with-target-sum",level:2},{value:"Inputs",id:"inputs-633",level:3},{value:"Sub-problems",id:"sub-problems-633",level:3},{value:"Edge Cases",id:"edge-cases-633",level:3},{value:"Further Readings",id:"further-readings-633",level:3},{value:"Swap For Longest Repeated Character Substring",id:"swap-for-longest-repeated-character-substring",level:2},{value:"Inputs",id:"inputs-634",level:3},{value:"Sub-problems",id:"sub-problems-634",level:3},{value:"Edge Cases",id:"edge-cases-634",level:3},{value:"Further Readings",id:"further-readings-634",level:3},{value:"Market Analysis I",id:"market-analysis-i",level:2},{value:"Inputs",id:"inputs-635",level:3},{value:"Sub-problems",id:"sub-problems-635",level:3},{value:"Edge Cases",id:"edge-cases-635",level:3},{value:"Further Readings",id:"further-readings-635",level:3},{value:"Maximum Level Sum of a Binary Tree",id:"maximum-level-sum-of-a-binary-tree",level:2},{value:"Inputs",id:"inputs-636",level:3},{value:"Sub-problems",id:"sub-problems-636",level:3},{value:"Edge Cases",id:"edge-cases-636",level:3},{value:"Further Readings",id:"further-readings-636",level:3},{value:"As Far from Land as Possible",id:"as-far-from-land-as-possible",level:2},{value:"Inputs",id:"inputs-637",level:3},{value:"Sub-problems",id:"sub-problems-637",level:3},{value:"Edge Cases",id:"edge-cases-637",level:3},{value:"Further Readings",id:"further-readings-637",level:3},{value:"Product Price at a Given Date",id:"product-price-at-a-given-date",level:2},{value:"Inputs",id:"inputs-638",level:3},{value:"Sub-problems",id:"sub-problems-638",level:3},{value:"Edge Cases",id:"edge-cases-638",level:3},{value:"Further Readings",id:"further-readings-638",level:3},{value:"Design File System",id:"design-file-system",level:2},{value:"Inputs",id:"inputs-639",level:3},{value:"Sub-problems",id:"sub-problems-639",level:3},{value:"Edge Cases",id:"edge-cases-639",level:3},{value:"Further Readings",id:"further-readings-639",level:3},{value:"Minimum Cost to Connect Sticks",id:"minimum-cost-to-connect-sticks",level:2},{value:"Inputs",id:"inputs-640",level:3},{value:"Sub-problems",id:"sub-problems-640",level:3},{value:"Edge Cases",id:"edge-cases-640",level:3},{value:"Further Readings",id:"further-readings-640",level:3},{value:"Invalid Transactions",id:"invalid-transactions",level:2},{value:"Inputs",id:"inputs-641",level:3},{value:"Sub-problems",id:"sub-problems-641",level:3},{value:"Edge Cases",id:"edge-cases-641",level:3},{value:"Further Readings",id:"further-readings-641",level:3},{value:"Compare Strings by Frequency of the Smallest Character",id:"compare-strings-by-frequency-of-the-smallest-character",level:2},{value:"Inputs",id:"inputs-642",level:3},{value:"Sub-problems",id:"sub-problems-642",level:3},{value:"Edge Cases",id:"edge-cases-642",level:3},{value:"Further Readings",id:"further-readings-642",level:3},{value:"Remove Zero Sum Consecutive Nodes from Linked List",id:"remove-zero-sum-consecutive-nodes-from-linked-list",level:2},{value:"Inputs",id:"inputs-643",level:3},{value:"Sub-problems",id:"sub-problems-643",level:3},{value:"Edge Cases",id:"edge-cases-643",level:3},{value:"Further Readings",id:"further-readings-643",level:3},{value:"Immediate Food Delivery II",id:"immediate-food-delivery-ii",level:2},{value:"Inputs",id:"inputs-644",level:3},{value:"Sub-problems",id:"sub-problems-644",level:3},{value:"Edge Cases",id:"edge-cases-644",level:3},{value:"Further Readings",id:"further-readings-644",level:3},{value:"Can Make Palindrome from Substring",id:"can-make-palindrome-from-substring",level:2},{value:"Inputs",id:"inputs-645",level:3},{value:"Sub-problems",id:"sub-problems-645",level:3},{value:"Edge Cases",id:"edge-cases-645",level:3},{value:"Further Readings",id:"further-readings-645",level:3},{value:"Before and After Puzzle",id:"before-and-after-puzzle",level:2},{value:"Inputs",id:"inputs-646",level:3},{value:"Sub-problems",id:"sub-problems-646",level:3},{value:"Edge Cases",id:"edge-cases-646",level:3},{value:"Further Readings",id:"further-readings-646",level:3},{value:"Shortest Distance to Target Color",id:"shortest-distance-to-target-color",level:2},{value:"Inputs",id:"inputs-647",level:3},{value:"Sub-problems",id:"sub-problems-647",level:3},{value:"Edge Cases",id:"edge-cases-647",level:3},{value:"Further Readings",id:"further-readings-647",level:3},{value:"Maximum Subarray Sum with One Deletion",id:"maximum-subarray-sum-with-one-deletion",level:2},{value:"Inputs",id:"inputs-648",level:3},{value:"Sub-problems",id:"sub-problems-648",level:3},{value:"Edge Cases",id:"edge-cases-648",level:3},{value:"Further Readings",id:"further-readings-648",level:3},{value:"Design Bounded Blocking Queue",id:"design-bounded-blocking-queue",level:2},{value:"Inputs",id:"inputs-649",level:3},{value:"Sub-problems",id:"sub-problems-649",level:3},{value:"Edge Cases",id:"edge-cases-649",level:3},{value:"Further Readings",id:"further-readings-649",level:3},{value:"Reverse Substrings Between Each Pair of Parentheses",id:"reverse-substrings-between-each-pair-of-parentheses",level:2},{value:"Inputs",id:"inputs-650",level:3},{value:"Sub-problems",id:"sub-problems-650",level:3},{value:"Edge Cases",id:"edge-cases-650",level:3},{value:"Further Readings",id:"further-readings-650",level:3},{value:"K-Concatenation Maximum Sum",id:"k-concatenation-maximum-sum",level:2},{value:"Inputs",id:"inputs-651",level:3},{value:"Sub-problems",id:"sub-problems-651",level:3},{value:"Edge Cases",id:"edge-cases-651",level:3},{value:"Further Readings",id:"further-readings-651",level:3},{value:"Monthly Transactions I",id:"monthly-transactions-i",level:2},{value:"Inputs",id:"inputs-652",level:3},{value:"Sub-problems",id:"sub-problems-652",level:3},{value:"Edge Cases",id:"edge-cases-652",level:3},{value:"Further Readings",id:"further-readings-652",level:3},{value:"Fizz Buzz Multithreaded",id:"fizz-buzz-multithreaded",level:2},{value:"Inputs",id:"inputs-653",level:3},{value:"Sub-problems",id:"sub-problems-653",level:3},{value:"Edge Cases",id:"edge-cases-653",level:3},{value:"Further Readings",id:"further-readings-653",level:3},{value:"Minimum Knight Moves",id:"minimum-knight-moves",level:2},{value:"Inputs",id:"inputs-654",level:3},{value:"Sub-problems",id:"sub-problems-654",level:3},{value:"Edge Cases",id:"edge-cases-654",level:3},{value:"Further Readings",id:"further-readings-654",level:3},{value:"Find Smallest Common Element in All Rows",id:"find-smallest-common-element-in-all-rows",level:2},{value:"Inputs",id:"inputs-655",level:3},{value:"Sub-problems",id:"sub-problems-655",level:3},{value:"Edge Cases",id:"edge-cases-655",level:3},{value:"Further Readings",id:"further-readings-655",level:3},{value:"Ugly Number III",id:"ugly-number-iii",level:2},{value:"Inputs",id:"inputs-656",level:3},{value:"Sub-problems",id:"sub-problems-656",level:3},{value:"Edge Cases",id:"edge-cases-656",level:3},{value:"Further Readings",id:"further-readings-656",level:3},{value:"Smallest String With Swaps",id:"smallest-string-with-swaps",level:2},{value:"Inputs",id:"inputs-657",level:3},{value:"Sub-problems",id:"sub-problems-657",level:3},{value:"Edge Cases",id:"edge-cases-657",level:3},{value:"Further Readings",id:"further-readings-657",level:3},{value:"Last Person to Fit in the Bus",id:"last-person-to-fit-in-the-bus",level:2},{value:"Inputs",id:"inputs-658",level:3},{value:"Sub-problems",id:"sub-problems-658",level:3},{value:"Edge Cases",id:"edge-cases-658",level:3},{value:"Further Readings",id:"further-readings-658",level:3},{value:"Monthly Transactions II",id:"monthly-transactions-ii",level:2},{value:"Inputs",id:"inputs-659",level:3},{value:"Sub-problems",id:"sub-problems-659",level:3},{value:"Edge Cases",id:"edge-cases-659",level:3},{value:"Further Readings",id:"further-readings-659",level:3},{value:"Get Equal Substrings Within Budget",id:"get-equal-substrings-within-budget",level:2},{value:"Inputs",id:"inputs-660",level:3},{value:"Sub-problems",id:"sub-problems-660",level:3},{value:"Edge Cases",id:"edge-cases-660",level:3},{value:"Further Readings",id:"further-readings-660",level:3},{value:"Remove All Adjacent Duplicates in String II",id:"remove-all-adjacent-duplicates-in-string-ii",level:2},{value:"Inputs",id:"inputs-661",level:3},{value:"Sub-problems",id:"sub-problems-661",level:3},{value:"Edge Cases",id:"edge-cases-661",level:3},{value:"Further Readings",id:"further-readings-661",level:3},{value:"Team Scores in Football Tournament",id:"team-scores-in-football-tournament",level:2},{value:"Inputs",id:"inputs-662",level:3},{value:"Sub-problems",id:"sub-problems-662",level:3},{value:"Edge Cases",id:"edge-cases-662",level:3},{value:"Further Readings",id:"further-readings-662",level:3},{value:"Two Sum BSTs",id:"two-sum-bsts",level:2},{value:"Inputs",id:"inputs-663",level:3},{value:"Sub-problems",id:"sub-problems-663",level:3},{value:"Edge Cases",id:"edge-cases-663",level:3},{value:"Further Readings",id:"further-readings-663",level:3},{value:"Stepping Numbers",id:"stepping-numbers",level:2},{value:"Inputs",id:"inputs-664",level:3},{value:"Sub-problems",id:"sub-problems-664",level:3},{value:"Edge Cases",id:"edge-cases-664",level:3},{value:"Further Readings",id:"further-readings-664",level:3},{value:"Longest Arithmetic Subsequence of Given Difference",id:"longest-arithmetic-subsequence-of-given-difference",level:2},{value:"Inputs",id:"inputs-665",level:3},{value:"Sub-problems",id:"sub-problems-665",level:3},{value:"Edge Cases",id:"edge-cases-665",level:3},{value:"Further Readings",id:"further-readings-665",level:3},{value:"Path with Maximum Gold",id:"path-with-maximum-gold",level:2},{value:"Inputs",id:"inputs-666",level:3},{value:"Sub-problems",id:"sub-problems-666",level:3},{value:"Edge Cases",id:"edge-cases-666",level:3},{value:"Further Readings",id:"further-readings-666",level:3},{value:"Queens That Can Attack the King",id:"queens-that-can-attack-the-king",level:2},{value:"Inputs",id:"inputs-667",level:3},{value:"Sub-problems",id:"sub-problems-667",level:3},{value:"Edge Cases",id:"edge-cases-667",level:3},{value:"Further Readings",id:"further-readings-667",level:3},{value:"The Dining Philosophers",id:"the-dining-philosophers",level:2},{value:"Inputs",id:"inputs-668",level:3},{value:"Sub-problems",id:"sub-problems-668",level:3},{value:"Edge Cases",id:"edge-cases-668",level:3},{value:"Further Readings",id:"further-readings-668",level:3},{value:"Airplane Seat Assignment Probability",id:"airplane-seat-assignment-probability",level:2},{value:"Inputs",id:"inputs-669",level:3},{value:"Sub-problems",id:"sub-problems-669",level:3},{value:"Edge Cases",id:"edge-cases-669",level:3},{value:"Further Readings",id:"further-readings-669",level:3},{value:"Meeting Scheduler",id:"meeting-scheduler",level:2},{value:"Inputs",id:"inputs-670",level:3},{value:"Sub-problems",id:"sub-problems-670",level:3},{value:"Edge Cases",id:"edge-cases-670",level:3},{value:"Further Readings",id:"further-readings-670",level:3},{value:"Toss Strange Coins",id:"toss-strange-coins",level:2},{value:"Inputs",id:"inputs-671",level:3},{value:"Sub-problems",id:"sub-problems-671",level:3},{value:"Edge Cases",id:"edge-cases-671",level:3},{value:"Further Readings",id:"further-readings-671",level:3},{value:"Remove Sub-Folders from the Filesystem",id:"remove-sub-folders-from-the-filesystem",level:2},{value:"Inputs",id:"inputs-672",level:3},{value:"Sub-problems",id:"sub-problems-672",level:3},{value:"Edge Cases",id:"edge-cases-672",level:3},{value:"Further Readings",id:"further-readings-672",level:3},{value:"Replace the Substring for Balanced String",id:"replace-the-substring-for-balanced-string",level:2},{value:"Inputs",id:"inputs-673",level:3},{value:"Sub-problems",id:"sub-problems-673",level:3},{value:"Edge Cases",id:"edge-cases-673",level:3},{value:"Further Readings",id:"further-readings-673",level:3},{value:"Web Crawler",id:"web-crawler",level:2},{value:"Inputs",id:"inputs-674",level:3},{value:"Sub-problems",id:"sub-problems-674",level:3},{value:"Edge Cases",id:"edge-cases-674",level:3},{value:"Further Readings",id:"further-readings-674",level:3},{value:"Find Positive Integer Solution for a Given Equation",id:"find-positive-integer-solution-for-a-given-equation",level:2},{value:"Inputs",id:"inputs-675",level:3},{value:"Sub-problems",id:"sub-problems-675",level:3},{value:"Edge Cases",id:"edge-cases-675",level:3},{value:"Further Readings",id:"further-readings-675",level:3},{value:"Circular Permutation in Binary Representation",id:"circular-permutation-in-binary-representation",level:2},{value:"Inputs",id:"inputs-676",level:3},{value:"Sub-problems",id:"sub-problems-676",level:3},{value:"Edge Cases",id:"edge-cases-676",level:3},{value:"Further Readings",id:"further-readings-676",level:3},{value:"Maximum Length of a Concatenated String with Unique Characters",id:"maximum-length-of-a-concatenated-string-with-unique-characters",level:2},{value:"Inputs",id:"inputs-677",level:3},{value:"Sub-problems",id:"sub-problems-677",level:3},{value:"Edge Cases",id:"edge-cases-677",level:3},{value:"Further Readings",id:"further-readings-677",level:3},{value:"Web Crawler Multithreaded",id:"web-crawler-multithreaded",level:2},{value:"Inputs",id:"inputs-678",level:3},{value:"Sub-problems",id:"sub-problems-678",level:3},{value:"Edge Cases",id:"edge-cases-678",level:3},{value:"Further Readings",id:"further-readings-678",level:3},{value:"Design A Leaderboard",id:"design-a-leaderboard",level:2},{value:"Inputs",id:"inputs-679",level:3},{value:"Sub-problems",id:"sub-problems-679",level:3},{value:"Edge Cases",id:"edge-cases-679",level:3},{value:"Further Readings",id:"further-readings-679",level:3},{value:"Tree Diameter",id:"tree-diameter",level:2},{value:"Inputs",id:"inputs-680",level:3},{value:"Sub-problems",id:"sub-problems-680",level:3},{value:"Edge Cases",id:"edge-cases-680",level:3},{value:"Further Readings",id:"further-readings-680",level:3},{value:"Minimum Swaps to Make Strings Equal",id:"minimum-swaps-to-make-strings-equal",level:2},{value:"Inputs",id:"inputs-681",level:3},{value:"Sub-problems",id:"sub-problems-681",level:3},{value:"Edge Cases",id:"edge-cases-681",level:3},{value:"Further Readings",id:"further-readings-681",level:3},{value:"Count Number of Nice Subarrays",id:"count-number-of-nice-subarrays",level:2},{value:"Inputs",id:"inputs-682",level:3},{value:"Sub-problems",id:"sub-problems-682",level:3},{value:"Edge Cases",id:"edge-cases-682",level:3},{value:"Further Readings",id:"further-readings-682",level:3},{value:"Minimum Remove to Make Valid Parentheses",id:"minimum-remove-to-make-valid-parentheses",level:2},{value:"Inputs",id:"inputs-683",level:3},{value:"Sub-problems",id:"sub-problems-683",level:3},{value:"Edge Cases",id:"edge-cases-683",level:3},{value:"Further Readings",id:"further-readings-683",level:3},{value:"Reconstruct a 2-Row Binary Matrix",id:"reconstruct-a-2-row-binary-matrix",level:2},{value:"Inputs",id:"inputs-684",level:3},{value:"Sub-problems",id:"sub-problems-684",level:3},{value:"Edge Cases",id:"edge-cases-684",level:3},{value:"Further Readings",id:"further-readings-684",level:3},{value:"Number of Closed Islands",id:"number-of-closed-islands",level:2},{value:"Inputs",id:"inputs-685",level:3},{value:"Sub-problems",id:"sub-problems-685",level:3},{value:"Edge Cases",id:"edge-cases-685",level:3},{value:"Further Readings",id:"further-readings-685",level:3},{value:"Encode Number",id:"encode-number",level:2},{value:"Inputs",id:"inputs-686",level:3},{value:"Sub-problems",id:"sub-problems-686",level:3},{value:"Edge Cases",id:"edge-cases-686",level:3},{value:"Further Readings",id:"further-readings-686",level:3},{value:"Smallest Common Region",id:"smallest-common-region",level:2},{value:"Inputs",id:"inputs-687",level:3},{value:"Sub-problems",id:"sub-problems-687",level:3},{value:"Edge Cases",id:"edge-cases-687",level:3},{value:"Further Readings",id:"further-readings-687",level:3},{value:"Synonymous Sentences",id:"synonymous-sentences",level:2},{value:"Inputs",id:"inputs-688",level:3},{value:"Sub-problems",id:"sub-problems-688",level:3},{value:"Edge Cases",id:"edge-cases-688",level:3},{value:"Further Readings",id:"further-readings-688",level:3},{value:"Find Elements in a Contaminated Binary Tree",id:"find-elements-in-a-contaminated-binary-tree",level:2},{value:"Inputs",id:"inputs-689",level:3},{value:"Sub-problems",id:"sub-problems-689",level:3},{value:"Edge Cases",id:"edge-cases-689",level:3},{value:"Further Readings",id:"further-readings-689",level:3},{value:"Greatest Sum Divisible by Three",id:"greatest-sum-divisible-by-three",level:2},{value:"Inputs",id:"inputs-690",level:3},{value:"Sub-problems",id:"sub-problems-690",level:3},{value:"Edge Cases",id:"edge-cases-690",level:3},{value:"Further Readings",id:"further-readings-690",level:3},{value:"Page Recommendations",id:"page-recommendations",level:2},{value:"Inputs",id:"inputs-691",level:3},{value:"Sub-problems",id:"sub-problems-691",level:3},{value:"Edge Cases",id:"edge-cases-691",level:3},{value:"Further Readings",id:"further-readings-691",level:3},{value:"Print Immutable Linked List in Reverse",id:"print-immutable-linked-list-in-reverse",level:2},{value:"Inputs",id:"inputs-692",level:3},{value:"Sub-problems",id:"sub-problems-692",level:3},{value:"Edge Cases",id:"edge-cases-692",level:3},{value:"Further Readings",id:"further-readings-692",level:3},{value:"Count Servers that Communicate",id:"count-servers-that-communicate",level:2},{value:"Inputs",id:"inputs-693",level:3},{value:"Sub-problems",id:"sub-problems-693",level:3},{value:"Edge Cases",id:"edge-cases-693",level:3},{value:"Further Readings",id:"further-readings-693",level:3},{value:"Search Suggestions System",id:"search-suggestions-system",level:2},{value:"Inputs",id:"inputs-694",level:3},{value:"Sub-problems",id:"sub-problems-694",level:3},{value:"Edge Cases",id:"edge-cases-694",level:3},{value:"Further Readings",id:"further-readings-694",level:3},{value:"All People Report to the Given Manager",id:"all-people-report-to-the-given-manager",level:2},{value:"Inputs",id:"inputs-695",level:3},{value:"Sub-problems",id:"sub-problems-695",level:3},{value:"Edge Cases",id:"edge-cases-695",level:3},{value:"Further Readings",id:"further-readings-695",level:3},{value:"Remove Interval",id:"remove-interval",level:2},{value:"Inputs",id:"inputs-696",level:3},{value:"Sub-problems",id:"sub-problems-696",level:3},{value:"Edge Cases",id:"edge-cases-696",level:3},{value:"Further Readings",id:"further-readings-696",level:3},{value:"Delete Tree Nodes",id:"delete-tree-nodes",level:2},{value:"Inputs",id:"inputs-697",level:3},{value:"Sub-problems",id:"sub-problems-697",level:3},{value:"Edge Cases",id:"edge-cases-697",level:3},{value:"Further Readings",id:"further-readings-697",level:3},{value:"Number of Burgers with No Waste of Ingredients",id:"number-of-burgers-with-no-waste-of-ingredients",level:2},{value:"Inputs",id:"inputs-698",level:3},{value:"Sub-problems",id:"sub-problems-698",level:3},{value:"Edge Cases",id:"edge-cases-698",level:3},{value:"Further Readings",id:"further-readings-698",level:3},{value:"Count Square Submatrices with All Ones",id:"count-square-submatrices-with-all-ones",level:2},{value:"Inputs",id:"inputs-699",level:3},{value:"Sub-problems",id:"sub-problems-699",level:3},{value:"Edge Cases",id:"edge-cases-699",level:3},{value:"Further Readings",id:"further-readings-699",level:3},{value:"Group the People Given the Group Size They Belong To",id:"group-the-people-given-the-group-size-they-belong-to",level:2},{value:"Inputs",id:"inputs-700",level:3},{value:"Sub-problems",id:"sub-problems-700",level:3},{value:"Edge Cases",id:"edge-cases-700",level:3},{value:"Further Readings",id:"further-readings-700",level:3},{value:"Find the Smallest Divisor Given a Threshold",id:"find-the-smallest-divisor-given-a-threshold",level:2},{value:"Inputs",id:"inputs-701",level:3},{value:"Sub-problems",id:"sub-problems-701",level:3},{value:"Edge Cases",id:"edge-cases-701",level:3},{value:"Further Readings",id:"further-readings-701",level:3},{value:"Find the Start and End Number of Continuous Ranges",id:"find-the-start-and-end-number-of-continuous-ranges",level:2},{value:"Inputs",id:"inputs-702",level:3},{value:"Sub-problems",id:"sub-problems-702",level:3},{value:"Edge Cases",id:"edge-cases-702",level:3},{value:"Further Readings",id:"further-readings-702",level:3},{value:"Iterator for Combination",id:"iterator-for-combination",level:2},{value:"Inputs",id:"inputs-703",level:3},{value:"Sub-problems",id:"sub-problems-703",level:3},{value:"Edge Cases",id:"edge-cases-703",level:3},{value:"Further Readings",id:"further-readings-703",level:3},{value:"Remove Covered Intervals",id:"remove-covered-intervals",level:2},{value:"Inputs",id:"inputs-704",level:3},{value:"Sub-problems",id:"sub-problems-704",level:3},{value:"Edge Cases",id:"edge-cases-704",level:3},{value:"Further Readings",id:"further-readings-704",level:3},{value:"Sequential Digits",id:"sequential-digits",level:2},{value:"Inputs",id:"inputs-705",level:3},{value:"Sub-problems",id:"sub-problems-705",level:3},{value:"Edge Cases",id:"edge-cases-705",level:3},{value:"Further Readings",id:"further-readings-705",level:3},{value:"Maximum Side Length of a Square with Sum Less than or Equal to Threshold",id:"maximum-side-length-of-a-square-with-sum-less-than-or-equal-to-threshold",level:2},{value:"Inputs",id:"inputs-706",level:3},{value:"Sub-problems",id:"sub-problems-706",level:3},{value:"Edge Cases",id:"edge-cases-706",level:3},{value:"Further Readings",id:"further-readings-706",level:3},{value:"Divide Array in Sets of K Consecutive Numbers",id:"divide-array-in-sets-of-k-consecutive-numbers",level:2},{value:"Inputs",id:"inputs-707",level:3},{value:"Sub-problems",id:"sub-problems-707",level:3},{value:"Edge Cases",id:"edge-cases-707",level:3},{value:"Further Readings",id:"further-readings-707",level:3},{value:"Maximum Number of Occurrences of a Substring",id:"maximum-number-of-occurrences-of-a-substring",level:2},{value:"Inputs",id:"inputs-708",level:3},{value:"Sub-problems",id:"sub-problems-708",level:3},{value:"Edge Cases",id:"edge-cases-708",level:3},{value:"Further Readings",id:"further-readings-708",level:3},{value:"Sum of Mutated Array Closest to Target",id:"sum-of-mutated-array-closest-to-target",level:2},{value:"Inputs",id:"inputs-709",level:3},{value:"Sub-problems",id:"sub-problems-709",level:3},{value:"Edge Cases",id:"edge-cases-709",level:3},{value:"Further Readings",id:"further-readings-709",level:3},{value:"Deepest Leaves Sum",id:"deepest-leaves-sum",level:2},{value:"Inputs",id:"inputs-710",level:3},{value:"Sub-problems",id:"sub-problems-710",level:3},{value:"Edge Cases",id:"edge-cases-710",level:3},{value:"Further Readings",id:"further-readings-710",level:3},{value:"All Elements in Two Binary Search Trees",id:"all-elements-in-two-binary-search-trees",level:2},{value:"Inputs",id:"inputs-711",level:3},{value:"Sub-problems",id:"sub-problems-711",level:3},{value:"Edge Cases",id:"edge-cases-711",level:3},{value:"Further Readings",id:"further-readings-711",level:3},{value:"Jump Game III",id:"jump-game-iii",level:2},{value:"Inputs",id:"inputs-712",level:3},{value:"Sub-problems",id:"sub-problems-712",level:3},{value:"Edge Cases",id:"edge-cases-712",level:3},{value:"Further Readings",id:"further-readings-712",level:3},{value:"Running Total for Different Genders",id:"running-total-for-different-genders",level:2},{value:"Inputs",id:"inputs-713",level:3},{value:"Sub-problems",id:"sub-problems-713",level:3},{value:"Edge Cases",id:"edge-cases-713",level:3},{value:"Further Readings",id:"further-readings-713",level:3},{value:"XOR Queries of a Subarray",id:"xor-queries-of-a-subarray",level:2},{value:"Inputs",id:"inputs-714",level:3},{value:"Sub-problems",id:"sub-problems-714",level:3},{value:"Edge Cases",id:"edge-cases-714",level:3},{value:"Further Readings",id:"further-readings-714",level:3},{value:"Get Watched Videos by Your Friends",id:"get-watched-videos-by-your-friends",level:2},{value:"Inputs",id:"inputs-715",level:3},{value:"Sub-problems",id:"sub-problems-715",level:3},{value:"Edge Cases",id:"edge-cases-715",level:3},{value:"Further Readings",id:"further-readings-715",level:3},{value:"Matrix Block Sum",id:"matrix-block-sum",level:2},{value:"Inputs",id:"inputs-716",level:3},{value:"Sub-problems",id:"sub-problems-716",level:3},{value:"Edge Cases",id:"edge-cases-716",level:3},{value:"Further Readings",id:"further-readings-716",level:3},{value:"Sum of Nodes with Even-Valued Grandparent",id:"sum-of-nodes-with-even-valued-grandparent",level:2},{value:"Inputs",id:"inputs-717",level:3},{value:"Sub-problems",id:"sub-problems-717",level:3},{value:"Edge Cases",id:"edge-cases-717",level:3},{value:"Further Readings",id:"further-readings-717",level:3},{value:"Minimum Flips to Make a OR b Equal to c",id:"minimum-flips-to-make-a-or-b-equal-to-c",level:2},{value:"Inputs",id:"inputs-718",level:3},{value:"Sub-problems",id:"sub-problems-718",level:3},{value:"Edge Cases",id:"edge-cases-718",level:3},{value:"Further Readings",id:"further-readings-718",level:3},{value:"Number of Operations to Make Network Connected",id:"number-of-operations-to-make-network-connected",level:2},{value:"Inputs",id:"inputs-719",level:3},{value:"Sub-problems",id:"sub-problems-719",level:3},{value:"Edge Cases",id:"edge-cases-719",level:3},{value:"Further Readings",id:"further-readings-719",level:3},{value:"Restaurant Growth",id:"restaurant-growth",level:2},{value:"Inputs",id:"inputs-720",level:3},{value:"Sub-problems",id:"sub-problems-720",level:3},{value:"Edge Cases",id:"edge-cases-720",level:3},{value:"Further Readings",id:"further-readings-720",level:3},{value:"Print Words Vertically",id:"print-words-vertically",level:2},{value:"Inputs",id:"inputs-721",level:3},{value:"Sub-problems",id:"sub-problems-721",level:3},{value:"Edge Cases",id:"edge-cases-721",level:3},{value:"Further Readings",id:"further-readings-721",level:3},{value:"Delete Leaves With a Given Value",id:"delete-leaves-with-a-given-value",level:2},{value:"Inputs",id:"inputs-722",level:3},{value:"Sub-problems",id:"sub-problems-722",level:3},{value:"Edge Cases",id:"edge-cases-722",level:3},{value:"Further Readings",id:"further-readings-722",level:3},{value:"Break a Palindrome",id:"break-a-palindrome",level:2},{value:"Inputs",id:"inputs-723",level:3},{value:"Sub-problems",id:"sub-problems-723",level:3},{value:"Edge Cases",id:"edge-cases-723",level:3},{value:"Further Readings",id:"further-readings-723",level:3},{value:"Sort the Matrix Diagonally",id:"sort-the-matrix-diagonally",level:2},{value:"Inputs",id:"inputs-724",level:3},{value:"Sub-problems",id:"sub-problems-724",level:3},{value:"Edge Cases",id:"edge-cases-724",level:3},{value:"Further Readings",id:"further-readings-724",level:3},{value:"Filter Restaurants by Vegan-Friendly, Price and Distance",id:"filter-restaurants-by-vegan-friendly-price-and-distance",level:2},{value:"Inputs",id:"inputs-725",level:3},{value:"Sub-problems",id:"sub-problems-725",level:3},{value:"Edge Cases",id:"edge-cases-725",level:3},{value:"Further Readings",id:"further-readings-725",level:3},{value:"Find the City With the Smallest Number of Neighbors at a Threshold Distance",id:"find-the-city-with-the-smallest-number-of-neighbors-at-a-threshold-distance",level:2},{value:"Inputs",id:"inputs-726",level:3},{value:"Sub-problems",id:"sub-problems-726",level:3},{value:"Edge Cases",id:"edge-cases-726",level:3},{value:"Further Readings",id:"further-readings-726",level:3},{value:"Reduce Array Size to The Half",id:"reduce-array-size-to-the-half",level:2},{value:"Inputs",id:"inputs-727",level:3},{value:"Sub-problems",id:"sub-problems-727",level:3},{value:"Edge Cases",id:"edge-cases-727",level:3},{value:"Further Readings",id:"further-readings-727",level:3},{value:"Maximum Product of Splitted Binary Tree",id:"maximum-product-of-splitted-binary-tree",level:2},{value:"Inputs",id:"inputs-728",level:3},{value:"Sub-problems",id:"sub-problems-728",level:3},{value:"Edge Cases",id:"edge-cases-728",level:3},{value:"Further Readings",id:"further-readings-728",level:3},{value:"Movie Rating",id:"movie-rating",level:2},{value:"Inputs",id:"inputs-729",level:3},{value:"Sub-problems",id:"sub-problems-729",level:3},{value:"Edge Cases",id:"edge-cases-729",level:3},{value:"Further Readings",id:"further-readings-729",level:3},{value:"Number of Sub-arrays of Size K and Average Greater than or Equal to Threshold",id:"number-of-sub-arrays-of-size-k-and-average-greater-than-or-equal-to-threshold",level:2},{value:"Inputs",id:"inputs-730",level:3},{value:"Sub-problems",id:"sub-problems-730",level:3},{value:"Edge Cases",id:"edge-cases-730",level:3},{value:"Further Readings",id:"further-readings-730",level:3},{value:"Angle Between Hands of a Clock",id:"angle-between-hands-of-a-clock",level:2},{value:"Inputs",id:"inputs-731",level:3},{value:"Sub-problems",id:"sub-problems-731",level:3},{value:"Edge Cases",id:"edge-cases-731",level:3},{value:"Further Readings",id:"further-readings-731",level:3},{value:"Minimum Number of Steps to Make Two Strings Anagram",id:"minimum-number-of-steps-to-make-two-strings-anagram",level:2},{value:"Inputs",id:"inputs-732",level:3},{value:"Sub-problems",id:"sub-problems-732",level:3},{value:"Edge Cases",id:"edge-cases-732",level:3},{value:"Further Readings",id:"further-readings-732",level:3},{value:"Tweet Counts Per Frequency",id:"tweet-counts-per-frequency",level:2},{value:"Inputs",id:"inputs-733",level:3},{value:"Sub-problems",id:"sub-problems-733",level:3},{value:"Edge Cases",id:"edge-cases-733",level:3},{value:"Further Readings",id:"further-readings-733",level:3},{value:"Product of the Last K Numbers",id:"product-of-the-last-k-numbers",level:2},{value:"Inputs",id:"inputs-734",level:3},{value:"Sub-problems",id:"sub-problems-734",level:3},{value:"Edge Cases",id:"edge-cases-734",level:3},{value:"Further Readings",id:"further-readings-734",level:3},{value:"Maximum Number of Events That Can Be Attended",id:"maximum-number-of-events-that-can-be-attended",level:2},{value:"Inputs",id:"inputs-735",level:3},{value:"Sub-problems",id:"sub-problems-735",level:3},{value:"Edge Cases",id:"edge-cases-735",level:3},{value:"Further Readings",id:"further-readings-735",level:3},{value:"Activity Participants",id:"activity-participants",level:2},{value:"Inputs",id:"inputs-736",level:3},{value:"Sub-problems",id:"sub-problems-736",level:3},{value:"Edge Cases",id:"edge-cases-736",level:3},{value:"Further Readings",id:"further-readings-736",level:3},{value:"Apply Discount Every n Orders",id:"apply-discount-every-n-orders",level:2},{value:"Inputs",id:"inputs-737",level:3},{value:"Sub-problems",id:"sub-problems-737",level:3},{value:"Edge Cases",id:"edge-cases-737",level:3},{value:"Further Readings",id:"further-readings-737",level:3},{value:"Number of Substrings Containing All Three Characters",id:"number-of-substrings-containing-all-three-characters",level:2},{value:"Inputs",id:"inputs-738",level:3},{value:"Sub-problems",id:"sub-problems-738",level:3},{value:"Edge Cases",id:"edge-cases-738",level:3},{value:"Further Readings",id:"further-readings-738",level:3},{value:"Validate Binary Tree Nodes",id:"validate-binary-tree-nodes",level:2},{value:"Inputs",id:"inputs-739",level:3},{value:"Sub-problems",id:"sub-problems-739",level:3},{value:"Edge Cases",id:"edge-cases-739",level:3},{value:"Further Readings",id:"further-readings-739",level:3},{value:"Closest Divisors",id:"closest-divisors",level:2},{value:"Inputs",id:"inputs-740",level:3},{value:"Sub-problems",id:"sub-problems-740",level:3},{value:"Edge Cases",id:"edge-cases-740",level:3},{value:"Further Readings",id:"further-readings-740",level:3},{value:"Number of Trusted Contacts of a Customer",id:"number-of-trusted-contacts-of-a-customer",level:2},{value:"Inputs",id:"inputs-741",level:3},{value:"Sub-problems",id:"sub-problems-741",level:3},{value:"Edge Cases",id:"edge-cases-741",level:3},{value:"Further Readings",id:"further-readings-741",level:3},{value:"Rank Teams by Votes",id:"rank-teams-by-votes",level:2},{value:"Inputs",id:"inputs-742",level:3},{value:"Sub-problems",id:"sub-problems-742",level:3},{value:"Edge Cases",id:"edge-cases-742",level:3},{value:"Further Readings",id:"further-readings-742",level:3},{value:"Linked List in Binary Tree",id:"linked-list-in-binary-tree",level:2},{value:"Inputs",id:"inputs-743",level:3},{value:"Sub-problems",id:"sub-problems-743",level:3},{value:"Edge Cases",id:"edge-cases-743",level:3},{value:"Further Readings",id:"further-readings-743",level:3},{value:"Find the Longest Substring Containing Vowels in Even Counts",id:"find-the-longest-substring-containing-vowels-in-even-counts",level:2},{value:"Inputs",id:"inputs-744",level:3},{value:"Sub-problems",id:"sub-problems-744",level:3},{value:"Edge Cases",id:"edge-cases-744",level:3},{value:"Further Readings",id:"further-readings-744",level:3},{value:"Longest ZigZag Path in a Binary Tree",id:"longest-zigzag-path-in-a-binary-tree",level:2},{value:"Inputs",id:"inputs-745",level:3},{value:"Sub-problems",id:"sub-problems-745",level:3},{value:"Edge Cases",id:"edge-cases-745",level:3},{value:"Further Readings",id:"further-readings-745",level:3},{value:"Number of Times Binary String Is Prefix-Aligned",id:"number-of-times-binary-string-is-prefix-aligned",level:2},{value:"Inputs",id:"inputs-746",level:3},{value:"Sub-problems",id:"sub-problems-746",level:3},{value:"Edge Cases",id:"edge-cases-746",level:3},{value:"Further Readings",id:"further-readings-746",level:3},{value:"Time Needed to Inform All Employees",id:"time-needed-to-inform-all-employees",level:2},{value:"Inputs",id:"inputs-747",level:3},{value:"Sub-problems",id:"sub-problems-747",level:3},{value:"Edge Cases",id:"edge-cases-747",level:3},{value:"Further Readings",id:"further-readings-747",level:3},{value:"Design a Stack With Increment Operation",id:"design-a-stack-with-increment-operation",level:2},{value:"Inputs",id:"inputs-748",level:3},{value:"Sub-problems",id:"sub-problems-748",level:3},{value:"Edge Cases",id:"edge-cases-748",level:3},{value:"Further Readings",id:"further-readings-748",level:3},{value:"Balance a Binary Search Tree",id:"balance-a-binary-search-tree",level:2},{value:"Inputs",id:"inputs-749",level:3},{value:"Sub-problems",id:"sub-problems-749",level:3},{value:"Edge Cases",id:"edge-cases-749",level:3},{value:"Further Readings",id:"further-readings-749",level:3},{value:"Cinema Seat Allocation",id:"cinema-seat-allocation",level:2},{value:"Inputs",id:"inputs-750",level:3},{value:"Sub-problems",id:"sub-problems-750",level:3},{value:"Edge Cases",id:"edge-cases-750",level:3},{value:"Further Readings",id:"further-readings-750",level:3},{value:"Sort Integers by The Power Value",id:"sort-integers-by-the-power-value",level:2},{value:"Inputs",id:"inputs-751",level:3},{value:"Sub-problems",id:"sub-problems-751",level:3},{value:"Edge Cases",id:"edge-cases-751",level:3},{value:"Further Readings",id:"further-readings-751",level:3},{value:"Four Divisors",id:"four-divisors",level:2},{value:"Inputs",id:"inputs-752",level:3},{value:"Sub-problems",id:"sub-problems-752",level:3},{value:"Edge Cases",id:"edge-cases-752",level:3},{value:"Further Readings",id:"further-readings-752",level:3},{value:"Check if There is a Valid Path in a Grid",id:"check-if-there-is-a-valid-path-in-a-grid",level:2},{value:"Inputs",id:"inputs-753",level:3},{value:"Sub-problems",id:"sub-problems-753",level:3},{value:"Edge Cases",id:"edge-cases-753",level:3},{value:"Further Readings",id:"further-readings-753",level:3},{value:"Capital Gain/Loss",id:"capital-gainloss",level:2},{value:"Inputs",id:"inputs-754",level:3},{value:"Sub-problems",id:"sub-problems-754",level:3},{value:"Edge Cases",id:"edge-cases-754",level:3},{value:"Further Readings",id:"further-readings-754",level:3},{value:"Count Number of Teams",id:"count-number-of-teams",level:2},{value:"Inputs",id:"inputs-755",level:3},{value:"Sub-problems",id:"sub-problems-755",level:3},{value:"Edge Cases",id:"edge-cases-755",level:3},{value:"Further Readings",id:"further-readings-755",level:3},{value:"Design Underground System",id:"design-underground-system",level:2},{value:"Inputs",id:"inputs-756",level:3},{value:"Sub-problems",id:"sub-problems-756",level:3},{value:"Edge Cases",id:"edge-cases-756",level:3},{value:"Further Readings",id:"further-readings-756",level:3},{value:"Customers Who Bought Products A and B but Not C",id:"customers-who-bought-products-a-and-b-but-not-c",level:2},{value:"Inputs",id:"inputs-757",level:3},{value:"Sub-problems",id:"sub-problems-757",level:3},{value:"Edge Cases",id:"edge-cases-757",level:3},{value:"Further Readings",id:"further-readings-757",level:3},{value:"Construct K Palindrome Strings",id:"construct-k-palindrome-strings",level:2},{value:"Inputs",id:"inputs-758",level:3},{value:"Sub-problems",id:"sub-problems-758",level:3},{value:"Edge Cases",id:"edge-cases-758",level:3},{value:"Further Readings",id:"further-readings-758",level:3},{value:"Circle and Rectangle Overlapping",id:"circle-and-rectangle-overlapping",level:2},{value:"Inputs",id:"inputs-759",level:3},{value:"Sub-problems",id:"sub-problems-759",level:3},{value:"Edge Cases",id:"edge-cases-759",level:3},{value:"Further Readings",id:"further-readings-759",level:3},{value:"Number of Steps to Reduce a Number in Binary Representation to One",id:"number-of-steps-to-reduce-a-number-in-binary-representation-to-one",level:2},{value:"Inputs",id:"inputs-760",level:3},{value:"Sub-problems",id:"sub-problems-760",level:3},{value:"Edge Cases",id:"edge-cases-760",level:3},{value:"Further Readings",id:"further-readings-760",level:3},{value:"Longest Happy String",id:"longest-happy-string",level:2},{value:"Inputs",id:"inputs-761",level:3},{value:"Sub-problems",id:"sub-problems-761",level:3},{value:"Edge Cases",id:"edge-cases-761",level:3},{value:"Further Readings",id:"further-readings-761",level:3},{value:"Queries on a Permutation With Key",id:"queries-on-a-permutation-with-key",level:2},{value:"Inputs",id:"inputs-762",level:3},{value:"Sub-problems",id:"sub-problems-762",level:3},{value:"Edge Cases",id:"edge-cases-762",level:3},{value:"Further Readings",id:"further-readings-762",level:3},{value:"HTML Entity Parser",id:"html-entity-parser",level:2},{value:"Inputs",id:"inputs-763",level:3},{value:"Sub-problems",id:"sub-problems-763",level:3},{value:"Edge Cases",id:"edge-cases-763",level:3},{value:"Further Readings",id:"further-readings-763",level:3},{value:"Find the Minimum Number of Fibonacci Numbers Whose Sum Is K",id:"find-the-minimum-number-of-fibonacci-numbers-whose-sum-is-k",level:2},{value:"Inputs",id:"inputs-764",level:3},{value:"Sub-problems",id:"sub-problems-764",level:3},{value:"Edge Cases",id:"edge-cases-764",level:3},{value:"Further Readings",id:"further-readings-764",level:3},{value:"The k-th Lexicographical String of All Happy Strings of Length n",id:"the-k-th-lexicographical-string-of-all-happy-strings-of-length-n",level:2},{value:"Inputs",id:"inputs-765",level:3},{value:"Sub-problems",id:"sub-problems-765",level:3},{value:"Edge Cases",id:"edge-cases-765",level:3},{value:"Further Readings",id:"further-readings-765",level:3},{value:"Display Table of Food Orders in a Restaurant",id:"display-table-of-food-orders-in-a-restaurant",level:2},{value:"Inputs",id:"inputs-766",level:3},{value:"Sub-problems",id:"sub-problems-766",level:3},{value:"Edge Cases",id:"edge-cases-766",level:3},{value:"Further Readings",id:"further-readings-766",level:3},{value:"Minimum Number of Frogs Croaking",id:"minimum-number-of-frogs-croaking",level:2},{value:"Inputs",id:"inputs-767",level:3},{value:"Sub-problems",id:"sub-problems-767",level:3},{value:"Edge Cases",id:"edge-cases-767",level:3},{value:"Further Readings",id:"further-readings-767",level:3},{value:"Maximum Points You Can Obtain from Cards",id:"maximum-points-you-can-obtain-from-cards",level:2},{value:"Inputs",id:"inputs-768",level:3},{value:"Sub-problems",id:"sub-problems-768",level:3},{value:"Edge Cases",id:"edge-cases-768",level:3},{value:"Further Readings",id:"further-readings-768",level:3},{value:"Diagonal Traverse II",id:"diagonal-traverse-ii",level:2},{value:"Inputs",id:"inputs-769",level:3},{value:"Sub-problems",id:"sub-problems-769",level:3},{value:"Edge Cases",id:"edge-cases-769",level:3},{value:"Further Readings",id:"further-readings-769",level:3},{value:"Leftmost Column with at Least a One",id:"leftmost-column-with-at-least-a-one",level:2},{value:"Inputs",id:"inputs-770",level:3},{value:"Sub-problems",id:"sub-problems-770",level:3},{value:"Edge Cases",id:"edge-cases-770",level:3},{value:"Further Readings",id:"further-readings-770",level:3},{value:"First Unique Number",id:"first-unique-number",level:2},{value:"Inputs",id:"inputs-771",level:3},{value:"Sub-problems",id:"sub-problems-771",level:3},{value:"Edge Cases",id:"edge-cases-771",level:3},{value:"Further Readings",id:"further-readings-771",level:3},{value:"Check If a String Is a Valid Sequence from Root to Leaves Path in a Binary Tree",id:"check-if-a-string-is-a-valid-sequence-from-root-to-leaves-path-in-a-binary-tree",level:2},{value:"Inputs",id:"inputs-772",level:3},{value:"Sub-problems",id:"sub-problems-772",level:3},{value:"Edge Cases",id:"edge-cases-772",level:3},{value:"Further Readings",id:"further-readings-772",level:3},{value:"Max Difference You Can Get From Changing an Integer",id:"max-difference-you-can-get-from-changing-an-integer",level:2},{value:"Inputs",id:"inputs-773",level:3},{value:"Sub-problems",id:"sub-problems-773",level:3},{value:"Edge Cases",id:"edge-cases-773",level:3},{value:"Further Readings",id:"further-readings-773",level:3},{value:"Check If a String Can Break Another String",id:"check-if-a-string-can-break-another-string",level:2},{value:"Inputs",id:"inputs-774",level:3},{value:"Sub-problems",id:"sub-problems-774",level:3},{value:"Edge Cases",id:"edge-cases-774",level:3},{value:"Further Readings",id:"further-readings-774",level:3},{value:"Longest Continuous Subarray With Absolute Diff Less Than or Equal to Limit",id:"longest-continuous-subarray-with-absolute-diff-less-than-or-equal-to-limit",level:2},{value:"Inputs",id:"inputs-775",level:3},{value:"Sub-problems",id:"sub-problems-775",level:3},{value:"Edge Cases",id:"edge-cases-775",level:3},{value:"Further Readings",id:"further-readings-775",level:3},{value:"Evaluate Boolean Expression",id:"evaluate-boolean-expression",level:2},{value:"Inputs",id:"inputs-776",level:3},{value:"Sub-problems",id:"sub-problems-776",level:3},{value:"Edge Cases",id:"edge-cases-776",level:3},{value:"Further Readings",id:"further-readings-776",level:3},{value:"Count Triplets That Can Form Two Arrays of Equal XOR",id:"count-triplets-that-can-form-two-arrays-of-equal-xor",level:2},{value:"Inputs",id:"inputs-777",level:3},{value:"Sub-problems",id:"sub-problems-777",level:3},{value:"Edge Cases",id:"edge-cases-777",level:3},{value:"Further Readings",id:"further-readings-777",level:3},{value:"Minimum Time to Collect All Apples in a Tree",id:"minimum-time-to-collect-all-apples-in-a-tree",level:2},{value:"Inputs",id:"inputs-778",level:3},{value:"Sub-problems",id:"sub-problems-778",level:3},{value:"Edge Cases",id:"edge-cases-778",level:3},{value:"Further Readings",id:"further-readings-778",level:3},{value:"Apples &amp; Oranges",id:"apples--oranges",level:2},{value:"Inputs",id:"inputs-779",level:3},{value:"Sub-problems",id:"sub-problems-779",level:3},{value:"Edge Cases",id:"edge-cases-779",level:3},{value:"Further Readings",id:"further-readings-779",level:3},{value:"Simplified Fractions",id:"simplified-fractions",level:2},{value:"Inputs",id:"inputs-780",level:3},{value:"Sub-problems",id:"sub-problems-780",level:3},{value:"Edge Cases",id:"edge-cases-780",level:3},{value:"Further Readings",id:"further-readings-780",level:3},{value:"Count Good Nodes in Binary Tree",id:"count-good-nodes-in-binary-tree",level:2},{value:"Inputs",id:"inputs-781",level:3},{value:"Sub-problems",id:"sub-problems-781",level:3},{value:"Edge Cases",id:"edge-cases-781",level:3},{value:"Further Readings",id:"further-readings-781",level:3},{value:"Rearrange Words in a Sentence",id:"rearrange-words-in-a-sentence",level:2},{value:"Inputs",id:"inputs-782",level:3},{value:"Sub-problems",id:"sub-problems-782",level:3},{value:"Edge Cases",id:"edge-cases-782",level:3},{value:"Further Readings",id:"further-readings-782",level:3},{value:"People Whose List of Favorite Companies Is Not a Subset of Another List",id:"people-whose-list-of-favorite-companies-is-not-a-subset-of-another-list",level:2},{value:"Inputs",id:"inputs-783",level:3},{value:"Sub-problems",id:"sub-problems-783",level:3},{value:"Edge Cases",id:"edge-cases-783",level:3},{value:"Further Readings",id:"further-readings-783",level:3},{value:"Active Users",id:"active-users",level:2},{value:"Inputs",id:"inputs-784",level:3},{value:"Sub-problems",id:"sub-problems-784",level:3},{value:"Edge Cases",id:"edge-cases-784",level:3},{value:"Further Readings",id:"further-readings-784",level:3},{value:"Maximum Number of Vowels in a Substring of Given Length",id:"maximum-number-of-vowels-in-a-substring-of-given-length",level:2},{value:"Inputs",id:"inputs-785",level:3},{value:"Sub-problems",id:"sub-problems-785",level:3},{value:"Edge Cases",id:"edge-cases-785",level:3},{value:"Further Readings",id:"further-readings-785",level:3},{value:"Pseudo-Palindromic Paths in a Binary Tree",id:"pseudo-palindromic-paths-in-a-binary-tree",level:2},{value:"Inputs",id:"inputs-786",level:3},{value:"Sub-problems",id:"sub-problems-786",level:3},{value:"Edge Cases",id:"edge-cases-786",level:3},{value:"Further Readings",id:"further-readings-786",level:3},{value:"Rectangles Area",id:"rectangles-area",level:2},{value:"Inputs",id:"inputs-787",level:3},{value:"Sub-problems",id:"sub-problems-787",level:3},{value:"Edge Cases",id:"edge-cases-787",level:3},{value:"Further Readings",id:"further-readings-787",level:3},{value:"Check If a String Contains All Binary Codes of Size K",id:"check-if-a-string-contains-all-binary-codes-of-size-k",level:2},{value:"Inputs",id:"inputs-788",level:3},{value:"Sub-problems",id:"sub-problems-788",level:3},{value:"Edge Cases",id:"edge-cases-788",level:3},{value:"Further Readings",id:"further-readings-788",level:3},{value:"Course Schedule IV",id:"course-schedule-iv",level:2},{value:"Inputs",id:"inputs-789",level:3},{value:"Sub-problems",id:"sub-problems-789",level:3},{value:"Edge Cases",id:"edge-cases-789",level:3},{value:"Further Readings",id:"further-readings-789",level:3},{value:"Maximum Area of a Piece of Cake After Horizontal and Vertical Cuts",id:"maximum-area-of-a-piece-of-cake-after-horizontal-and-vertical-cuts",level:2},{value:"Inputs",id:"inputs-790",level:3},{value:"Sub-problems",id:"sub-problems-790",level:3},{value:"Edge Cases",id:"edge-cases-790",level:3},{value:"Further Readings",id:"further-readings-790",level:3},{value:"Reorder Routes to Make All Paths Lead to the City Zero",id:"reorder-routes-to-make-all-paths-lead-to-the-city-zero",level:2},{value:"Inputs",id:"inputs-791",level:3},{value:"Sub-problems",id:"sub-problems-791",level:3},{value:"Edge Cases",id:"edge-cases-791",level:3},{value:"Further Readings",id:"further-readings-791",level:3},{value:"Calculate Salaries",id:"calculate-salaries",level:2},{value:"Inputs",id:"inputs-792",level:3},{value:"Sub-problems",id:"sub-problems-792",level:3},{value:"Edge Cases",id:"edge-cases-792",level:3},{value:"Further Readings",id:"further-readings-792",level:3},{value:"The k Strongest Values in an Array",id:"the-k-strongest-values-in-an-array",level:2},{value:"Inputs",id:"inputs-793",level:3},{value:"Sub-problems",id:"sub-problems-793",level:3},{value:"Edge Cases",id:"edge-cases-793",level:3},{value:"Further Readings",id:"further-readings-793",level:3},{value:"Design Browser History",id:"design-browser-history",level:2},{value:"Inputs",id:"inputs-794",level:3},{value:"Sub-problems",id:"sub-problems-794",level:3},{value:"Edge Cases",id:"edge-cases-794",level:3},{value:"Further Readings",id:"further-readings-794",level:3},{value:"Subrectangle Queries",id:"subrectangle-queries",level:2},{value:"Inputs",id:"inputs-795",level:3},{value:"Sub-problems",id:"sub-problems-795",level:3},{value:"Edge Cases",id:"edge-cases-795",level:3},{value:"Further Readings",id:"further-readings-795",level:3},{value:"Find Two Non-overlapping Sub-arrays Each With Target Sum",id:"find-two-non-overlapping-sub-arrays-each-with-target-sum",level:2},{value:"Inputs",id:"inputs-796",level:3},{value:"Sub-problems",id:"sub-problems-796",level:3},{value:"Edge Cases",id:"edge-cases-796",level:3},{value:"Further Readings",id:"further-readings-796",level:3},{value:"Least Number of Unique Integers after K Removals",id:"least-number-of-unique-integers-after-k-removals",level:2},{value:"Inputs",id:"inputs-797",level:3},{value:"Sub-problems",id:"sub-problems-797",level:3},{value:"Edge Cases",id:"edge-cases-797",level:3},{value:"Further Readings",id:"further-readings-797",level:3},{value:"Minimum Number of Days to Make m Bouquets",id:"minimum-number-of-days-to-make-m-bouquets",level:2},{value:"Inputs",id:"inputs-798",level:3},{value:"Sub-problems",id:"sub-problems-798",level:3},{value:"Edge Cases",id:"edge-cases-798",level:3},{value:"Further Readings",id:"further-readings-798",level:3},{value:"Clone Binary Tree With Random Pointer",id:"clone-binary-tree-with-random-pointer",level:2},{value:"Inputs",id:"inputs-799",level:3},{value:"Sub-problems",id:"sub-problems-799",level:3},{value:"Edge Cases",id:"edge-cases-799",level:3},{value:"Further Readings",id:"further-readings-799",level:3},{value:"Making File Names Unique",id:"making-file-names-unique",level:2},{value:"Inputs",id:"inputs-800",level:3},{value:"Sub-problems",id:"sub-problems-800",level:3},{value:"Edge Cases",id:"edge-cases-800",level:3},{value:"Further Readings",id:"further-readings-800",level:3},{value:"Avoid Flood in The City",id:"avoid-flood-in-the-city",level:2},{value:"Inputs",id:"inputs-801",level:3},{value:"Sub-problems",id:"sub-problems-801",level:3},{value:"Edge Cases",id:"edge-cases-801",level:3},{value:"Further Readings",id:"further-readings-801",level:3},{value:"Clone N-ary Tree",id:"clone-n-ary-tree",level:2},{value:"Inputs",id:"inputs-802",level:3},{value:"Sub-problems",id:"sub-problems-802",level:3},{value:"Edge Cases",id:"edge-cases-802",level:3},{value:"Further Readings",id:"further-readings-802",level:3},{value:"The kth Factor of n",id:"the-kth-factor-of-n",level:2},{value:"Inputs",id:"inputs-803",level:3},{value:"Sub-problems",id:"sub-problems-803",level:3},{value:"Edge Cases",id:"edge-cases-803",level:3},{value:"Further Readings",id:"further-readings-803",level:3},{value:"Longest Subarray of 1&#39;s After Deleting One Element",id:"longest-subarray-of-1s-after-deleting-one-element",level:2},{value:"Inputs",id:"inputs-804",level:3},{value:"Sub-problems",id:"sub-problems-804",level:3},{value:"Edge Cases",id:"edge-cases-804",level:3},{value:"Further Readings",id:"further-readings-804",level:3},{value:"Check If Array Pairs Are Divisible by k",id:"check-if-array-pairs-are-divisible-by-k",level:2},{value:"Inputs",id:"inputs-805",level:3},{value:"Sub-problems",id:"sub-problems-805",level:3},{value:"Edge Cases",id:"edge-cases-805",level:3},{value:"Further Readings",id:"further-readings-805",level:3},{value:"Number of Subsequences That Satisfy the Given Sum Condition",id:"number-of-subsequences-that-satisfy-the-given-sum-condition",level:2},{value:"Inputs",id:"inputs-806",level:3},{value:"Sub-problems",id:"sub-problems-806",level:3},{value:"Edge Cases",id:"edge-cases-806",level:3},{value:"Further Readings",id:"further-readings-806",level:3},{value:"Design a File Sharing System",id:"design-a-file-sharing-system",level:2},{value:"Inputs",id:"inputs-807",level:3},{value:"Sub-problems",id:"sub-problems-807",level:3},{value:"Edge Cases",id:"edge-cases-807",level:3},{value:"Further Readings",id:"further-readings-807",level:3},{value:"Countries You Can Safely Invest In",id:"countries-you-can-safely-invest-in",level:2},{value:"Inputs",id:"inputs-808",level:3},{value:"Sub-problems",id:"sub-problems-808",level:3},{value:"Edge Cases",id:"edge-cases-808",level:3},{value:"Further Readings",id:"further-readings-808",level:3},{value:"Last Moment Before All Ants Fall Out of a Plank",id:"last-moment-before-all-ants-fall-out-of-a-plank",level:2},{value:"Inputs",id:"inputs-809",level:3},{value:"Sub-problems",id:"sub-problems-809",level:3},{value:"Edge Cases",id:"edge-cases-809",level:3},{value:"Further Readings",id:"further-readings-809",level:3},{value:"Count Submatrices With All Ones",id:"count-submatrices-with-all-ones",level:2},{value:"Inputs",id:"inputs-810",level:3},{value:"Sub-problems",id:"sub-problems-810",level:3},{value:"Edge Cases",id:"edge-cases-810",level:3},{value:"Further Readings",id:"further-readings-810",level:3},{value:"Find Root of N-Ary Tree",id:"find-root-of-n-ary-tree",level:2},{value:"Inputs",id:"inputs-811",level:3},{value:"Sub-problems",id:"sub-problems-811",level:3},{value:"Edge Cases",id:"edge-cases-811",level:3},{value:"Further Readings",id:"further-readings-811",level:3},{value:"Range Sum of Sorted Subarray Sums",id:"range-sum-of-sorted-subarray-sums",level:2},{value:"Inputs",id:"inputs-812",level:3},{value:"Sub-problems",id:"sub-problems-812",level:3},{value:"Edge Cases",id:"edge-cases-812",level:3},{value:"Further Readings",id:"further-readings-812",level:3},{value:"Minimum Difference Between Largest and Smallest Value in Three Moves",id:"minimum-difference-between-largest-and-smallest-value-in-three-moves",level:2},{value:"Inputs",id:"inputs-813",level:3},{value:"Sub-problems",id:"sub-problems-813",level:3},{value:"Edge Cases",id:"edge-cases-813",level:3},{value:"Further Readings",id:"further-readings-813",level:3},{value:"Number of Substrings With Only 1s",id:"number-of-substrings-with-only-1s",level:2},{value:"Inputs",id:"inputs-814",level:3},{value:"Sub-problems",id:"sub-problems-814",level:3},{value:"Edge Cases",id:"edge-cases-814",level:3},{value:"Further Readings",id:"further-readings-814",level:3},{value:"Path with Maximum Probability",id:"path-with-maximum-probability",level:2},{value:"Inputs",id:"inputs-815",level:3},{value:"Sub-problems",id:"sub-problems-815",level:3},{value:"Edge Cases",id:"edge-cases-815",level:3},{value:"Further Readings",id:"further-readings-815",level:3},{value:"Number of Nodes in the Sub-Tree With the Same Label",id:"number-of-nodes-in-the-sub-tree-with-the-same-label",level:2},{value:"Inputs",id:"inputs-816",level:3},{value:"Sub-problems",id:"sub-problems-816",level:3},{value:"Edge Cases",id:"edge-cases-816",level:3},{value:"Further Readings",id:"further-readings-816",level:3},{value:"Diameter of N-Ary Tree",id:"diameter-of-n-ary-tree",level:2},{value:"Inputs",id:"inputs-817",level:3},{value:"Sub-problems",id:"sub-problems-817",level:3},{value:"Edge Cases",id:"edge-cases-817",level:3},{value:"Further Readings",id:"further-readings-817",level:3},{value:"Number of Sub-arrays With Odd Sum",id:"number-of-sub-arrays-with-odd-sum",level:2},{value:"Inputs",id:"inputs-818",level:3},{value:"Sub-problems",id:"sub-problems-818",level:3},{value:"Edge Cases",id:"edge-cases-818",level:3},{value:"Further Readings",id:"further-readings-818",level:3},{value:"Number of Good Ways to Split a String",id:"number-of-good-ways-to-split-a-string",level:2},{value:"Inputs",id:"inputs-819",level:3},{value:"Sub-problems",id:"sub-problems-819",level:3},{value:"Edge Cases",id:"edge-cases-819",level:3},{value:"Further Readings",id:"further-readings-819",level:3},{value:"Minimum Suffix Flips",id:"minimum-suffix-flips",level:2},{value:"Inputs",id:"inputs-820",level:3},{value:"Sub-problems",id:"sub-problems-820",level:3},{value:"Edge Cases",id:"edge-cases-820",level:3},{value:"Further Readings",id:"further-readings-820",level:3},{value:"Number of Good Leaf Nodes Pairs",id:"number-of-good-leaf-nodes-pairs",level:2},{value:"Inputs",id:"inputs-821",level:3},{value:"Sub-problems",id:"sub-problems-821",level:3},{value:"Edge Cases",id:"edge-cases-821",level:3},{value:"Further Readings",id:"further-readings-821",level:3},{value:"The Most Recent Three Orders",id:"the-most-recent-three-orders",level:2},{value:"Inputs",id:"inputs-822",level:3},{value:"Sub-problems",id:"sub-problems-822",level:3},{value:"Edge Cases",id:"edge-cases-822",level:3},{value:"Further Readings",id:"further-readings-822",level:3},{value:"Find the Index of the Large Integer",id:"find-the-index-of-the-large-integer",level:2},{value:"Inputs",id:"inputs-823",level:3},{value:"Sub-problems",id:"sub-problems-823",level:3},{value:"Edge Cases",id:"edge-cases-823",level:3},{value:"Further Readings",id:"further-readings-823",level:3},{value:"Find the Winner of an Array Game",id:"find-the-winner-of-an-array-game",level:2},{value:"Inputs",id:"inputs-824",level:3},{value:"Sub-problems",id:"sub-problems-824",level:3},{value:"Edge Cases",id:"edge-cases-824",level:3},{value:"Further Readings",id:"further-readings-824",level:3},{value:"Minimum Swaps to Arrange a Binary Grid",id:"minimum-swaps-to-arrange-a-binary-grid",level:2},{value:"Inputs",id:"inputs-825",level:3},{value:"Sub-problems",id:"sub-problems-825",level:3},{value:"Edge Cases",id:"edge-cases-825",level:3},{value:"Further Readings",id:"further-readings-825",level:3},{value:"Guess the Majority in a Hidden Array",id:"guess-the-majority-in-a-hidden-array",level:2},{value:"Inputs",id:"inputs-826",level:3},{value:"Sub-problems",id:"sub-problems-826",level:3},{value:"Edge Cases",id:"edge-cases-826",level:3},{value:"Further Readings",id:"further-readings-826",level:3},{value:"Can Convert String in K Moves",id:"can-convert-string-in-k-moves",level:2},{value:"Inputs",id:"inputs-827",level:3},{value:"Sub-problems",id:"sub-problems-827",level:3},{value:"Edge Cases",id:"edge-cases-827",level:3},{value:"Further Readings",id:"further-readings-827",level:3},{value:"Minimum Insertions to Balance a Parentheses String",id:"minimum-insertions-to-balance-a-parentheses-string",level:2},{value:"Inputs",id:"inputs-828",level:3},{value:"Sub-problems",id:"sub-problems-828",level:3},{value:"Edge Cases",id:"edge-cases-828",level:3},{value:"Further Readings",id:"further-readings-828",level:3},{value:"Find Kth Bit in Nth Binary String",id:"find-kth-bit-in-nth-binary-string",level:2},{value:"Inputs",id:"inputs-829",level:3},{value:"Sub-problems",id:"sub-problems-829",level:3},{value:"Edge Cases",id:"edge-cases-829",level:3},{value:"Further Readings",id:"further-readings-829",level:3},{value:"Maximum Number of Non-Overlapping Subarrays With Sum Equals Target",id:"maximum-number-of-non-overlapping-subarrays-with-sum-equals-target",level:2},{value:"Inputs",id:"inputs-830",level:3},{value:"Sub-problems",id:"sub-problems-830",level:3},{value:"Edge Cases",id:"edge-cases-830",level:3},{value:"Further Readings",id:"further-readings-830",level:3},{value:"The Most Recent Orders for Each Product",id:"the-most-recent-orders-for-each-product",level:2},{value:"Inputs",id:"inputs-831",level:3},{value:"Sub-problems",id:"sub-problems-831",level:3},{value:"Edge Cases",id:"edge-cases-831",level:3},{value:"Further Readings",id:"further-readings-831",level:3},{value:"Minimum Operations to Make Array Equal",id:"minimum-operations-to-make-array-equal",level:2},{value:"Inputs",id:"inputs-832",level:3},{value:"Sub-problems",id:"sub-problems-832",level:3},{value:"Edge Cases",id:"edge-cases-832",level:3},{value:"Further Readings",id:"further-readings-832",level:3},{value:"Magnetic Force Between Two Balls",id:"magnetic-force-between-two-balls",level:2},{value:"Inputs",id:"inputs-833",level:3},{value:"Sub-problems",id:"sub-problems-833",level:3},{value:"Edge Cases",id:"edge-cases-833",level:3},{value:"Further Readings",id:"further-readings-833",level:3},{value:"Strings Differ by One Character",id:"strings-differ-by-one-character",level:2},{value:"Inputs",id:"inputs-834",level:3},{value:"Sub-problems",id:"sub-problems-834",level:3},{value:"Edge Cases",id:"edge-cases-834",level:3},{value:"Further Readings",id:"further-readings-834",level:3},{value:"Bank Account Summary",id:"bank-account-summary",level:2},{value:"Inputs",id:"inputs-835",level:3},{value:"Sub-problems",id:"sub-problems-835",level:3},{value:"Edge Cases",id:"edge-cases-835",level:3},{value:"Further Readings",id:"further-readings-835",level:3},{value:"Minimum Number of Vertices to Reach All Nodes",id:"minimum-number-of-vertices-to-reach-all-nodes",level:2},{value:"Inputs",id:"inputs-836",level:3},{value:"Sub-problems",id:"sub-problems-836",level:3},{value:"Edge Cases",id:"edge-cases-836",level:3},{value:"Further Readings",id:"further-readings-836",level:3},{value:"Minimum Numbers of Function Calls to Make Target Array",id:"minimum-numbers-of-function-calls-to-make-target-array",level:2},{value:"Inputs",id:"inputs-837",level:3},{value:"Sub-problems",id:"sub-problems-837",level:3},{value:"Edge Cases",id:"edge-cases-837",level:3},{value:"Further Readings",id:"further-readings-837",level:3},{value:"Detect Cycles in 2D Grid",id:"detect-cycles-in-2d-grid",level:2},{value:"Inputs",id:"inputs-838",level:3},{value:"Sub-problems",id:"sub-problems-838",level:3},{value:"Edge Cases",id:"edge-cases-838",level:3},{value:"Further Readings",id:"further-readings-838",level:3},{value:"Maximum Number of Coins You Can Get",id:"maximum-number-of-coins-you-can-get",level:2},{value:"Inputs",id:"inputs-839",level:3},{value:"Sub-problems",id:"sub-problems-839",level:3},{value:"Edge Cases",id:"edge-cases-839",level:3},{value:"Further Readings",id:"further-readings-839",level:3},{value:"Find Latest Group of Size M",id:"find-latest-group-of-size-m",level:2},{value:"Inputs",id:"inputs-840",level:3},{value:"Sub-problems",id:"sub-problems-840",level:3},{value:"Edge Cases",id:"edge-cases-840",level:3},{value:"Further Readings",id:"further-readings-840",level:3},{value:"Put Boxes Into the Warehouse I",id:"put-boxes-into-the-warehouse-i",level:2},{value:"Inputs",id:"inputs-841",level:3},{value:"Sub-problems",id:"sub-problems-841",level:3},{value:"Edge Cases",id:"edge-cases-841",level:3},{value:"Further Readings",id:"further-readings-841",level:3},{value:"Maximum Length of Subarray With Positive Product",id:"maximum-length-of-subarray-with-positive-product",level:2},{value:"Inputs",id:"inputs-842",level:3},{value:"Sub-problems",id:"sub-problems-842",level:3},{value:"Edge Cases",id:"edge-cases-842",level:3},{value:"Further Readings",id:"further-readings-842",level:3},{value:"Dot Product of Two Sparse Vectors",id:"dot-product-of-two-sparse-vectors",level:2},{value:"Inputs",id:"inputs-843",level:3},{value:"Sub-problems",id:"sub-problems-843",level:3},{value:"Edge Cases",id:"edge-cases-843",level:3},{value:"Further Readings",id:"further-readings-843",level:3},{value:"Number of Ways to Split a String",id:"number-of-ways-to-split-a-string",level:2},{value:"Inputs",id:"inputs-844",level:3},{value:"Sub-problems",id:"sub-problems-844",level:3},{value:"Edge Cases",id:"edge-cases-844",level:3},{value:"Further Readings",id:"further-readings-844",level:3},{value:"Shortest Subarray to be Removed to Make Array Sorted",id:"shortest-subarray-to-be-removed-to-make-array-sorted",level:2},{value:"Inputs",id:"inputs-845",level:3},{value:"Sub-problems",id:"sub-problems-845",level:3},{value:"Edge Cases",id:"edge-cases-845",level:3},{value:"Further Readings",id:"further-readings-845",level:3},{value:"Number of Ways Where Square of Number Is Equal to Product of Two Numbers",id:"number-of-ways-where-square-of-number-is-equal-to-product-of-two-numbers",level:2},{value:"Inputs",id:"inputs-846",level:3},{value:"Sub-problems",id:"sub-problems-846",level:3},{value:"Edge Cases",id:"edge-cases-846",level:3},{value:"Further Readings",id:"further-readings-846",level:3},{value:"Minimum Time to Make Rope Colorful",id:"minimum-time-to-make-rope-colorful",level:2},{value:"Inputs",id:"inputs-847",level:3},{value:"Sub-problems",id:"sub-problems-847",level:3},{value:"Edge Cases",id:"edge-cases-847",level:3},{value:"Further Readings",id:"further-readings-847",level:3},{value:"Put Boxes Into the Warehouse II",id:"put-boxes-into-the-warehouse-ii",level:2},{value:"Inputs",id:"inputs-848",level:3},{value:"Sub-problems",id:"sub-problems-848",level:3},{value:"Edge Cases",id:"edge-cases-848",level:3},{value:"Further Readings",id:"further-readings-848",level:3},{value:"Count Unhappy Friends",id:"count-unhappy-friends",level:2},{value:"Inputs",id:"inputs-849",level:3},{value:"Sub-problems",id:"sub-problems-849",level:3},{value:"Edge Cases",id:"edge-cases-849",level:3},{value:"Further Readings",id:"further-readings-849",level:3},{value:"Min Cost to Connect All Points",id:"min-cost-to-connect-all-points",level:2},{value:"Inputs",id:"inputs-850",level:3},{value:"Sub-problems",id:"sub-problems-850",level:3},{value:"Edge Cases",id:"edge-cases-850",level:3},{value:"Further Readings",id:"further-readings-850",level:3},{value:"Binary Search Tree Iterator II",id:"binary-search-tree-iterator-ii",level:2},{value:"Inputs",id:"inputs-851",level:3},{value:"Sub-problems",id:"sub-problems-851",level:3},{value:"Edge Cases",id:"edge-cases-851",level:3},{value:"Further Readings",id:"further-readings-851",level:3},{value:"Maximum Sum Obtained of Any Permutation",id:"maximum-sum-obtained-of-any-permutation",level:2},{value:"Inputs",id:"inputs-852",level:3},{value:"Sub-problems",id:"sub-problems-852",level:3},{value:"Edge Cases",id:"edge-cases-852",level:3},{value:"Further Readings",id:"further-readings-852",level:3},{value:"Make Sum Divisible by P",id:"make-sum-divisible-by-p",level:2},{value:"Inputs",id:"inputs-853",level:3},{value:"Sub-problems",id:"sub-problems-853",level:3},{value:"Edge Cases",id:"edge-cases-853",level:3},{value:"Further Readings",id:"further-readings-853",level:3},{value:"Split a String Into the Max Number of Unique Substrings",id:"split-a-string-into-the-max-number-of-unique-substrings",level:2},{value:"Inputs",id:"inputs-854",level:3},{value:"Sub-problems",id:"sub-problems-854",level:3},{value:"Edge Cases",id:"edge-cases-854",level:3},{value:"Further Readings",id:"further-readings-854",level:3},{value:"Maximum Non Negative Product in a Matrix",id:"maximum-non-negative-product-in-a-matrix",level:2},{value:"Inputs",id:"inputs-855",level:3},{value:"Sub-problems",id:"sub-problems-855",level:3},{value:"Edge Cases",id:"edge-cases-855",level:3},{value:"Further Readings",id:"further-readings-855",level:3},{value:"The Most Frequently Ordered Products for Each Customer",id:"the-most-frequently-ordered-products-for-each-customer",level:2},{value:"Inputs",id:"inputs-856",level:3},{value:"Sub-problems",id:"sub-problems-856",level:3},{value:"Edge Cases",id:"edge-cases-856",level:3},{value:"Further Readings",id:"further-readings-856",level:3},{value:"Maximum Profit of Operating a Centennial Wheel",id:"maximum-profit-of-operating-a-centennial-wheel",level:2},{value:"Inputs",id:"inputs-857",level:3},{value:"Sub-problems",id:"sub-problems-857",level:3},{value:"Edge Cases",id:"edge-cases-857",level:3},{value:"Further Readings",id:"further-readings-857",level:3},{value:"Throne Inheritance",id:"throne-inheritance",level:2},{value:"Inputs",id:"inputs-858",level:3},{value:"Sub-problems",id:"sub-problems-858",level:3},{value:"Edge Cases",id:"edge-cases-858",level:3},{value:"Further Readings",id:"further-readings-858",level:3},{value:"Find Nearest Right Node in Binary Tree",id:"find-nearest-right-node-in-binary-tree",level:2},{value:"Inputs",id:"inputs-859",level:3},{value:"Sub-problems",id:"sub-problems-859",level:3},{value:"Edge Cases",id:"edge-cases-859",level:3},{value:"Further Readings",id:"further-readings-859",level:3},{value:"Alert Using Same Key-Card Three or More Times in a One Hour Period",id:"alert-using-same-key-card-three-or-more-times-in-a-one-hour-period",level:2},{value:"Inputs",id:"inputs-860",level:3},{value:"Sub-problems",id:"sub-problems-860",level:3},{value:"Edge Cases",id:"edge-cases-860",level:3},{value:"Further Readings",id:"further-readings-860",level:3},{value:"Find Valid Matrix Given Row and Column Sums",id:"find-valid-matrix-given-row-and-column-sums",level:2},{value:"Inputs",id:"inputs-861",level:3},{value:"Sub-problems",id:"sub-problems-861",level:3},{value:"Edge Cases",id:"edge-cases-861",level:3},{value:"Further Readings",id:"further-readings-861",level:3},{value:"Even Odd Tree",id:"even-odd-tree",level:2},{value:"Inputs",id:"inputs-862",level:3},{value:"Sub-problems",id:"sub-problems-862",level:3},{value:"Edge Cases",id:"edge-cases-862",level:3},{value:"Further Readings",id:"further-readings-862",level:3},{value:"Check If Two Expression Trees are Equivalent",id:"check-if-two-expression-trees-are-equivalent",level:2},{value:"Inputs",id:"inputs-863",level:3},{value:"Sub-problems",id:"sub-problems-863",level:3},{value:"Edge Cases",id:"edge-cases-863",level:3},{value:"Further Readings",id:"further-readings-863",level:3},{value:"Find the Missing IDs",id:"find-the-missing-ids",level:2},{value:"Inputs",id:"inputs-864",level:3},{value:"Sub-problems",id:"sub-problems-864",level:3},{value:"Edge Cases",id:"edge-cases-864",level:3},{value:"Further Readings",id:"further-readings-864",level:3},{value:"Maximal Network Rank",id:"maximal-network-rank",level:2},{value:"Inputs",id:"inputs-865",level:3},{value:"Sub-problems",id:"sub-problems-865",level:3},{value:"Edge Cases",id:"edge-cases-865",level:3},{value:"Further Readings",id:"further-readings-865",level:3},{value:"Split Two Strings to Make Palindrome",id:"split-two-strings-to-make-palindrome",level:2},{value:"Inputs",id:"inputs-866",level:3},{value:"Sub-problems",id:"sub-problems-866",level:3},{value:"Edge Cases",id:"edge-cases-866",level:3},{value:"Further Readings",id:"further-readings-866",level:3},{value:"Maximum Font to Fit a Sentence in a Screen",id:"maximum-font-to-fit-a-sentence-in-a-screen",level:2},{value:"Inputs",id:"inputs-867",level:3},{value:"Sub-problems",id:"sub-problems-867",level:3},{value:"Edge Cases",id:"edge-cases-867",level:3},{value:"Further Readings",id:"further-readings-867",level:3},{value:"Coordinate With Maximum Network Quality",id:"coordinate-with-maximum-network-quality",level:2},{value:"Inputs",id:"inputs-868",level:3},{value:"Sub-problems",id:"sub-problems-868",level:3},{value:"Edge Cases",id:"edge-cases-868",level:3},{value:"Further Readings",id:"further-readings-868",level:3},{value:"Number of Sets of K Non-Overlapping Line Segments",id:"number-of-sets-of-k-non-overlapping-line-segments",level:2},{value:"Inputs",id:"inputs-869",level:3},{value:"Sub-problems",id:"sub-problems-869",level:3},{value:"Edge Cases",id:"edge-cases-869",level:3},{value:"Further Readings",id:"further-readings-869",level:3},{value:"Lexicographically Smallest String After Applying Operations",id:"lexicographically-smallest-string-after-applying-operations",level:2},{value:"Inputs",id:"inputs-870",level:3},{value:"Sub-problems",id:"sub-problems-870",level:3},{value:"Edge Cases",id:"edge-cases-870",level:3},{value:"Further Readings",id:"further-readings-870",level:3},{value:"Best Team With No Conflicts",id:"best-team-with-no-conflicts",level:2},{value:"Inputs",id:"inputs-871",level:3},{value:"Sub-problems",id:"sub-problems-871",level:3},{value:"Edge Cases",id:"edge-cases-871",level:3},{value:"Further Readings",id:"further-readings-871",level:3},{value:"Design an Expression Tree With Evaluate Function",id:"design-an-expression-tree-with-evaluate-function",level:2},{value:"Inputs",id:"inputs-872",level:3},{value:"Sub-problems",id:"sub-problems-872",level:3},{value:"Edge Cases",id:"edge-cases-872",level:3},{value:"Further Readings",id:"further-readings-872",level:3},{value:"Arithmetic Subarrays",id:"arithmetic-subarrays",level:2},{value:"Inputs",id:"inputs-873",level:3},{value:"Sub-problems",id:"sub-problems-873",level:3},{value:"Edge Cases",id:"edge-cases-873",level:3},{value:"Further Readings",id:"further-readings-873",level:3},{value:"Path With Minimum Effort",id:"path-with-minimum-effort",level:2},{value:"Inputs",id:"inputs-874",level:3},{value:"Sub-problems",id:"sub-problems-874",level:3},{value:"Edge Cases",id:"edge-cases-874",level:3},{value:"Further Readings",id:"further-readings-874",level:3},{value:"Add Two Polynomials Represented as Linked Lists",id:"add-two-polynomials-represented-as-linked-lists",level:2},{value:"Inputs",id:"inputs-875",level:3},{value:"Sub-problems",id:"sub-problems-875",level:3},{value:"Edge Cases",id:"edge-cases-875",level:3},{value:"Further Readings",id:"further-readings-875",level:3},{value:"Widest Vertical Area Between Two Points Containing No Points",id:"widest-vertical-area-between-two-points-containing-no-points",level:2},{value:"Inputs",id:"inputs-876",level:3},{value:"Sub-problems",id:"sub-problems-876",level:3},{value:"Edge Cases",id:"edge-cases-876",level:3},{value:"Further Readings",id:"further-readings-876",level:3},{value:"Count Substrings That Differ by One Character",id:"count-substrings-that-differ-by-one-character",level:2},{value:"Inputs",id:"inputs-877",level:3},{value:"Sub-problems",id:"sub-problems-877",level:3},{value:"Edge Cases",id:"edge-cases-877",level:3},{value:"Further Readings",id:"further-readings-877",level:3},{value:"Count Sorted Vowel Strings",id:"count-sorted-vowel-strings",level:2},{value:"Inputs",id:"inputs-878",level:3},{value:"Sub-problems",id:"sub-problems-878",level:3},{value:"Edge Cases",id:"edge-cases-878",level:3},{value:"Further Readings",id:"further-readings-878",level:3},{value:"Furthest Building You Can Reach",id:"furthest-building-you-can-reach",level:2},{value:"Inputs",id:"inputs-879",level:3},{value:"Sub-problems",id:"sub-problems-879",level:3},{value:"Edge Cases",id:"edge-cases-879",level:3},{value:"Further Readings",id:"further-readings-879",level:3},{value:"Lowest Common Ancestor of a Binary Tree II",id:"lowest-common-ancestor-of-a-binary-tree-ii",level:2},{value:"Inputs",id:"inputs-880",level:3},{value:"Sub-problems",id:"sub-problems-880",level:3},{value:"Edge Cases",id:"edge-cases-880",level:3},{value:"Further Readings",id:"further-readings-880",level:3},{value:"Minimum Deletions to Make Character Frequencies Unique",id:"minimum-deletions-to-make-character-frequencies-unique",level:2},{value:"Inputs",id:"inputs-881",level:3},{value:"Sub-problems",id:"sub-problems-881",level:3},{value:"Edge Cases",id:"edge-cases-881",level:3},{value:"Further Readings",id:"further-readings-881",level:3},{value:"Sell Diminishing-Valued Colored Balls",id:"sell-diminishing-valued-colored-balls",level:2},{value:"Inputs",id:"inputs-882",level:3},{value:"Sub-problems",id:"sub-problems-882",level:3},{value:"Edge Cases",id:"edge-cases-882",level:3},{value:"Further Readings",id:"further-readings-882",level:3},{value:"Lowest Common Ancestor of a Binary Tree III",id:"lowest-common-ancestor-of-a-binary-tree-iii",level:2},{value:"Inputs",id:"inputs-883",level:3},{value:"Sub-problems",id:"sub-problems-883",level:3},{value:"Edge Cases",id:"edge-cases-883",level:3},{value:"Further Readings",id:"further-readings-883",level:3},{value:"Minimum Deletions to Make String Balanced",id:"minimum-deletions-to-make-string-balanced",level:2},{value:"Inputs",id:"inputs-884",level:3},{value:"Sub-problems",id:"sub-problems-884",level:3},{value:"Edge Cases",id:"edge-cases-884",level:3},{value:"Further Readings",id:"further-readings-884",level:3},{value:"Minimum Jumps to Reach Home",id:"minimum-jumps-to-reach-home",level:2},{value:"Inputs",id:"inputs-885",level:3},{value:"Sub-problems",id:"sub-problems-885",level:3},{value:"Edge Cases",id:"edge-cases-885",level:3},{value:"Further Readings",id:"further-readings-885",level:3},{value:"Determine if Two Strings Are Close",id:"determine-if-two-strings-are-close",level:2},{value:"Inputs",id:"inputs-886",level:3},{value:"Sub-problems",id:"sub-problems-886",level:3},{value:"Edge Cases",id:"edge-cases-886",level:3},{value:"Further Readings",id:"further-readings-886",level:3},{value:"Minimum Operations to Reduce X to Zero",id:"minimum-operations-to-reduce-x-to-zero",level:2},{value:"Inputs",id:"inputs-887",level:3},{value:"Sub-problems",id:"sub-problems-887",level:3},{value:"Edge Cases",id:"edge-cases-887",level:3},{value:"Further Readings",id:"further-readings-887",level:3},{value:"Correct a Binary Tree",id:"correct-a-binary-tree",level:2},{value:"Inputs",id:"inputs-888",level:3},{value:"Sub-problems",id:"sub-problems-888",level:3},{value:"Edge Cases",id:"edge-cases-888",level:3},{value:"Further Readings",id:"further-readings-888",level:3},{value:"Smallest String With A Given Numeric Value",id:"smallest-string-with-a-given-numeric-value",level:2},{value:"Inputs",id:"inputs-889",level:3},{value:"Sub-problems",id:"sub-problems-889",level:3},{value:"Edge Cases",id:"edge-cases-889",level:3},{value:"Further Readings",id:"further-readings-889",level:3},{value:"Ways to Make a Fair Array",id:"ways-to-make-a-fair-array",level:2},{value:"Inputs",id:"inputs-890",level:3},{value:"Sub-problems",id:"sub-problems-890",level:3},{value:"Edge Cases",id:"edge-cases-890",level:3},{value:"Further Readings",id:"further-readings-890",level:3},{value:"Change the Root of a Binary Tree",id:"change-the-root-of-a-binary-tree",level:2},{value:"Inputs",id:"inputs-891",level:3},{value:"Sub-problems",id:"sub-problems-891",level:3},{value:"Edge Cases",id:"edge-cases-891",level:3},{value:"Further Readings",id:"further-readings-891",level:3},{value:"Merge In Between Linked Lists",id:"merge-in-between-linked-lists",level:2},{value:"Inputs",id:"inputs-892",level:3},{value:"Sub-problems",id:"sub-problems-892",level:3},{value:"Edge Cases",id:"edge-cases-892",level:3},{value:"Further Readings",id:"further-readings-892",level:3},{value:"Design Front Middle Back Queue",id:"design-front-middle-back-queue",level:2},{value:"Inputs",id:"inputs-893",level:3},{value:"Sub-problems",id:"sub-problems-893",level:3},{value:"Edge Cases",id:"edge-cases-893",level:3},{value:"Further Readings",id:"further-readings-893",level:3},{value:"Find the Most Competitive Subsequence",id:"find-the-most-competitive-subsequence",level:2},{value:"Inputs",id:"inputs-894",level:3},{value:"Sub-problems",id:"sub-problems-894",level:3},{value:"Edge Cases",id:"edge-cases-894",level:3},{value:"Further Readings",id:"further-readings-894",level:3},{value:"Minimum Moves to Make Array Complementary",id:"minimum-moves-to-make-array-complementary",level:2},{value:"Inputs",id:"inputs-895",level:3},{value:"Sub-problems",id:"sub-problems-895",level:3},{value:"Edge Cases",id:"edge-cases-895",level:3},{value:"Further Readings",id:"further-readings-895",level:3},{value:"Lowest Common Ancestor of a Binary Tree IV",id:"lowest-common-ancestor-of-a-binary-tree-iv",level:2},{value:"Inputs",id:"inputs-896",level:3},{value:"Sub-problems",id:"sub-problems-896",level:3},{value:"Edge Cases",id:"edge-cases-896",level:3},{value:"Further Readings",id:"further-readings-896",level:3},{value:"Max Number of K-Sum Pairs",id:"max-number-of-k-sum-pairs",level:2},{value:"Inputs",id:"inputs-897",level:3},{value:"Sub-problems",id:"sub-problems-897",level:3},{value:"Edge Cases",id:"edge-cases-897",level:3},{value:"Further Readings",id:"further-readings-897",level:3},{value:"Concatenation of Consecutive Binary Numbers",id:"concatenation-of-consecutive-binary-numbers",level:2},{value:"Inputs",id:"inputs-898",level:3},{value:"Sub-problems",id:"sub-problems-898",level:3},{value:"Edge Cases",id:"edge-cases-898",level:3},{value:"Further Readings",id:"further-readings-898",level:3},{value:"Longest Palindromic Subsequence II",id:"longest-palindromic-subsequence-ii",level:2},{value:"Inputs",id:"inputs-899",level:3},{value:"Sub-problems",id:"sub-problems-899",level:3},{value:"Edge Cases",id:"edge-cases-899",level:3},{value:"Further Readings",id:"further-readings-899",level:3},{value:"Sum of Absolute Differences in a Sorted Array",id:"sum-of-absolute-differences-in-a-sorted-array",level:2},{value:"Inputs",id:"inputs-900",level:3},{value:"Sub-problems",id:"sub-problems-900",level:3},{value:"Edge Cases",id:"edge-cases-900",level:3},{value:"Further Readings",id:"further-readings-900",level:3},{value:"Stone Game VI",id:"stone-game-vi",level:2},{value:"Inputs",id:"inputs-901",level:3},{value:"Sub-problems",id:"sub-problems-901",level:3},{value:"Edge Cases",id:"edge-cases-901",level:3},{value:"Further Readings",id:"further-readings-901",level:3},{value:"Partitioning Into Minimum Number Of Deci-Binary Numbers",id:"partitioning-into-minimum-number-of-deci-binary-numbers",level:2},{value:"Inputs",id:"inputs-902",level:3},{value:"Sub-problems",id:"sub-problems-902",level:3},{value:"Edge Cases",id:"edge-cases-902",level:3},{value:"Further Readings",id:"further-readings-902",level:3},{value:"Stone Game VII",id:"stone-game-vii",level:2},{value:"Inputs",id:"inputs-903",level:3},{value:"Sub-problems",id:"sub-problems-903",level:3},{value:"Edge Cases",id:"edge-cases-903",level:3},{value:"Further Readings",id:"further-readings-903",level:3},{value:"Maximum Erasure Value",id:"maximum-erasure-value",level:2},{value:"Inputs",id:"inputs-904",level:3},{value:"Sub-problems",id:"sub-problems-904",level:3},{value:"Edge Cases",id:"edge-cases-904",level:3},{value:"Further Readings",id:"further-readings-904",level:3},{value:"Jump Game VI",id:"jump-game-vi",level:2},{value:"Inputs",id:"inputs-905",level:3},{value:"Sub-problems",id:"sub-problems-905",level:3},{value:"Edge Cases",id:"edge-cases-905",level:3},{value:"Further Readings",id:"further-readings-905",level:3},{value:"Number of Distinct Substrings in a String",id:"number-of-distinct-substrings-in-a-string",level:2},{value:"Inputs",id:"inputs-906",level:3},{value:"Sub-problems",id:"sub-problems-906",level:3},{value:"Edge Cases",id:"edge-cases-906",level:3},{value:"Further Readings",id:"further-readings-906",level:3},{value:"Number of Calls Between Two Persons",id:"number-of-calls-between-two-persons",level:2},{value:"Inputs",id:"inputs-907",level:3},{value:"Sub-problems",id:"sub-problems-907",level:3},{value:"Edge Cases",id:"edge-cases-907",level:3},{value:"Further Readings",id:"further-readings-907",level:3},{value:"Average Waiting Time",id:"average-waiting-time",level:2},{value:"Inputs",id:"inputs-908",level:3},{value:"Sub-problems",id:"sub-problems-908",level:3},{value:"Edge Cases",id:"edge-cases-908",level:3},{value:"Further Readings",id:"further-readings-908",level:3},{value:"Maximum Binary String After Change",id:"maximum-binary-string-after-change",level:2},{value:"Inputs",id:"inputs-909",level:3},{value:"Sub-problems",id:"sub-problems-909",level:3},{value:"Edge Cases",id:"edge-cases-909",level:3},{value:"Further Readings",id:"further-readings-909",level:3},{value:"Maximum Number of Eaten Apples",id:"maximum-number-of-eaten-apples",level:2},{value:"Inputs",id:"inputs-910",level:3},{value:"Sub-problems",id:"sub-problems-910",level:3},{value:"Edge Cases",id:"edge-cases-910",level:3},{value:"Further Readings",id:"further-readings-910",level:3},{value:"Where Will the Ball Fall",id:"where-will-the-ball-fall",level:2},{value:"Inputs",id:"inputs-911",level:3},{value:"Sub-problems",id:"sub-problems-911",level:3},{value:"Edge Cases",id:"edge-cases-911",level:3},{value:"Further Readings",id:"further-readings-911",level:3},{value:"Biggest Window Between Visits",id:"biggest-window-between-visits",level:2},{value:"Inputs",id:"inputs-912",level:3},{value:"Sub-problems",id:"sub-problems-912",level:3},{value:"Edge Cases",id:"edge-cases-912",level:3},{value:"Further Readings",id:"further-readings-912",level:3},{value:"Count Good Meals",id:"count-good-meals",level:2},{value:"Inputs",id:"inputs-913",level:3},{value:"Sub-problems",id:"sub-problems-913",level:3},{value:"Edge Cases",id:"edge-cases-913",level:3},{value:"Further Readings",id:"further-readings-913",level:3},{value:"Ways to Split Array Into Three Subarrays",id:"ways-to-split-array-into-three-subarrays",level:2},{value:"Inputs",id:"inputs-914",level:3},{value:"Sub-problems",id:"sub-problems-914",level:3},{value:"Edge Cases",id:"edge-cases-914",level:3},{value:"Further Readings",id:"further-readings-914",level:3},{value:"Count Apples and Oranges",id:"count-apples-and-oranges",level:2},{value:"Inputs",id:"inputs-915",level:3},{value:"Sub-problems",id:"sub-problems-915",level:3},{value:"Edge Cases",id:"edge-cases-915",level:3},{value:"Further Readings",id:"further-readings-915",level:3},{value:"Maximum Score From Removing Substrings",id:"maximum-score-from-removing-substrings",level:2},{value:"Inputs",id:"inputs-916",level:3},{value:"Sub-problems",id:"sub-problems-916",level:3},{value:"Edge Cases",id:"edge-cases-916",level:3},{value:"Further Readings",id:"further-readings-916",level:3},{value:"Construct the Lexicographically Largest Valid Sequence",id:"construct-the-lexicographically-largest-valid-sequence",level:2},{value:"Inputs",id:"inputs-917",level:3},{value:"Sub-problems",id:"sub-problems-917",level:3},{value:"Edge Cases",id:"edge-cases-917",level:3},{value:"Further Readings",id:"further-readings-917",level:3},{value:"Swapping Nodes in a Linked List",id:"swapping-nodes-in-a-linked-list",level:2},{value:"Inputs",id:"inputs-918",level:3},{value:"Sub-problems",id:"sub-problems-918",level:3},{value:"Edge Cases",id:"edge-cases-918",level:3},{value:"Further Readings",id:"further-readings-918",level:3},{value:"Minimize Hamming Distance After Swap Operations",id:"minimize-hamming-distance-after-swap-operations",level:2},{value:"Inputs",id:"inputs-919",level:3},{value:"Sub-problems",id:"sub-problems-919",level:3},{value:"Edge Cases",id:"edge-cases-919",level:3},{value:"Further Readings",id:"further-readings-919",level:3},{value:"Tuple with Same Product",id:"tuple-with-same-product",level:2},{value:"Inputs",id:"inputs-920",level:3},{value:"Sub-problems",id:"sub-problems-920",level:3},{value:"Edge Cases",id:"edge-cases-920",level:3},{value:"Further Readings",id:"further-readings-920",level:3},{value:"Largest Submatrix With Rearrangements",id:"largest-submatrix-with-rearrangements",level:2},{value:"Inputs",id:"inputs-921",level:3},{value:"Sub-problems",id:"sub-problems-921",level:3},{value:"Edge Cases",id:"edge-cases-921",level:3},{value:"Further Readings",id:"further-readings-921",level:3},{value:"Shortest Path to Get Food",id:"shortest-path-to-get-food",level:2},{value:"Inputs",id:"inputs-922",level:3},{value:"Sub-problems",id:"sub-problems-922",level:3},{value:"Edge Cases",id:"edge-cases-922",level:3},{value:"Further Readings",id:"further-readings-922",level:3},{value:"Minimum Number of People to Teach",id:"minimum-number-of-people-to-teach",level:2},{value:"Inputs",id:"inputs-923",level:3},{value:"Sub-problems",id:"sub-problems-923",level:3},{value:"Edge Cases",id:"edge-cases-923",level:3},{value:"Further Readings",id:"further-readings-923",level:3},{value:"Decode XORed Permutation",id:"decode-xored-permutation",level:2},{value:"Inputs",id:"inputs-924",level:3},{value:"Sub-problems",id:"sub-problems-924",level:3},{value:"Edge Cases",id:"edge-cases-924",level:3},{value:"Further Readings",id:"further-readings-924",level:3},{value:"Change Minimum Characters to Satisfy One of Three Conditions",id:"change-minimum-characters-to-satisfy-one-of-three-conditions",level:2},{value:"Inputs",id:"inputs-925",level:3},{value:"Sub-problems",id:"sub-problems-925",level:3},{value:"Edge Cases",id:"edge-cases-925",level:3},{value:"Further Readings",id:"further-readings-925",level:3},{value:"Find Kth Largest XOR Coordinate Value",id:"find-kth-largest-xor-coordinate-value",level:2},{value:"Inputs",id:"inputs-926",level:3},{value:"Sub-problems",id:"sub-problems-926",level:3},{value:"Edge Cases",id:"edge-cases-926",level:3},{value:"Further Readings",id:"further-readings-926",level:3},{value:"Find Distance in a Binary Tree",id:"find-distance-in-a-binary-tree",level:2},{value:"Inputs",id:"inputs-927",level:3},{value:"Sub-problems",id:"sub-problems-927",level:3},{value:"Edge Cases",id:"edge-cases-927",level:3},{value:"Further Readings",id:"further-readings-927",level:3},{value:"Restore the Array From Adjacent Pairs",id:"restore-the-array-from-adjacent-pairs",level:2},{value:"Inputs",id:"inputs-928",level:3},{value:"Sub-problems",id:"sub-problems-928",level:3},{value:"Edge Cases",id:"edge-cases-928",level:3},{value:"Further Readings",id:"further-readings-928",level:3},{value:"Can You Eat Your Favorite Candy on Your Favorite Day?",id:"can-you-eat-your-favorite-candy-on-your-favorite-day",level:2},{value:"Inputs",id:"inputs-929",level:3},{value:"Sub-problems",id:"sub-problems-929",level:3},{value:"Edge Cases",id:"edge-cases-929",level:3},{value:"Further Readings",id:"further-readings-929",level:3},{value:"Maximum Subarray Sum After One Operation",id:"maximum-subarray-sum-after-one-operation",level:2},{value:"Inputs",id:"inputs-930",level:3},{value:"Sub-problems",id:"sub-problems-930",level:3},{value:"Edge Cases",id:"edge-cases-930",level:3},{value:"Further Readings",id:"further-readings-930",level:3},{value:"Leetflex Banned Accounts",id:"leetflex-banned-accounts",level:2},{value:"Inputs",id:"inputs-931",level:3},{value:"Sub-problems",id:"sub-problems-931",level:3},{value:"Edge Cases",id:"edge-cases-931",level:3},{value:"Further Readings",id:"further-readings-931",level:3},{value:"Maximum Absolute Sum of Any Subarray",id:"maximum-absolute-sum-of-any-subarray",level:2},{value:"Inputs",id:"inputs-932",level:3},{value:"Sub-problems",id:"sub-problems-932",level:3},{value:"Edge Cases",id:"edge-cases-932",level:3},{value:"Further Readings",id:"further-readings-932",level:3},{value:"Minimum Length of String After Deleting Similar Ends",id:"minimum-length-of-string-after-deleting-similar-ends",level:2},{value:"Inputs",id:"inputs-933",level:3},{value:"Sub-problems",id:"sub-problems-933",level:3},{value:"Edge Cases",id:"edge-cases-933",level:3},{value:"Further Readings",id:"further-readings-933",level:3},{value:"Maximum Score From Removing Stones",id:"maximum-score-from-removing-stones",level:2},{value:"Inputs",id:"inputs-934",level:3},{value:"Sub-problems",id:"sub-problems-934",level:3},{value:"Edge Cases",id:"edge-cases-934",level:3},{value:"Further Readings",id:"further-readings-934",level:3},{value:"Largest Merge Of Two Strings",id:"largest-merge-of-two-strings",level:2},{value:"Inputs",id:"inputs-935",level:3},{value:"Sub-problems",id:"sub-problems-935",level:3},{value:"Edge Cases",id:"edge-cases-935",level:3},{value:"Further Readings",id:"further-readings-935",level:3},{value:"Design Most Recently Used Queue",id:"design-most-recently-used-queue",level:2},{value:"Inputs",id:"inputs-936",level:3},{value:"Sub-problems",id:"sub-problems-936",level:3},{value:"Edge Cases",id:"edge-cases-936",level:3},{value:"Further Readings",id:"further-readings-936",level:3},{value:"Count Number of Homogenous Substrings",id:"count-number-of-homogenous-substrings",level:2},{value:"Inputs",id:"inputs-937",level:3},{value:"Sub-problems",id:"sub-problems-937",level:3},{value:"Edge Cases",id:"edge-cases-937",level:3},{value:"Further Readings",id:"further-readings-937",level:3},{value:"Minimum Limit of Balls in a Bag",id:"minimum-limit-of-balls-in-a-bag",level:2},{value:"Inputs",id:"inputs-938",level:3},{value:"Sub-problems",id:"sub-problems-938",level:3},{value:"Edge Cases",id:"edge-cases-938",level:3},{value:"Further Readings",id:"further-readings-938",level:3},{value:"Buildings With an Ocean View",id:"buildings-with-an-ocean-view",level:2},{value:"Inputs",id:"inputs-939",level:3},{value:"Sub-problems",id:"sub-problems-939",level:3},{value:"Edge Cases",id:"edge-cases-939",level:3},{value:"Further Readings",id:"further-readings-939",level:3},{value:"Form Array by Concatenating Subarrays of Another Array",id:"form-array-by-concatenating-subarrays-of-another-array",level:2},{value:"Inputs",id:"inputs-940",level:3},{value:"Sub-problems",id:"sub-problems-940",level:3},{value:"Edge Cases",id:"edge-cases-940",level:3},{value:"Further Readings",id:"further-readings-940",level:3},{value:"Map of Highest Peak",id:"map-of-highest-peak",level:2},{value:"Inputs",id:"inputs-941",level:3},{value:"Sub-problems",id:"sub-problems-941",level:3},{value:"Edge Cases",id:"edge-cases-941",level:3},{value:"Further Readings",id:"further-readings-941",level:3},{value:"Minimum Number of Operations to Move All Balls to Each Box",id:"minimum-number-of-operations-to-move-all-balls-to-each-box",level:2},{value:"Inputs",id:"inputs-942",level:3},{value:"Sub-problems",id:"sub-problems-942",level:3},{value:"Edge Cases",id:"edge-cases-942",level:3},{value:"Further Readings",id:"further-readings-942",level:3},{value:"Maximum Score from Performing Multiplication Operations",id:"maximum-score-from-performing-multiplication-operations",level:2},{value:"Inputs",id:"inputs-943",level:3},{value:"Sub-problems",id:"sub-problems-943",level:3},{value:"Edge Cases",id:"edge-cases-943",level:3},{value:"Further Readings",id:"further-readings-943",level:3},{value:"Sort Features by Popularity",id:"sort-features-by-popularity",level:2},{value:"Inputs",id:"inputs-944",level:3},{value:"Sub-problems",id:"sub-problems-944",level:3},{value:"Edge Cases",id:"edge-cases-944",level:3},{value:"Further Readings",id:"further-readings-944",level:3},{value:"Closest Dessert Cost",id:"closest-dessert-cost",level:2},{value:"Inputs",id:"inputs-945",level:3},{value:"Sub-problems",id:"sub-problems-945",level:3},{value:"Edge Cases",id:"edge-cases-945",level:3},{value:"Further Readings",id:"further-readings-945",level:3},{value:"Equal Sum Arrays With Minimum Number of Operations",id:"equal-sum-arrays-with-minimum-number-of-operations",level:2},{value:"Inputs",id:"inputs-946",level:3},{value:"Sub-problems",id:"sub-problems-946",level:3},{value:"Edge Cases",id:"edge-cases-946",level:3},{value:"Further Readings",id:"further-readings-946",level:3},{value:"Shortest Path in a Hidden Grid",id:"shortest-path-in-a-hidden-grid",level:2},{value:"Inputs",id:"inputs-947",level:3},{value:"Sub-problems",id:"sub-problems-947",level:3},{value:"Edge Cases",id:"edge-cases-947",level:3},{value:"Further Readings",id:"further-readings-947",level:3},{value:"Check if Number is a Sum of Powers of Three",id:"check-if-number-is-a-sum-of-powers-of-three",level:2},{value:"Inputs",id:"inputs-948",level:3},{value:"Sub-problems",id:"sub-problems-948",level:3},{value:"Edge Cases",id:"edge-cases-948",level:3},{value:"Further Readings",id:"further-readings-948",level:3},{value:"Sum of Beauty of All Substrings",id:"sum-of-beauty-of-all-substrings",level:2},{value:"Inputs",id:"inputs-949",level:3},{value:"Sub-problems",id:"sub-problems-949",level:3},{value:"Edge Cases",id:"edge-cases-949",level:3},{value:"Further Readings",id:"further-readings-949",level:3},{value:"Grand Slam Titles",id:"grand-slam-titles",level:2},{value:"Inputs",id:"inputs-950",level:3},{value:"Sub-problems",id:"sub-problems-950",level:3},{value:"Edge Cases",id:"edge-cases-950",level:3},{value:"Further Readings",id:"further-readings-950",level:3},{value:"Minimum Elements to Add to Form a Given Sum",id:"minimum-elements-to-add-to-form-a-given-sum",level:2},{value:"Inputs",id:"inputs-951",level:3},{value:"Sub-problems",id:"sub-problems-951",level:3},{value:"Edge Cases",id:"edge-cases-951",level:3},{value:"Further Readings",id:"further-readings-951",level:3},{value:"Number of Restricted Paths From First to Last Node",id:"number-of-restricted-paths-from-first-to-last-node",level:2},{value:"Inputs",id:"inputs-952",level:3},{value:"Sub-problems",id:"sub-problems-952",level:3},{value:"Edge Cases",id:"edge-cases-952",level:3},{value:"Further Readings",id:"further-readings-952",level:3},{value:"Maximum Average Pass Ratio",id:"maximum-average-pass-ratio",level:2},{value:"Inputs",id:"inputs-953",level:3},{value:"Sub-problems",id:"sub-problems-953",level:3},{value:"Edge Cases",id:"edge-cases-953",level:3},{value:"Further Readings",id:"further-readings-953",level:3},{value:"Count Pairs of Equal Substrings With Minimum Difference",id:"count-pairs-of-equal-substrings-with-minimum-difference",level:2},{value:"Inputs",id:"inputs-954",level:3},{value:"Sub-problems",id:"sub-problems-954",level:3},{value:"Edge Cases",id:"edge-cases-954",level:3},{value:"Further Readings",id:"further-readings-954",level:3},{value:"Design Authentication Manager",id:"design-authentication-manager",level:2},{value:"Inputs",id:"inputs-955",level:3},{value:"Sub-problems",id:"sub-problems-955",level:3},{value:"Edge Cases",id:"edge-cases-955",level:3},{value:"Further Readings",id:"further-readings-955",level:3},{value:"Maximum Number of Consecutive Values You Can Make",id:"maximum-number-of-consecutive-values-you-can-make",level:2},{value:"Inputs",id:"inputs-956",level:3},{value:"Sub-problems",id:"sub-problems-956",level:3},{value:"Edge Cases",id:"edge-cases-956",level:3},{value:"Further Readings",id:"further-readings-956",level:3},{value:"Number of Orders in the Backlog",id:"number-of-orders-in-the-backlog",level:2},{value:"Inputs",id:"inputs-957",level:3},{value:"Sub-problems",id:"sub-problems-957",level:3},{value:"Edge Cases",id:"edge-cases-957",level:3},{value:"Further Readings",id:"further-readings-957",level:3},{value:"Maximum Value at a Given Index in a Bounded Array",id:"maximum-value-at-a-given-index-in-a-bounded-array",level:2},{value:"Inputs",id:"inputs-958",level:3},{value:"Sub-problems",id:"sub-problems-958",level:3},{value:"Edge Cases",id:"edge-cases-958",level:3},{value:"Further Readings",id:"further-readings-958",level:3},{value:"Implement Trie II (Prefix Tree)",id:"implement-trie-ii-prefix-tree",level:2},{value:"Inputs",id:"inputs-959",level:3},{value:"Sub-problems",id:"sub-problems-959",level:3},{value:"Edge Cases",id:"edge-cases-959",level:3},{value:"Further Readings",id:"further-readings-959",level:3},{value:"Minimum Number of Operations to Reinitialize a Permutation",id:"minimum-number-of-operations-to-reinitialize-a-permutation",level:2},{value:"Inputs",id:"inputs-960",level:3},{value:"Sub-problems",id:"sub-problems-960",level:3},{value:"Edge Cases",id:"edge-cases-960",level:3},{value:"Further Readings",id:"further-readings-960",level:3},{value:"Evaluate the Bracket Pairs of a String",id:"evaluate-the-bracket-pairs-of-a-string",level:2},{value:"Inputs",id:"inputs-961",level:3},{value:"Sub-problems",id:"sub-problems-961",level:3},{value:"Edge Cases",id:"edge-cases-961",level:3},{value:"Further Readings",id:"further-readings-961",level:3},{value:"Minimum Path Cost in a Hidden Grid",id:"minimum-path-cost-in-a-hidden-grid",level:2},{value:"Inputs",id:"inputs-962",level:3},{value:"Sub-problems",id:"sub-problems-962",level:3},{value:"Edge Cases",id:"edge-cases-962",level:3},{value:"Further Readings",id:"further-readings-962",level:3},{value:"Find Interview Candidates",id:"find-interview-candidates",level:2},{value:"Inputs",id:"inputs-963",level:3},{value:"Sub-problems",id:"sub-problems-963",level:3},{value:"Edge Cases",id:"edge-cases-963",level:3},{value:"Further Readings",id:"further-readings-963",level:3},{value:"Sentence Similarity III",id:"sentence-similarity-iii",level:2},{value:"Inputs",id:"inputs-964",level:3},{value:"Sub-problems",id:"sub-problems-964",level:3},{value:"Edge Cases",id:"edge-cases-964",level:3},{value:"Further Readings",id:"further-readings-964",level:3},{value:"Count Nice Pairs in an Array",id:"count-nice-pairs-in-an-array",level:2},{value:"Inputs",id:"inputs-965",level:3},{value:"Sub-problems",id:"sub-problems-965",level:3},{value:"Edge Cases",id:"edge-cases-965",level:3},{value:"Further Readings",id:"further-readings-965",level:3},{value:"Finding the Users Active Minutes",id:"finding-the-users-active-minutes",level:2},{value:"Inputs",id:"inputs-966",level:3},{value:"Sub-problems",id:"sub-problems-966",level:3},{value:"Edge Cases",id:"edge-cases-966",level:3},{value:"Further Readings",id:"further-readings-966",level:3},{value:"Minimum Absolute Sum Difference",id:"minimum-absolute-sum-difference",level:2},{value:"Inputs",id:"inputs-967",level:3},{value:"Sub-problems",id:"sub-problems-967",level:3},{value:"Edge Cases",id:"edge-cases-967",level:3},{value:"Further Readings",id:"further-readings-967",level:3},{value:"Maximum Number of Accepted Invitations",id:"maximum-number-of-accepted-invitations",level:2},{value:"Inputs",id:"inputs-968",level:3},{value:"Sub-problems",id:"sub-problems-968",level:3},{value:"Edge Cases",id:"edge-cases-968",level:3},{value:"Further Readings",id:"further-readings-968",level:3},{value:"Find the Winner of the Circular Game",id:"find-the-winner-of-the-circular-game",level:2},{value:"Inputs",id:"inputs-969",level:3},{value:"Sub-problems",id:"sub-problems-969",level:3},{value:"Edge Cases",id:"edge-cases-969",level:3},{value:"Further Readings",id:"further-readings-969",level:3},{value:"Minimum Sideway Jumps",id:"minimum-sideway-jumps",level:2},{value:"Inputs",id:"inputs-970",level:3},{value:"Sub-problems",id:"sub-problems-970",level:3},{value:"Edge Cases",id:"edge-cases-970",level:3},{value:"Further Readings",id:"further-readings-970",level:3},{value:"Queries on Number of Points Inside a Circle",id:"queries-on-number-of-points-inside-a-circle",level:2},{value:"Inputs",id:"inputs-971",level:3},{value:"Sub-problems",id:"sub-problems-971",level:3},{value:"Edge Cases",id:"edge-cases-971",level:3},{value:"Further Readings",id:"further-readings-971",level:3},{value:"Maximum XOR for Each Query",id:"maximum-xor-for-each-query",level:2},{value:"Inputs",id:"inputs-972",level:3},{value:"Sub-problems",id:"sub-problems-972",level:3},{value:"Edge Cases",id:"edge-cases-972",level:3},{value:"Further Readings",id:"further-readings-972",level:3},{value:"Maximum Transaction Each Day",id:"maximum-transaction-each-day",level:2},{value:"Inputs",id:"inputs-973",level:3},{value:"Sub-problems",id:"sub-problems-973",level:3},{value:"Edge Cases",id:"edge-cases-973",level:3},{value:"Further Readings",id:"further-readings-973",level:3},{value:"Maximum Ice Cream Bars",id:"maximum-ice-cream-bars",level:2},{value:"Inputs",id:"inputs-974",level:3},{value:"Sub-problems",id:"sub-problems-974",level:3},{value:"Edge Cases",id:"edge-cases-974",level:3},{value:"Further Readings",id:"further-readings-974",level:3},{value:"Single-Threaded CPU",id:"single-threaded-cpu",level:2},{value:"Inputs",id:"inputs-975",level:3},{value:"Sub-problems",id:"sub-problems-975",level:3},{value:"Edge Cases",id:"edge-cases-975",level:3},{value:"Further Readings",id:"further-readings-975",level:3},{value:"Remove Duplicates From an Unsorted Linked List",id:"remove-duplicates-from-an-unsorted-linked-list",level:2},{value:"Inputs",id:"inputs-976",level:3},{value:"Sub-problems",id:"sub-problems-976",level:3},{value:"Edge Cases",id:"edge-cases-976",level:3},{value:"Further Readings",id:"further-readings-976",level:3},{value:"Frequency of the Most Frequent Element",id:"frequency-of-the-most-frequent-element",level:2},{value:"Inputs",id:"inputs-977",level:3},{value:"Sub-problems",id:"sub-problems-977",level:3},{value:"Edge Cases",id:"edge-cases-977",level:3},{value:"Further Readings",id:"further-readings-977",level:3},{value:"Longest Substring Of All Vowels in Order",id:"longest-substring-of-all-vowels-in-order",level:2},{value:"Inputs",id:"inputs-978",level:3},{value:"Sub-problems",id:"sub-problems-978",level:3},{value:"Edge Cases",id:"edge-cases-978",level:3},{value:"Further Readings",id:"further-readings-978",level:3},{value:"League Statistics",id:"league-statistics",level:2},{value:"Inputs",id:"inputs-979",level:3},{value:"Sub-problems",id:"sub-problems-979",level:3},{value:"Edge Cases",id:"edge-cases-979",level:3},{value:"Further Readings",id:"further-readings-979",level:3},{value:"Suspicious Bank Accounts",id:"suspicious-bank-accounts",level:2},{value:"Inputs",id:"inputs-980",level:3},{value:"Sub-problems",id:"sub-problems-980",level:3},{value:"Edge Cases",id:"edge-cases-980",level:3},{value:"Further Readings",id:"further-readings-980",level:3},{value:"Seat Reservation Manager",id:"seat-reservation-manager",level:2},{value:"Inputs",id:"inputs-981",level:3},{value:"Sub-problems",id:"sub-problems-981",level:3},{value:"Edge Cases",id:"edge-cases-981",level:3},{value:"Further Readings",id:"further-readings-981",level:3},{value:"Maximum Element After Decreasing and Rearranging",id:"maximum-element-after-decreasing-and-rearranging",level:2},{value:"Inputs",id:"inputs-982",level:3},{value:"Sub-problems",id:"sub-problems-982",level:3},{value:"Edge Cases",id:"edge-cases-982",level:3},{value:"Further Readings",id:"further-readings-982",level:3},{value:"Splitting a String Into Descending Consecutive Values",id:"splitting-a-string-into-descending-consecutive-values",level:2},{value:"Inputs",id:"inputs-983",level:3},{value:"Sub-problems",id:"sub-problems-983",level:3},{value:"Edge Cases",id:"edge-cases-983",level:3},{value:"Further Readings",id:"further-readings-983",level:3},{value:"Minimum Adjacent Swaps to Reach the Kth Smallest Number",id:"minimum-adjacent-swaps-to-reach-the-kth-smallest-number",level:2},{value:"Inputs",id:"inputs-984",level:3},{value:"Sub-problems",id:"sub-problems-984",level:3},{value:"Edge Cases",id:"edge-cases-984",level:3},{value:"Further Readings",id:"further-readings-984",level:3},{value:"Distinct Numbers in Each Subarray",id:"distinct-numbers-in-each-subarray",level:2},{value:"Inputs",id:"inputs-985",level:3},{value:"Sub-problems",id:"sub-problems-985",level:3},{value:"Edge Cases",id:"edge-cases-985",level:3},{value:"Further Readings",id:"further-readings-985",level:3},{value:"Maximum Distance Between a Pair of Values",id:"maximum-distance-between-a-pair-of-values",level:2},{value:"Inputs",id:"inputs-986",level:3},{value:"Sub-problems",id:"sub-problems-986",level:3},{value:"Edge Cases",id:"edge-cases-986",level:3},{value:"Further Readings",id:"further-readings-986",level:3},{value:"Maximum Subarray Min-Product",id:"maximum-subarray-min-product",level:2},{value:"Inputs",id:"inputs-987",level:3},{value:"Sub-problems",id:"sub-problems-987",level:3},{value:"Edge Cases",id:"edge-cases-987",level:3},{value:"Further Readings",id:"further-readings-987",level:3},{value:"Longest Word With All Prefixes",id:"longest-word-with-all-prefixes",level:2},{value:"Inputs",id:"inputs-988",level:3},{value:"Sub-problems",id:"sub-problems-988",level:3},{value:"Edge Cases",id:"edge-cases-988",level:3},{value:"Further Readings",id:"further-readings-988",level:3},{value:"Incremental Memory Leak",id:"incremental-memory-leak",level:2},{value:"Inputs",id:"inputs-989",level:3},{value:"Sub-problems",id:"sub-problems-989",level:3},{value:"Edge Cases",id:"edge-cases-989",level:3},{value:"Further Readings",id:"further-readings-989",level:3},{value:"Rotating the Box",id:"rotating-the-box",level:2},{value:"Inputs",id:"inputs-990",level:3},{value:"Sub-problems",id:"sub-problems-990",level:3},{value:"Edge Cases",id:"edge-cases-990",level:3},{value:"Further Readings",id:"further-readings-990",level:3},{value:"Minimum Number of Swaps to Make the Binary String Alternating",id:"minimum-number-of-swaps-to-make-the-binary-string-alternating",level:2},{value:"Inputs",id:"inputs-991",level:3},{value:"Sub-problems",id:"sub-problems-991",level:3},{value:"Edge Cases",id:"edge-cases-991",level:3},{value:"Further Readings",id:"further-readings-991",level:3},{value:"Finding Pairs With a Certain Sum",id:"finding-pairs-with-a-certain-sum",level:2},{value:"Inputs",id:"inputs-992",level:3},{value:"Sub-problems",id:"sub-problems-992",level:3},{value:"Edge Cases",id:"edge-cases-992",level:3},{value:"Further Readings",id:"further-readings-992",level:3},{value:"Orders With Maximum Quantity Above Average",id:"orders-with-maximum-quantity-above-average",level:2},{value:"Inputs",id:"inputs-993",level:3},{value:"Sub-problems",id:"sub-problems-993",level:3},{value:"Edge Cases",id:"edge-cases-993",level:3},{value:"Further Readings",id:"further-readings-993",level:3},{value:"Product of Two Run-Length Encoded Arrays",id:"product-of-two-run-length-encoded-arrays",level:2},{value:"Inputs",id:"inputs-994",level:3},{value:"Sub-problems",id:"sub-problems-994",level:3},{value:"Edge Cases",id:"edge-cases-994",level:3},{value:"Further Readings",id:"further-readings-994",level:3},{value:"Minimum Speed to Arrive on Time",id:"minimum-speed-to-arrive-on-time",level:2},{value:"Inputs",id:"inputs-995",level:3},{value:"Sub-problems",id:"sub-problems-995",level:3},{value:"Edge Cases",id:"edge-cases-995",level:3},{value:"Further Readings",id:"further-readings-995",level:3},{value:"Jump Game VII",id:"jump-game-vii",level:2},{value:"Inputs",id:"inputs-996",level:3},{value:"Sub-problems",id:"sub-problems-996",level:3},{value:"Edge Cases",id:"edge-cases-996",level:3},{value:"Further Readings",id:"further-readings-996",level:3},{value:"Minimize Product Sum of Two Arrays",id:"minimize-product-sum-of-two-arrays",level:2},{value:"Inputs",id:"inputs-997",level:3},{value:"Sub-problems",id:"sub-problems-997",level:3},{value:"Edge Cases",id:"edge-cases-997",level:3},{value:"Further Readings",id:"further-readings-997",level:3},{value:"Group Employees of the Same Salary",id:"group-employees-of-the-same-salary",level:2},{value:"Inputs",id:"inputs-998",level:3},{value:"Sub-problems",id:"sub-problems-998",level:3},{value:"Edge Cases",id:"edge-cases-998",level:3},{value:"Further Readings",id:"further-readings-998",level:3},{value:"Minimize Maximum Pair Sum in Array",id:"minimize-maximum-pair-sum-in-array",level:2},{value:"Inputs",id:"inputs-999",level:3},{value:"Sub-problems",id:"sub-problems-999",level:3},{value:"Edge Cases",id:"edge-cases-999",level:3},{value:"Further Readings",id:"further-readings-999",level:3},{value:"Get Biggest Three Rhombus Sums in a Grid",id:"get-biggest-three-rhombus-sums-in-a-grid",level:2},{value:"Inputs",id:"inputs-1000",level:3},{value:"Sub-problems",id:"sub-problems-1000",level:3},{value:"Edge Cases",id:"edge-cases-1000",level:3},{value:"Further Readings",id:"further-readings-1000",level:3},{value:"Maximum Value after Insertion",id:"maximum-value-after-insertion",level:2},{value:"Inputs",id:"inputs-1001",level:3},{value:"Sub-problems",id:"sub-problems-1001",level:3},{value:"Edge Cases",id:"edge-cases-1001",level:3},{value:"Further Readings",id:"further-readings-1001",level:3},{value:"Process Tasks Using Servers",id:"process-tasks-using-servers",level:2},{value:"Inputs",id:"inputs-1002",level:3},{value:"Sub-problems",id:"sub-problems-1002",level:3},{value:"Edge Cases",id:"edge-cases-1002",level:3},{value:"Further Readings",id:"further-readings-1002",level:3},{value:"Egg Drop With 2 Eggs and N Floors",id:"egg-drop-with-2-eggs-and-n-floors",level:2},{value:"Inputs",id:"inputs-1003",level:3},{value:"Sub-problems",id:"sub-problems-1003",level:3},{value:"Edge Cases",id:"edge-cases-1003",level:3},{value:"Further Readings",id:"further-readings-1003",level:3},{value:"Count Pairs in Two Arrays",id:"count-pairs-in-two-arrays",level:2},{value:"Inputs",id:"inputs-1004",level:3},{value:"Sub-problems",id:"sub-problems-1004",level:3},{value:"Edge Cases",id:"edge-cases-1004",level:3},{value:"Further Readings",id:"further-readings-1004",level:3},{value:"Reduction Operations to Make the Array Elements Equal",id:"reduction-operations-to-make-the-array-elements-equal",level:2},{value:"Inputs",id:"inputs-1005",level:3},{value:"Sub-problems",id:"sub-problems-1005",level:3},{value:"Edge Cases",id:"edge-cases-1005",level:3},{value:"Further Readings",id:"further-readings-1005",level:3},{value:"Minimum Number of Flips to Make the Binary String Alternating",id:"minimum-number-of-flips-to-make-the-binary-string-alternating",level:2},{value:"Inputs",id:"inputs-1006",level:3},{value:"Sub-problems",id:"sub-problems-1006",level:3},{value:"Edge Cases",id:"edge-cases-1006",level:3},{value:"Further Readings",id:"further-readings-1006",level:3},{value:"Cutting Ribbons",id:"cutting-ribbons",level:2},{value:"Inputs",id:"inputs-1007",level:3},{value:"Sub-problems",id:"sub-problems-1007",level:3},{value:"Edge Cases",id:"edge-cases-1007",level:3},{value:"Further Readings",id:"further-readings-1007",level:3},{value:"Find the Student that Will Replace the Chalk",id:"find-the-student-that-will-replace-the-chalk",level:2},{value:"Inputs",id:"inputs-1008",level:3},{value:"Sub-problems",id:"sub-problems-1008",level:3},{value:"Edge Cases",id:"edge-cases-1008",level:3},{value:"Further Readings",id:"further-readings-1008",level:3},{value:"Largest Magic Square",id:"largest-magic-square",level:2},{value:"Inputs",id:"inputs-1009",level:3},{value:"Sub-problems",id:"sub-problems-1009",level:3},{value:"Edge Cases",id:"edge-cases-1009",level:3},{value:"Further Readings",id:"further-readings-1009",level:3},{value:"Maximum Number of Removable Characters",id:"maximum-number-of-removable-characters",level:2},{value:"Inputs",id:"inputs-1010",level:3},{value:"Sub-problems",id:"sub-problems-1010",level:3},{value:"Edge Cases",id:"edge-cases-1010",level:3},{value:"Further Readings",id:"further-readings-1010",level:3},{value:"Merge Triplets to Form Target Triplet",id:"merge-triplets-to-form-target-triplet",level:2},{value:"Inputs",id:"inputs-1011",level:3},{value:"Sub-problems",id:"sub-problems-1011",level:3},{value:"Edge Cases",id:"edge-cases-1011",level:3},{value:"Further Readings",id:"further-readings-1011",level:3},{value:"Find a Peak Element II",id:"find-a-peak-element-ii",level:2},{value:"Inputs",id:"inputs-1012",level:3},{value:"Sub-problems",id:"sub-problems-1012",level:3},{value:"Edge Cases",id:"edge-cases-1012",level:3},{value:"Further Readings",id:"further-readings-1012",level:3},{value:"Depth of BST Given Insertion Order",id:"depth-of-bst-given-insertion-order",level:2},{value:"Inputs",id:"inputs-1013",level:3},{value:"Sub-problems",id:"sub-problems-1013",level:3},{value:"Edge Cases",id:"edge-cases-1013",level:3},{value:"Further Readings",id:"further-readings-1013",level:3},{value:"The Number of Full Rounds You Have Played",id:"the-number-of-full-rounds-you-have-played",level:2},{value:"Inputs",id:"inputs-1014",level:3},{value:"Sub-problems",id:"sub-problems-1014",level:3},{value:"Edge Cases",id:"edge-cases-1014",level:3},{value:"Further Readings",id:"further-readings-1014",level:3},{value:"Count Sub Islands",id:"count-sub-islands",level:2},{value:"Inputs",id:"inputs-1015",level:3},{value:"Sub-problems",id:"sub-problems-1015",level:3},{value:"Edge Cases",id:"edge-cases-1015",level:3},{value:"Further Readings",id:"further-readings-1015",level:3},{value:"Minimum Absolute Difference Queries",id:"minimum-absolute-difference-queries",level:2},{value:"Inputs",id:"inputs-1016",level:3},{value:"Sub-problems",id:"sub-problems-1016",level:3},{value:"Edge Cases",id:"edge-cases-1016",level:3},{value:"Further Readings",id:"further-readings-1016",level:3},{value:"Count Salary Categories",id:"count-salary-categories",level:2},{value:"Inputs",id:"inputs-1017",level:3},{value:"Sub-problems",id:"sub-problems-1017",level:3},{value:"Edge Cases",id:"edge-cases-1017",level:3},{value:"Further Readings",id:"further-readings-1017",level:3},{value:"Game of Nim",id:"game-of-nim",level:2},{value:"Inputs",id:"inputs-1018",level:3},{value:"Sub-problems",id:"sub-problems-1018",level:3},{value:"Edge Cases",id:"edge-cases-1018",level:3},{value:"Further Readings",id:"further-readings-1018",level:3},{value:"Remove All Occurrences of a Substring",id:"remove-all-occurrences-of-a-substring",level:2},{value:"Inputs",id:"inputs-1019",level:3},{value:"Sub-problems",id:"sub-problems-1019",level:3},{value:"Edge Cases",id:"edge-cases-1019",level:3},{value:"Further Readings",id:"further-readings-1019",level:3},{value:"Maximum Alternating Subsequence Sum",id:"maximum-alternating-subsequence-sum",level:2},{value:"Inputs",id:"inputs-1020",level:3},{value:"Sub-problems",id:"sub-problems-1020",level:3},{value:"Edge Cases",id:"edge-cases-1020",level:3},{value:"Further Readings",id:"further-readings-1020",level:3},{value:"Cyclically Rotating a Grid",id:"cyclically-rotating-a-grid",level:2},{value:"Inputs",id:"inputs-1021",level:3},{value:"Sub-problems",id:"sub-problems-1021",level:3},{value:"Edge Cases",id:"edge-cases-1021",level:3},{value:"Further Readings",id:"further-readings-1021",level:3},{value:"Number of Wonderful Substrings",id:"number-of-wonderful-substrings",level:2},{value:"Inputs",id:"inputs-1022",level:3},{value:"Sub-problems",id:"sub-problems-1022",level:3},{value:"Edge Cases",id:"edge-cases-1022",level:3},{value:"Further Readings",id:"further-readings-1022",level:3},{value:"Kth Smallest Subarray Sum",id:"kth-smallest-subarray-sum",level:2},{value:"Inputs",id:"inputs-1023",level:3},{value:"Sub-problems",id:"sub-problems-1023",level:3},{value:"Edge Cases",id:"edge-cases-1023",level:3},{value:"Further Readings",id:"further-readings-1023",level:3},{value:"Eliminate Maximum Number of Monsters",id:"eliminate-maximum-number-of-monsters",level:2},{value:"Inputs",id:"inputs-1024",level:3},{value:"Sub-problems",id:"sub-problems-1024",level:3},{value:"Edge Cases",id:"edge-cases-1024",level:3},{value:"Further Readings",id:"further-readings-1024",level:3},{value:"Count Good Numbers",id:"count-good-numbers",level:2},{value:"Inputs",id:"inputs-1025",level:3},{value:"Sub-problems",id:"sub-problems-1025",level:3},{value:"Edge Cases",id:"edge-cases-1025",level:3},{value:"Further Readings",id:"further-readings-1025",level:3},{value:"Nearest Exit from Entrance in Maze",id:"nearest-exit-from-entrance-in-maze",level:2},{value:"Inputs",id:"inputs-1026",level:3},{value:"Sub-problems",id:"sub-problems-1026",level:3},{value:"Edge Cases",id:"edge-cases-1026",level:3},{value:"Further Readings",id:"further-readings-1026",level:3},{value:"Sum Game",id:"sum-game",level:2},{value:"Inputs",id:"inputs-1027",level:3},{value:"Sub-problems",id:"sub-problems-1027",level:3},{value:"Edge Cases",id:"edge-cases-1027",level:3},{value:"Further Readings",id:"further-readings-1027",level:3},{value:"Unique Length-3 Palindromic Subsequences",id:"unique-length-3-palindromic-subsequences",level:2},{value:"Inputs",id:"inputs-1028",level:3},{value:"Sub-problems",id:"sub-problems-1028",level:3},{value:"Edge Cases",id:"edge-cases-1028",level:3},{value:"Further Readings",id:"further-readings-1028",level:3},{value:"Confirmation Rate",id:"confirmation-rate",level:2},{value:"Inputs",id:"inputs-1029",level:3},{value:"Sub-problems",id:"sub-problems-1029",level:3},{value:"Edge Cases",id:"edge-cases-1029",level:3},{value:"Further Readings",id:"further-readings-1029",level:3},{value:"Add Minimum Number of Rungs",id:"add-minimum-number-of-rungs",level:2},{value:"Inputs",id:"inputs-1030",level:3},{value:"Sub-problems",id:"sub-problems-1030",level:3},{value:"Edge Cases",id:"edge-cases-1030",level:3},{value:"Further Readings",id:"further-readings-1030",level:3},{value:"Maximum Number of Points with Cost",id:"maximum-number-of-points-with-cost",level:2},{value:"Inputs",id:"inputs-1031",level:3},{value:"Sub-problems",id:"sub-problems-1031",level:3},{value:"Edge Cases",id:"edge-cases-1031",level:3},{value:"Further Readings",id:"further-readings-1031",level:3},{value:"Longest Common Subsequence Between Sorted Arrays",id:"longest-common-subsequence-between-sorted-arrays",level:2},{value:"Inputs",id:"inputs-1032",level:3},{value:"Sub-problems",id:"sub-problems-1032",level:3},{value:"Edge Cases",id:"edge-cases-1032",level:3},{value:"Further Readings",id:"further-readings-1032",level:3},{value:"The Number of the Smallest Unoccupied Chair",id:"the-number-of-the-smallest-unoccupied-chair",level:2},{value:"Inputs",id:"inputs-1033",level:3},{value:"Sub-problems",id:"sub-problems-1033",level:3},{value:"Edge Cases",id:"edge-cases-1033",level:3},{value:"Further Readings",id:"further-readings-1033",level:3},{value:"Describe the Painting",id:"describe-the-painting",level:2},{value:"Inputs",id:"inputs-1034",level:3},{value:"Sub-problems",id:"sub-problems-1034",level:3},{value:"Edge Cases",id:"edge-cases-1034",level:3},{value:"Further Readings",id:"further-readings-1034",level:3},{value:"Largest Number After Mutating Substring",id:"largest-number-after-mutating-substring",level:2},{value:"Inputs",id:"inputs-1035",level:3},{value:"Sub-problems",id:"sub-problems-1035",level:3},{value:"Edge Cases",id:"edge-cases-1035",level:3},{value:"Further Readings",id:"further-readings-1035",level:3},{value:"Maximum Compatibility Score Sum",id:"maximum-compatibility-score-sum",level:2},{value:"Inputs",id:"inputs-1036",level:3},{value:"Sub-problems",id:"sub-problems-1036",level:3},{value:"Edge Cases",id:"edge-cases-1036",level:3},{value:"Further Readings",id:"further-readings-1036",level:3},{value:"Strong Friendship",id:"strong-friendship",level:2},{value:"Inputs",id:"inputs-1037",level:3},{value:"Sub-problems",id:"sub-problems-1037",level:3},{value:"Edge Cases",id:"edge-cases-1037",level:3},{value:"Further Readings",id:"further-readings-1037",level:3},{value:"Maximum of Minimum Values in All Subarrays",id:"maximum-of-minimum-values-in-all-subarrays",level:2},{value:"Inputs",id:"inputs-1038",level:3},{value:"Sub-problems",id:"sub-problems-1038",level:3},{value:"Edge Cases",id:"edge-cases-1038",level:3},{value:"Further Readings",id:"further-readings-1038",level:3},{value:"All the Pairs With the Maximum Number of Common Followers",id:"all-the-pairs-with-the-maximum-number-of-common-followers",level:2},{value:"Inputs",id:"inputs-1039",level:3},{value:"Sub-problems",id:"sub-problems-1039",level:3},{value:"Edge Cases",id:"edge-cases-1039",level:3},{value:"Further Readings",id:"further-readings-1039",level:3},{value:"Maximum Number of Weeks for Which You Can Work",id:"maximum-number-of-weeks-for-which-you-can-work",level:2},{value:"Inputs",id:"inputs-1040",level:3},{value:"Sub-problems",id:"sub-problems-1040",level:3},{value:"Edge Cases",id:"edge-cases-1040",level:3},{value:"Further Readings",id:"further-readings-1040",level:3},{value:"Minimum Garden Perimeter to Collect Enough Apples",id:"minimum-garden-perimeter-to-collect-enough-apples",level:2},{value:"Inputs",id:"inputs-1041",level:3},{value:"Sub-problems",id:"sub-problems-1041",level:3},{value:"Edge Cases",id:"edge-cases-1041",level:3},{value:"Further Readings",id:"further-readings-1041",level:3},{value:"Check if Move is Legal",id:"check-if-move-is-legal",level:2},{value:"Inputs",id:"inputs-1042",level:3},{value:"Sub-problems",id:"sub-problems-1042",level:3},{value:"Edge Cases",id:"edge-cases-1042",level:3},{value:"Further Readings",id:"further-readings-1042",level:3},{value:"Minimum Total Space Wasted With K Resizing Operations",id:"minimum-total-space-wasted-with-k-resizing-operations",level:2},{value:"Inputs",id:"inputs-1043",level:3},{value:"Sub-problems",id:"sub-problems-1043",level:3},{value:"Edge Cases",id:"edge-cases-1043",level:3},{value:"Further Readings",id:"further-readings-1043",level:3},{value:"Remove Stones to Minimize the Total",id:"remove-stones-to-minimize-the-total",level:2},{value:"Inputs",id:"inputs-1044",level:3},{value:"Sub-problems",id:"sub-problems-1044",level:3},{value:"Edge Cases",id:"edge-cases-1044",level:3},{value:"Further Readings",id:"further-readings-1044",level:3},{value:"Minimum Number of Swaps to Make the String Balanced",id:"minimum-number-of-swaps-to-make-the-string-balanced",level:2},{value:"Inputs",id:"inputs-1045",level:3},{value:"Sub-problems",id:"sub-problems-1045",level:3},{value:"Edge Cases",id:"edge-cases-1045",level:3},{value:"Further Readings",id:"further-readings-1045",level:3},{value:"Binary Searchable Numbers in an Unsorted Array",id:"binary-searchable-numbers-in-an-unsorted-array",level:2},{value:"Inputs",id:"inputs-1046",level:3},{value:"Sub-problems",id:"sub-problems-1046",level:3},{value:"Edge Cases",id:"edge-cases-1046",level:3},{value:"Further Readings",id:"further-readings-1046",level:3},{value:"Array With Elements Not Equal to Average of Neighbors",id:"array-with-elements-not-equal-to-average-of-neighbors",level:2},{value:"Inputs",id:"inputs-1047",level:3},{value:"Sub-problems",id:"sub-problems-1047",level:3},{value:"Edge Cases",id:"edge-cases-1047",level:3},{value:"Further Readings",id:"further-readings-1047",level:3},{value:"Minimum Non-Zero Product of the Array Elements",id:"minimum-non-zero-product-of-the-array-elements",level:2},{value:"Inputs",id:"inputs-1048",level:3},{value:"Sub-problems",id:"sub-problems-1048",level:3},{value:"Edge Cases",id:"edge-cases-1048",level:3},{value:"Further Readings",id:"further-readings-1048",level:3},{value:"Count Nodes Equal to Sum of Descendants",id:"count-nodes-equal-to-sum-of-descendants",level:2},{value:"Inputs",id:"inputs-1049",level:3},{value:"Sub-problems",id:"sub-problems-1049",level:3},{value:"Edge Cases",id:"edge-cases-1049",level:3},{value:"Further Readings",id:"further-readings-1049",level:3},{value:"Maximum Matrix Sum",id:"maximum-matrix-sum",level:2},{value:"Inputs",id:"inputs-1050",level:3},{value:"Sub-problems",id:"sub-problems-1050",level:3},{value:"Edge Cases",id:"edge-cases-1050",level:3},{value:"Further Readings",id:"further-readings-1050",level:3},{value:"Number of Ways to Arrive at Destination",id:"number-of-ways-to-arrive-at-destination",level:2},{value:"Inputs",id:"inputs-1051",level:3},{value:"Sub-problems",id:"sub-problems-1051",level:3},{value:"Edge Cases",id:"edge-cases-1051",level:3},{value:"Further Readings",id:"further-readings-1051",level:3},{value:"Find Unique Binary String",id:"find-unique-binary-string",level:2},{value:"Inputs",id:"inputs-1052",level:3},{value:"Sub-problems",id:"sub-problems-1052",level:3},{value:"Edge Cases",id:"edge-cases-1052",level:3},{value:"Further Readings",id:"further-readings-1052",level:3},{value:"Minimize the Difference Between Target and Chosen Elements",id:"minimize-the-difference-between-target-and-chosen-elements",level:2},{value:"Inputs",id:"inputs-1053",level:3},{value:"Sub-problems",id:"sub-problems-1053",level:3},{value:"Edge Cases",id:"edge-cases-1053",level:3},{value:"Further Readings",id:"further-readings-1053",level:3},{value:"Widest Pair of Indices With Equal Range Sum",id:"widest-pair-of-indices-with-equal-range-sum",level:2},{value:"Inputs",id:"inputs-1054",level:3},{value:"Sub-problems",id:"sub-problems-1054",level:3},{value:"Edge Cases",id:"edge-cases-1054",level:3},{value:"Further Readings",id:"further-readings-1054",level:3},{value:"Find the Kth Largest Integer in the Array",id:"find-the-kth-largest-integer-in-the-array",level:2},{value:"Inputs",id:"inputs-1055",level:3},{value:"Sub-problems",id:"sub-problems-1055",level:3},{value:"Edge Cases",id:"edge-cases-1055",level:3},{value:"Further Readings",id:"further-readings-1055",level:3},{value:"Minimum Number of Work Sessions to Finish the Tasks",id:"minimum-number-of-work-sessions-to-finish-the-tasks",level:2},{value:"Inputs",id:"inputs-1056",level:3},{value:"Sub-problems",id:"sub-problems-1056",level:3},{value:"Edge Cases",id:"edge-cases-1056",level:3},{value:"Further Readings",id:"further-readings-1056",level:3},{value:"Find Cutoff Score for Each School",id:"find-cutoff-score-for-each-school",level:2},{value:"Inputs",id:"inputs-1057",level:3},{value:"Sub-problems",id:"sub-problems-1057",level:3},{value:"Edge Cases",id:"edge-cases-1057",level:3},{value:"Further Readings",id:"further-readings-1057",level:3},{value:"Maximum Number of People That Can Be Caught in Tag",id:"maximum-number-of-people-that-can-be-caught-in-tag",level:2},{value:"Inputs",id:"inputs-1058",level:3},{value:"Sub-problems",id:"sub-problems-1058",level:3},{value:"Edge Cases",id:"edge-cases-1058",level:3},{value:"Further Readings",id:"further-readings-1058",level:3},{value:"Count the Number of Experiments",id:"count-the-number-of-experiments",level:2},{value:"Inputs",id:"inputs-1059",level:3},{value:"Sub-problems",id:"sub-problems-1059",level:3},{value:"Edge Cases",id:"edge-cases-1059",level:3},{value:"Further Readings",id:"further-readings-1059",level:3},{value:"Find All Groups of Farmland",id:"find-all-groups-of-farmland",level:2},{value:"Inputs",id:"inputs-1060",level:3},{value:"Sub-problems",id:"sub-problems-1060",level:3},{value:"Edge Cases",id:"edge-cases-1060",level:3},{value:"Further Readings",id:"further-readings-1060",level:3},{value:"Operations on Tree",id:"operations-on-tree",level:2},{value:"Inputs",id:"inputs-1061",level:3},{value:"Sub-problems",id:"sub-problems-1061",level:3},{value:"Edge Cases",id:"edge-cases-1061",level:3},{value:"Further Readings",id:"further-readings-1061",level:3},{value:"The Number of Weak Characters in the Game",id:"the-number-of-weak-characters-in-the-game",level:2},{value:"Inputs",id:"inputs-1062",level:3},{value:"Sub-problems",id:"sub-problems-1062",level:3},{value:"Edge Cases",id:"edge-cases-1062",level:3},{value:"Further Readings",id:"further-readings-1062",level:3},{value:"First Day Where You Have Been in All the Rooms",id:"first-day-where-you-have-been-in-all-the-rooms",level:2},{value:"Inputs",id:"inputs-1063",level:3},{value:"Sub-problems",id:"sub-problems-1063",level:3},{value:"Edge Cases",id:"edge-cases-1063",level:3},{value:"Further Readings",id:"further-readings-1063",level:3},{value:"Smallest Greater Multiple Made of Two Digits",id:"smallest-greater-multiple-made-of-two-digits",level:2},{value:"Inputs",id:"inputs-1064",level:3},{value:"Sub-problems",id:"sub-problems-1064",level:3},{value:"Edge Cases",id:"edge-cases-1064",level:3},{value:"Further Readings",id:"further-readings-1064",level:3},{value:"Number of Pairs of Interchangeable Rectangles",id:"number-of-pairs-of-interchangeable-rectangles",level:2},{value:"Inputs",id:"inputs-1065",level:3},{value:"Sub-problems",id:"sub-problems-1065",level:3},{value:"Edge Cases",id:"edge-cases-1065",level:3},{value:"Further Readings",id:"further-readings-1065",level:3},{value:"Maximum Product of the Length of Two Palindromic Subsequences",id:"maximum-product-of-the-length-of-two-palindromic-subsequences",level:2},{value:"Inputs",id:"inputs-1066",level:3},{value:"Sub-problems",id:"sub-problems-1066",level:3},{value:"Edge Cases",id:"edge-cases-1066",level:3},{value:"Further Readings",id:"further-readings-1066",level:3},{value:"Find Original Array From Doubled Array",id:"find-original-array-from-doubled-array",level:2},{value:"Inputs",id:"inputs-1067",level:3},{value:"Sub-problems",id:"sub-problems-1067",level:3},{value:"Edge Cases",id:"edge-cases-1067",level:3},{value:"Further Readings",id:"further-readings-1067",level:3},{value:"Maximum Earnings From Taxi",id:"maximum-earnings-from-taxi",level:2},{value:"Inputs",id:"inputs-1068",level:3},{value:"Sub-problems",id:"sub-problems-1068",level:3},{value:"Edge Cases",id:"edge-cases-1068",level:3},{value:"Further Readings",id:"further-readings-1068",level:3},{value:"Sum of Beauty in the Array",id:"sum-of-beauty-in-the-array",level:2},{value:"Inputs",id:"inputs-1069",level:3},{value:"Sub-problems",id:"sub-problems-1069",level:3},{value:"Edge Cases",id:"edge-cases-1069",level:3},{value:"Further Readings",id:"further-readings-1069",level:3},{value:"Detect Squares",id:"detect-squares",level:2},{value:"Inputs",id:"inputs-1070",level:3},{value:"Sub-problems",id:"sub-problems-1070",level:3},{value:"Edge Cases",id:"edge-cases-1070",level:3},{value:"Further Readings",id:"further-readings-1070",level:3},{value:"Average Height of Buildings in Each Segment",id:"average-height-of-buildings-in-each-segment",level:2},{value:"Inputs",id:"inputs-1071",level:3},{value:"Sub-problems",id:"sub-problems-1071",level:3},{value:"Edge Cases",id:"edge-cases-1071",level:3},{value:"Further Readings",id:"further-readings-1071",level:3},{value:"Grid Game",id:"grid-game",level:2},{value:"Inputs",id:"inputs-1072",level:3},{value:"Sub-problems",id:"sub-problems-1072",level:3},{value:"Edge Cases",id:"edge-cases-1072",level:3},{value:"Further Readings",id:"further-readings-1072",level:3},{value:"Check if Word Can Be Placed In Crossword",id:"check-if-word-can-be-placed-in-crossword",level:2},{value:"Inputs",id:"inputs-1073",level:3},{value:"Sub-problems",id:"sub-problems-1073",level:3},{value:"Edge Cases",id:"edge-cases-1073",level:3},{value:"Further Readings",id:"further-readings-1073",level:3},{value:"Number of Accounts That Did Not Stream",id:"number-of-accounts-that-did-not-stream",level:2},{value:"Inputs",id:"inputs-1074",level:3},{value:"Sub-problems",id:"sub-problems-1074",level:3},{value:"Edge Cases",id:"edge-cases-1074",level:3},{value:"Further Readings",id:"further-readings-1074",level:3},{value:"Brightest Position on Street",id:"brightest-position-on-street",level:2},{value:"Inputs",id:"inputs-1075",level:3},{value:"Sub-problems",id:"sub-problems-1075",level:3},{value:"Edge Cases",id:"edge-cases-1075",level:3},{value:"Further Readings",id:"further-readings-1075",level:3},{value:"Number of Pairs of Strings With Concatenation Equal to Target",id:"number-of-pairs-of-strings-with-concatenation-equal-to-target",level:2},{value:"Inputs",id:"inputs-1076",level:3},{value:"Sub-problems",id:"sub-problems-1076",level:3},{value:"Edge Cases",id:"edge-cases-1076",level:3},{value:"Further Readings",id:"further-readings-1076",level:3},{value:"Maximize the Confusion of an Exam",id:"maximize-the-confusion-of-an-exam",level:2},{value:"Inputs",id:"inputs-1077",level:3},{value:"Sub-problems",id:"sub-problems-1077",level:3},{value:"Edge Cases",id:"edge-cases-1077",level:3},{value:"Further Readings",id:"further-readings-1077",level:3},{value:"Find Missing Observations",id:"find-missing-observations",level:2},{value:"Inputs",id:"inputs-1078",level:3},{value:"Sub-problems",id:"sub-problems-1078",level:3},{value:"Edge Cases",id:"edge-cases-1078",level:3},{value:"Further Readings",id:"further-readings-1078",level:3},{value:"Stone Game IX",id:"stone-game-ix",level:2},{value:"Inputs",id:"inputs-1079",level:3},{value:"Sub-problems",id:"sub-problems-1079",level:3},{value:"Edge Cases",id:"edge-cases-1079",level:3},{value:"Further Readings",id:"further-readings-1079",level:3},{value:"Count Subarrays With More Ones Than Zeros",id:"count-subarrays-with-more-ones-than-zeros",level:2},{value:"Inputs",id:"inputs-1080",level:3},{value:"Sub-problems",id:"sub-problems-1080",level:3},{value:"Edge Cases",id:"edge-cases-1080",level:3},{value:"Further Readings",id:"further-readings-1080",level:3},{value:"Minimum Operations to Make a Uni-Value Grid",id:"minimum-operations-to-make-a-uni-value-grid",level:2},{value:"Inputs",id:"inputs-1081",level:3},{value:"Sub-problems",id:"sub-problems-1081",level:3},{value:"Edge Cases",id:"edge-cases-1081",level:3},{value:"Further Readings",id:"further-readings-1081",level:3},{value:"Stock Price Fluctuation",id:"stock-price-fluctuation",level:2},{value:"Inputs",id:"inputs-1082",level:3},{value:"Sub-problems",id:"sub-problems-1082",level:3},{value:"Edge Cases",id:"edge-cases-1082",level:3},{value:"Further Readings",id:"further-readings-1082",level:3},{value:"Maximum Alternating Subarray Sum",id:"maximum-alternating-subarray-sum",level:2},{value:"Inputs",id:"inputs-1083",level:3},{value:"Sub-problems",id:"sub-problems-1083",level:3},{value:"Edge Cases",id:"edge-cases-1083",level:3},{value:"Further Readings",id:"further-readings-1083",level:3},{value:"Remove Colored Pieces if Both Neighbors are the Same Color",id:"remove-colored-pieces-if-both-neighbors-are-the-same-color",level:2},{value:"Inputs",id:"inputs-1084",level:3},{value:"Sub-problems",id:"sub-problems-1084",level:3},{value:"Edge Cases",id:"edge-cases-1084",level:3},{value:"Further Readings",id:"further-readings-1084",level:3},{value:"The Time When the Network Becomes Idle",id:"the-time-when-the-network-becomes-idle",level:2},{value:"Inputs",id:"inputs-1085",level:3},{value:"Sub-problems",id:"sub-problems-1085",level:3},{value:"Edge Cases",id:"edge-cases-1085",level:3},{value:"Further Readings",id:"further-readings-1085",level:3},{value:"Accepted Candidates From the Interviews",id:"accepted-candidates-from-the-interviews",level:2},{value:"Inputs",id:"inputs-1086",level:3},{value:"Sub-problems",id:"sub-problems-1086",level:3},{value:"Edge Cases",id:"edge-cases-1086",level:3},{value:"Further Readings",id:"further-readings-1086",level:3},{value:"Simple Bank System",id:"simple-bank-system",level:2},{value:"Inputs",id:"inputs-1087",level:3},{value:"Sub-problems",id:"sub-problems-1087",level:3},{value:"Edge Cases",id:"edge-cases-1087",level:3},{value:"Further Readings",id:"further-readings-1087",level:3},{value:"Count Number of Maximum Bitwise-OR Subsets",id:"count-number-of-maximum-bitwise-or-subsets",level:2},{value:"Inputs",id:"inputs-1088",level:3},{value:"Sub-problems",id:"sub-problems-1088",level:3},{value:"Edge Cases",id:"edge-cases-1088",level:3},{value:"Further Readings",id:"further-readings-1088",level:3},{value:"Sort Linked List Already Sorted Using Absolute Values",id:"sort-linked-list-already-sorted-using-absolute-values",level:2},{value:"Inputs",id:"inputs-1089",level:3},{value:"Sub-problems",id:"sub-problems-1089",level:3},{value:"Edge Cases",id:"edge-cases-1089",level:3},{value:"Further Readings",id:"further-readings-1089",level:3},{value:"Next Greater Numerically Balanced Number",id:"next-greater-numerically-balanced-number",level:2},{value:"Inputs",id:"inputs-1090",level:3},{value:"Sub-problems",id:"sub-problems-1090",level:3},{value:"Edge Cases",id:"edge-cases-1090",level:3},{value:"Further Readings",id:"further-readings-1090",level:3},{value:"Count Nodes With the Highest Score",id:"count-nodes-with-the-highest-score",level:2},{value:"Inputs",id:"inputs-1091",level:3},{value:"Sub-problems",id:"sub-problems-1091",level:3},{value:"Edge Cases",id:"edge-cases-1091",level:3},{value:"Further Readings",id:"further-readings-1091",level:3},{value:"The Category of Each Member in the Store",id:"the-category-of-each-member-in-the-store",level:2},{value:"Inputs",id:"inputs-1092",level:3},{value:"Sub-problems",id:"sub-problems-1092",level:3},{value:"Edge Cases",id:"edge-cases-1092",level:3},{value:"Further Readings",id:"further-readings-1092",level:3},{value:"Minimum Cost to Separate Sentence Into Rows",id:"minimum-cost-to-separate-sentence-into-rows",level:2},{value:"Inputs",id:"inputs-1093",level:3},{value:"Sub-problems",id:"sub-problems-1093",level:3},{value:"Edge Cases",id:"edge-cases-1093",level:3},{value:"Further Readings",id:"further-readings-1093",level:3},{value:"Two Best Non-Overlapping Events",id:"two-best-non-overlapping-events",level:2},{value:"Inputs",id:"inputs-1094",level:3},{value:"Sub-problems",id:"sub-problems-1094",level:3},{value:"Edge Cases",id:"edge-cases-1094",level:3},{value:"Further Readings",id:"further-readings-1094",level:3},{value:"Plates Between Candles",id:"plates-between-candles",level:2},{value:"Inputs",id:"inputs-1095",level:3},{value:"Sub-problems",id:"sub-problems-1095",level:3},{value:"Edge Cases",id:"edge-cases-1095",level:3},{value:"Further Readings",id:"further-readings-1095",level:3},{value:"Find the Minimum and Maximum Number of Nodes Between Critical Points",id:"find-the-minimum-and-maximum-number-of-nodes-between-critical-points",level:2},{value:"Inputs",id:"inputs-1096",level:3},{value:"Sub-problems",id:"sub-problems-1096",level:3},{value:"Edge Cases",id:"edge-cases-1096",level:3},{value:"Further Readings",id:"further-readings-1096",level:3},{value:"Minimum Operations to Convert Number",id:"minimum-operations-to-convert-number",level:2},{value:"Inputs",id:"inputs-1097",level:3},{value:"Sub-problems",id:"sub-problems-1097",level:3},{value:"Edge Cases",id:"edge-cases-1097",level:3},{value:"Further Readings",id:"further-readings-1097",level:3},{value:"Number of Spaces Cleaning Robot Cleaned",id:"number-of-spaces-cleaning-robot-cleaned",level:2},{value:"Inputs",id:"inputs-1098",level:3},{value:"Sub-problems",id:"sub-problems-1098",level:3},{value:"Edge Cases",id:"edge-cases-1098",level:3},{value:"Further Readings",id:"further-readings-1098",level:3},{value:"Vowels of All Substrings",id:"vowels-of-all-substrings",level:2},{value:"Inputs",id:"inputs-1099",level:3},{value:"Sub-problems",id:"sub-problems-1099",level:3},{value:"Edge Cases",id:"edge-cases-1099",level:3},{value:"Further Readings",id:"further-readings-1099",level:3},{value:"Minimized Maximum of Products Distributed to Any Store",id:"minimized-maximum-of-products-distributed-to-any-store",level:2},{value:"Inputs",id:"inputs-1100",level:3},{value:"Sub-problems",id:"sub-problems-1100",level:3},{value:"Edge Cases",id:"edge-cases-1100",level:3},{value:"Further Readings",id:"further-readings-1100",level:3},{value:"Account Balance",id:"account-balance",level:2},{value:"Inputs",id:"inputs-1101",level:3},{value:"Sub-problems",id:"sub-problems-1101",level:3},{value:"Edge Cases",id:"edge-cases-1101",level:3},{value:"Further Readings",id:"further-readings-1101",level:3},{value:"Number of Equal Count Substrings",id:"number-of-equal-count-substrings",level:2},{value:"Inputs",id:"inputs-1102",level:3},{value:"Sub-problems",id:"sub-problems-1102",level:3},{value:"Edge Cases",id:"edge-cases-1102",level:3},{value:"Further Readings",id:"further-readings-1102",level:3},{value:"Walking Robot Simulation II",id:"walking-robot-simulation-ii",level:2},{value:"Inputs",id:"inputs-1103",level:3},{value:"Sub-problems",id:"sub-problems-1103",level:3},{value:"Edge Cases",id:"edge-cases-1103",level:3},{value:"Further Readings",id:"further-readings-1103",level:3},{value:"Most Beautiful Item for Each Query",id:"most-beautiful-item-for-each-query",level:2},{value:"Inputs",id:"inputs-1104",level:3},{value:"Sub-problems",id:"sub-problems-1104",level:3},{value:"Edge Cases",id:"edge-cases-1104",level:3},{value:"Further Readings",id:"further-readings-1104",level:3},{value:"Reverse Nodes in Even Length Groups",id:"reverse-nodes-in-even-length-groups",level:2},{value:"Inputs",id:"inputs-1105",level:3},{value:"Sub-problems",id:"sub-problems-1105",level:3},{value:"Edge Cases",id:"edge-cases-1105",level:3},{value:"Further Readings",id:"further-readings-1105",level:3},{value:"Decode the Slanted Ciphertext",id:"decode-the-slanted-ciphertext",level:2},{value:"Inputs",id:"inputs-1106",level:3},{value:"Sub-problems",id:"sub-problems-1106",level:3},{value:"Edge Cases",id:"edge-cases-1106",level:3},{value:"Further Readings",id:"further-readings-1106",level:3},{value:"Paths in Maze That Lead to Same Room",id:"paths-in-maze-that-lead-to-same-room",level:2},{value:"Inputs",id:"inputs-1107",level:3},{value:"Sub-problems",id:"sub-problems-1107",level:3},{value:"Edge Cases",id:"edge-cases-1107",level:3},{value:"Further Readings",id:"further-readings-1107",level:3},{value:"Watering Plants",id:"watering-plants",level:2},{value:"Inputs",id:"inputs-1108",level:3},{value:"Sub-problems",id:"sub-problems-1108",level:3},{value:"Edge Cases",id:"edge-cases-1108",level:3},{value:"Further Readings",id:"further-readings-1108",level:3},{value:"Range Frequency Queries",id:"range-frequency-queries",level:2},{value:"Inputs",id:"inputs-1109",level:3},{value:"Sub-problems",id:"sub-problems-1109",level:3},{value:"Edge Cases",id:"edge-cases-1109",level:3},{value:"Further Readings",id:"further-readings-1109",level:3},{value:"Substrings That Begin and End With the Same Letter",id:"substrings-that-begin-and-end-with-the-same-letter",level:2},{value:"Inputs",id:"inputs-1110",level:3},{value:"Sub-problems",id:"sub-problems-1110",level:3},{value:"Edge Cases",id:"edge-cases-1110",level:3},{value:"Further Readings",id:"further-readings-1110",level:3},{value:"Drop Type 1 Orders for Customers With Type 0 Orders",id:"drop-type-1-orders-for-customers-with-type-0-orders",level:2},{value:"Inputs",id:"inputs-1111",level:3},{value:"Sub-problems",id:"sub-problems-1111",level:3},{value:"Edge Cases",id:"edge-cases-1111",level:3},{value:"Further Readings",id:"further-readings-1111",level:3},{value:"Minimum Number of Buckets Required to Collect Rainwater from Houses",id:"minimum-number-of-buckets-required-to-collect-rainwater-from-houses",level:2},{value:"Inputs",id:"inputs-1112",level:3},{value:"Sub-problems",id:"sub-problems-1112",level:3},{value:"Edge Cases",id:"edge-cases-1112",level:3},{value:"Further Readings",id:"further-readings-1112",level:3},{value:"Minimum Cost Homecoming of a Robot in a Grid",id:"minimum-cost-homecoming-of-a-robot-in-a-grid",level:2},{value:"Inputs",id:"inputs-1113",level:3},{value:"Sub-problems",id:"sub-problems-1113",level:3},{value:"Edge Cases",id:"edge-cases-1113",level:3},{value:"Further Readings",id:"further-readings-1113",level:3},{value:"K Radius Subarray Averages",id:"k-radius-subarray-averages",level:2},{value:"Inputs",id:"inputs-1114",level:3},{value:"Sub-problems",id:"sub-problems-1114",level:3},{value:"Edge Cases",id:"edge-cases-1114",level:3},{value:"Further Readings",id:"further-readings-1114",level:3},{value:"Removing Minimum and Maximum From Array",id:"removing-minimum-and-maximum-from-array",level:2},{value:"Inputs",id:"inputs-1115",level:3},{value:"Sub-problems",id:"sub-problems-1115",level:3},{value:"Edge Cases",id:"edge-cases-1115",level:3},{value:"Further Readings",id:"further-readings-1115",level:3},{value:"Minimum Cost to Reach City With Discounts",id:"minimum-cost-to-reach-city-with-discounts",level:2},{value:"Inputs",id:"inputs-1116",level:3},{value:"Sub-problems",id:"sub-problems-1116",level:3},{value:"Edge Cases",id:"edge-cases-1116",level:3},{value:"Further Readings",id:"further-readings-1116",level:3},{value:"Delete the Middle Node of a Linked List",id:"delete-the-middle-node-of-a-linked-list",level:2},{value:"Inputs",id:"inputs-1117",level:3},{value:"Sub-problems",id:"sub-problems-1117",level:3},{value:"Edge Cases",id:"edge-cases-1117",level:3},{value:"Further Readings",id:"further-readings-1117",level:3},{value:"Step-By-Step Directions From a Binary Tree Node to Another",id:"step-by-step-directions-from-a-binary-tree-node-to-another",level:2},{value:"Inputs",id:"inputs-1118",level:3},{value:"Sub-problems",id:"sub-problems-1118",level:3},{value:"Edge Cases",id:"edge-cases-1118",level:3},{value:"Further Readings",id:"further-readings-1118",level:3},{value:"Subsequence of Size K With the Largest Even Sum",id:"subsequence-of-size-k-with-the-largest-even-sum",level:2},{value:"Inputs",id:"inputs-1119",level:3},{value:"Sub-problems",id:"sub-problems-1119",level:3},{value:"Edge Cases",id:"edge-cases-1119",level:3},{value:"Further Readings",id:"further-readings-1119",level:3},{value:"Find Good Days to Rob the Bank",id:"find-good-days-to-rob-the-bank",level:2},{value:"Inputs",id:"inputs-1120",level:3},{value:"Sub-problems",id:"sub-problems-1120",level:3},{value:"Edge Cases",id:"edge-cases-1120",level:3},{value:"Further Readings",id:"further-readings-1120",level:3},{value:"Detonate the Maximum Bombs",id:"detonate-the-maximum-bombs",level:2},{value:"Inputs",id:"inputs-1121",level:3},{value:"Sub-problems",id:"sub-problems-1121",level:3},{value:"Edge Cases",id:"edge-cases-1121",level:3},{value:"Further Readings",id:"further-readings-1121",level:3},{value:"Sum of Subarray Ranges",id:"sum-of-subarray-ranges",level:2},{value:"Inputs",id:"inputs-1122",level:3},{value:"Sub-problems",id:"sub-problems-1122",level:3},{value:"Edge Cases",id:"edge-cases-1122",level:3},{value:"Further Readings",id:"further-readings-1122",level:3},{value:"Watering Plants II",id:"watering-plants-ii",level:2},{value:"Inputs",id:"inputs-1123",level:3},{value:"Sub-problems",id:"sub-problems-1123",level:3},{value:"Edge Cases",id:"edge-cases-1123",level:3},{value:"Further Readings",id:"further-readings-1123",level:3},{value:"Number of Unique Flavors After Sharing K Candies",id:"number-of-unique-flavors-after-sharing-k-candies",level:2},{value:"Inputs",id:"inputs-1124",level:3},{value:"Sub-problems",id:"sub-problems-1124",level:3},{value:"Edge Cases",id:"edge-cases-1124",level:3},{value:"Further Readings",id:"further-readings-1124",level:3},{value:"Adding Spaces to a String",id:"adding-spaces-to-a-string",level:2},{value:"Inputs",id:"inputs-1125",level:3},{value:"Sub-problems",id:"sub-problems-1125",level:3},{value:"Edge Cases",id:"edge-cases-1125",level:3},{value:"Further Readings",id:"further-readings-1125",level:3},{value:"Number of Smooth Descent Periods of a Stock",id:"number-of-smooth-descent-periods-of-a-stock",level:2},{value:"Inputs",id:"inputs-1126",level:3},{value:"Sub-problems",id:"sub-problems-1126",level:3},{value:"Edge Cases",id:"edge-cases-1126",level:3},{value:"Further Readings",id:"further-readings-1126",level:3},{value:"The Airport With the Most Traffic",id:"the-airport-with-the-most-traffic",level:2},{value:"Inputs",id:"inputs-1127",level:3},{value:"Sub-problems",id:"sub-problems-1127",level:3},{value:"Edge Cases",id:"edge-cases-1127",level:3},{value:"Further Readings",id:"further-readings-1127",level:3},{value:"Elements in Array After Removing and Replacing Elements",id:"elements-in-array-after-removing-and-replacing-elements",level:2},{value:"Inputs",id:"inputs-1128",level:3},{value:"Sub-problems",id:"sub-problems-1128",level:3},{value:"Edge Cases",id:"edge-cases-1128",level:3},{value:"Further Readings",id:"further-readings-1128",level:3},{value:"Find All Possible Recipes from Given Supplies",id:"find-all-possible-recipes-from-given-supplies",level:2},{value:"Inputs",id:"inputs-1129",level:3},{value:"Sub-problems",id:"sub-problems-1129",level:3},{value:"Edge Cases",id:"edge-cases-1129",level:3},{value:"Further Readings",id:"further-readings-1129",level:3},{value:"Check if a Parentheses String Can Be Valid",id:"check-if-a-parentheses-string-can-be-valid",level:2},{value:"Inputs",id:"inputs-1130",level:3},{value:"Sub-problems",id:"sub-problems-1130",level:3},{value:"Edge Cases",id:"edge-cases-1130",level:3},{value:"Further Readings",id:"further-readings-1130",level:3},{value:"Execution of All Suffix Instructions Staying in a Grid",id:"execution-of-all-suffix-instructions-staying-in-a-grid",level:2},{value:"Inputs",id:"inputs-1131",level:3},{value:"Sub-problems",id:"sub-problems-1131",level:3},{value:"Edge Cases",id:"edge-cases-1131",level:3},{value:"Further Readings",id:"further-readings-1131",level:3},{value:"Intervals Between Identical Elements",id:"intervals-between-identical-elements",level:2},{value:"Inputs",id:"inputs-1132",level:3},{value:"Sub-problems",id:"sub-problems-1132",level:3},{value:"Edge Cases",id:"edge-cases-1132",level:3},{value:"Further Readings",id:"further-readings-1132",level:3},{value:"Number of Laser Beams in a Bank",id:"number-of-laser-beams-in-a-bank",level:2},{value:"Inputs",id:"inputs-1133",level:3},{value:"Sub-problems",id:"sub-problems-1133",level:3},{value:"Edge Cases",id:"edge-cases-1133",level:3},{value:"Further Readings",id:"further-readings-1133",level:3},{value:"Destroying Asteroids",id:"destroying-asteroids",level:2},{value:"Inputs",id:"inputs-1134",level:3},{value:"Sub-problems",id:"sub-problems-1134",level:3},{value:"Edge Cases",id:"edge-cases-1134",level:3},{value:"Further Readings",id:"further-readings-1134",level:3},{value:"Remove All Ones With Row and Column Flips",id:"remove-all-ones-with-row-and-column-flips",level:2},{value:"Inputs",id:"inputs-1135",level:3},{value:"Sub-problems",id:"sub-problems-1135",level:3},{value:"Edge Cases",id:"edge-cases-1135",level:3},{value:"Further Readings",id:"further-readings-1135",level:3},{value:"Maximum Twin Sum of a Linked List",id:"maximum-twin-sum-of-a-linked-list",level:2},{value:"Inputs",id:"inputs-1136",level:3},{value:"Sub-problems",id:"sub-problems-1136",level:3},{value:"Edge Cases",id:"edge-cases-1136",level:3},{value:"Further Readings",id:"further-readings-1136",level:3},{value:"Longest Palindrome by Concatenating Two Letter Words",id:"longest-palindrome-by-concatenating-two-letter-words",level:2},{value:"Inputs",id:"inputs-1137",level:3},{value:"Sub-problems",id:"sub-problems-1137",level:3},{value:"Edge Cases",id:"edge-cases-1137",level:3},{value:"Further Readings",id:"further-readings-1137",level:3},{value:"Minimum Swaps to Group All 1&#39;s Together II",id:"minimum-swaps-to-group-all-1s-together-ii",level:2},{value:"Inputs",id:"inputs-1138",level:3},{value:"Sub-problems",id:"sub-problems-1138",level:3},{value:"Edge Cases",id:"edge-cases-1138",level:3},{value:"Further Readings",id:"further-readings-1138",level:3},{value:"Count Words Obtained After Adding a Letter",id:"count-words-obtained-after-adding-a-letter",level:2},{value:"Inputs",id:"inputs-1139",level:3},{value:"Sub-problems",id:"sub-problems-1139",level:3},{value:"Edge Cases",id:"edge-cases-1139",level:3},{value:"Further Readings",id:"further-readings-1139",level:3},{value:"Pour Water Between Buckets to Make Water Levels Equal",id:"pour-water-between-buckets-to-make-water-levels-equal",level:2},{value:"Inputs",id:"inputs-1140",level:3},{value:"Sub-problems",id:"sub-problems-1140",level:3},{value:"Edge Cases",id:"edge-cases-1140",level:3},{value:"Further Readings",id:"further-readings-1140",level:3},{value:"Minimum Moves to Reach Target Score",id:"minimum-moves-to-reach-target-score",level:2},{value:"Inputs",id:"inputs-1141",level:3},{value:"Sub-problems",id:"sub-problems-1141",level:3},{value:"Edge Cases",id:"edge-cases-1141",level:3},{value:"Further Readings",id:"further-readings-1141",level:3},{value:"Solving Questions With Brainpower",id:"solving-questions-with-brainpower",level:2},{value:"Inputs",id:"inputs-1142",level:3},{value:"Sub-problems",id:"sub-problems-1142",level:3},{value:"Edge Cases",id:"edge-cases-1142",level:3},{value:"Further Readings",id:"further-readings-1142",level:3},{value:"The Number of Passengers in Each Bus I",id:"the-number-of-passengers-in-each-bus-i",level:2},{value:"Inputs",id:"inputs-1143",level:3},{value:"Sub-problems",id:"sub-problems-1143",level:3},{value:"Edge Cases",id:"edge-cases-1143",level:3},{value:"Further Readings",id:"further-readings-1143",level:3},{value:"Count the Hidden Sequences",id:"count-the-hidden-sequences",level:2},{value:"Inputs",id:"inputs-1144",level:3},{value:"Sub-problems",id:"sub-problems-1144",level:3},{value:"Edge Cases",id:"edge-cases-1144",level:3},{value:"Further Readings",id:"further-readings-1144",level:3},{value:"K Highest Ranked Items Within a Price Range",id:"k-highest-ranked-items-within-a-price-range",level:2},{value:"Inputs",id:"inputs-1145",level:3},{value:"Sub-problems",id:"sub-problems-1145",level:3},{value:"Edge Cases",id:"edge-cases-1145",level:3},{value:"Further Readings",id:"further-readings-1145",level:3},{value:"Rearrange Array Elements by Sign",id:"rearrange-array-elements-by-sign",level:2},{value:"Inputs",id:"inputs-1146",level:3},{value:"Sub-problems",id:"sub-problems-1146",level:3},{value:"Edge Cases",id:"edge-cases-1146",level:3},{value:"Further Readings",id:"further-readings-1146",level:3},{value:"Find All Lonely Numbers in the Array",id:"find-all-lonely-numbers-in-the-array",level:2},{value:"Inputs",id:"inputs-1147",level:3},{value:"Sub-problems",id:"sub-problems-1147",level:3},{value:"Edge Cases",id:"edge-cases-1147",level:3},{value:"Further Readings",id:"further-readings-1147",level:3},{value:"Minimum Number of Lines to Cover Points",id:"minimum-number-of-lines-to-cover-points",level:2},{value:"Inputs",id:"inputs-1148",level:3},{value:"Sub-problems",id:"sub-problems-1148",level:3},{value:"Edge Cases",id:"edge-cases-1148",level:3},{value:"Further Readings",id:"further-readings-1148",level:3},{value:"All Divisions With the Highest Score of a Binary Array",id:"all-divisions-with-the-highest-score-of-a-binary-array",level:2},{value:"Inputs",id:"inputs-1149",level:3},{value:"Sub-problems",id:"sub-problems-1149",level:3},{value:"Edge Cases",id:"edge-cases-1149",level:3},{value:"Further Readings",id:"further-readings-1149",level:3},{value:"Order Two Columns Independently",id:"order-two-columns-independently",level:2},{value:"Inputs",id:"inputs-1150",level:3},{value:"Sub-problems",id:"sub-problems-1150",level:3},{value:"Edge Cases",id:"edge-cases-1150",level:3},{value:"Further Readings",id:"further-readings-1150",level:3},{value:"Partition Array According to Given Pivot",id:"partition-array-according-to-given-pivot",level:2},{value:"Inputs",id:"inputs-1151",level:3},{value:"Sub-problems",id:"sub-problems-1151",level:3},{value:"Edge Cases",id:"edge-cases-1151",level:3},{value:"Further Readings",id:"further-readings-1151",level:3},{value:"Minimum Cost to Set Cooking Time",id:"minimum-cost-to-set-cooking-time",level:2},{value:"Inputs",id:"inputs-1152",level:3},{value:"Sub-problems",id:"sub-problems-1152",level:3},{value:"Edge Cases",id:"edge-cases-1152",level:3},{value:"Further Readings",id:"further-readings-1152",level:3},{value:"Smallest Value of the Rearranged Number",id:"smallest-value-of-the-rearranged-number",level:2},{value:"Inputs",id:"inputs-1153",level:3},{value:"Sub-problems",id:"sub-problems-1153",level:3},{value:"Edge Cases",id:"edge-cases-1153",level:3},{value:"Further Readings",id:"further-readings-1153",level:3},{value:"Design Bitset",id:"design-bitset",level:2},{value:"Inputs",id:"inputs-1154",level:3},{value:"Sub-problems",id:"sub-problems-1154",level:3},{value:"Edge Cases",id:"edge-cases-1154",level:3},{value:"Further Readings",id:"further-readings-1154",level:3},{value:"Unique Substrings With Equal Digit Frequency",id:"unique-substrings-with-equal-digit-frequency",level:2},{value:"Inputs",id:"inputs-1155",level:3},{value:"Sub-problems",id:"sub-problems-1155",level:3},{value:"Edge Cases",id:"edge-cases-1155",level:3},{value:"Further Readings",id:"further-readings-1155",level:3},{value:"Minimum Operations to Make the Array Alternating",id:"minimum-operations-to-make-the-array-alternating",level:2},{value:"Inputs",id:"inputs-1156",level:3},{value:"Sub-problems",id:"sub-problems-1156",level:3},{value:"Edge Cases",id:"edge-cases-1156",level:3},{value:"Further Readings",id:"further-readings-1156",level:3},{value:"Removing Minimum Number of Magic Beans",id:"removing-minimum-number-of-magic-beans",level:2},{value:"Inputs",id:"inputs-1157",level:3},{value:"Sub-problems",id:"sub-problems-1157",level:3},{value:"Edge Cases",id:"edge-cases-1157",level:3},{value:"Further Readings",id:"further-readings-1157",level:3},{value:"Remove All Ones With Row and Column Flips II",id:"remove-all-ones-with-row-and-column-flips-ii",level:2},{value:"Inputs",id:"inputs-1158",level:3},{value:"Sub-problems",id:"sub-problems-1158",level:3},{value:"Edge Cases",id:"edge-cases-1158",level:3},{value:"Further Readings",id:"further-readings-1158",level:3},{value:"The Change in Global Rankings",id:"the-change-in-global-rankings",level:2},{value:"Inputs",id:"inputs-1159",level:3},{value:"Sub-problems",id:"sub-problems-1159",level:3},{value:"Edge Cases",id:"edge-cases-1159",level:3},{value:"Further Readings",id:"further-readings-1159",level:3},{value:"Find Three Consecutive Integers That Sum to a Given Number",id:"find-three-consecutive-integers-that-sum-to-a-given-number",level:2},{value:"Inputs",id:"inputs-1160",level:3},{value:"Sub-problems",id:"sub-problems-1160",level:3},{value:"Edge Cases",id:"edge-cases-1160",level:3},{value:"Further Readings",id:"further-readings-1160",level:3},{value:"Maximum Split of Positive Even Integers",id:"maximum-split-of-positive-even-integers",level:2},{value:"Inputs",id:"inputs-1161",level:3},{value:"Sub-problems",id:"sub-problems-1161",level:3},{value:"Edge Cases",id:"edge-cases-1161",level:3},{value:"Further Readings",id:"further-readings-1161",level:3},{value:"Merge Nodes in Between Zeros",id:"merge-nodes-in-between-zeros",level:2},{value:"Inputs",id:"inputs-1162",level:3},{value:"Sub-problems",id:"sub-problems-1162",level:3},{value:"Edge Cases",id:"edge-cases-1162",level:3},{value:"Further Readings",id:"further-readings-1162",level:3},{value:"Construct String With Repeat Limit",id:"construct-string-with-repeat-limit",level:2},{value:"Inputs",id:"inputs-1163",level:3},{value:"Sub-problems",id:"sub-problems-1163",level:3},{value:"Edge Cases",id:"edge-cases-1163",level:3},{value:"Further Readings",id:"further-readings-1163",level:3},{value:"Number of Ways to Build Sturdy Brick Wall",id:"number-of-ways-to-build-sturdy-brick-wall",level:2},{value:"Inputs",id:"inputs-1164",level:3},{value:"Sub-problems",id:"sub-problems-1164",level:3},{value:"Edge Cases",id:"edge-cases-1164",level:3},{value:"Further Readings",id:"further-readings-1164",level:3},{value:"Minimum Number of Steps to Make Two Strings Anagram II",id:"minimum-number-of-steps-to-make-two-strings-anagram-ii",level:2},{value:"Inputs",id:"inputs-1165",level:3},{value:"Sub-problems",id:"sub-problems-1165",level:3},{value:"Edge Cases",id:"edge-cases-1165",level:3},{value:"Further Readings",id:"further-readings-1165",level:3},{value:"Minimum Time to Complete Trips",id:"minimum-time-to-complete-trips",level:2},{value:"Inputs",id:"inputs-1166",level:3},{value:"Sub-problems",id:"sub-problems-1166",level:3},{value:"Edge Cases",id:"edge-cases-1166",level:3},{value:"Further Readings",id:"further-readings-1166",level:3},{value:"Number of Ways to Build House of Cards",id:"number-of-ways-to-build-house-of-cards",level:2},{value:"Inputs",id:"inputs-1167",level:3},{value:"Sub-problems",id:"sub-problems-1167",level:3},{value:"Edge Cases",id:"edge-cases-1167",level:3},{value:"Further Readings",id:"further-readings-1167",level:3},{value:"Sort the Jumbled Numbers",id:"sort-the-jumbled-numbers",level:2},{value:"Inputs",id:"inputs-1168",level:3},{value:"Sub-problems",id:"sub-problems-1168",level:3},{value:"Edge Cases",id:"edge-cases-1168",level:3},{value:"Further Readings",id:"further-readings-1168",level:3},{value:"All Ancestors of a Node in a Directed Acyclic Graph",id:"all-ancestors-of-a-node-in-a-directed-acyclic-graph",level:2},{value:"Inputs",id:"inputs-1169",level:3},{value:"Sub-problems",id:"sub-problems-1169",level:3},{value:"Edge Cases",id:"edge-cases-1169",level:3},{value:"Further Readings",id:"further-readings-1169",level:3},{value:"Append K Integers With Minimal Sum",id:"append-k-integers-with-minimal-sum",level:2},{value:"Inputs",id:"inputs-1170",level:3},{value:"Sub-problems",id:"sub-problems-1170",level:3},{value:"Edge Cases",id:"edge-cases-1170",level:3},{value:"Further Readings",id:"further-readings-1170",level:3},{value:"Create Binary Tree From Descriptions",id:"create-binary-tree-from-descriptions",level:2},{value:"Inputs",id:"inputs-1171",level:3},{value:"Sub-problems",id:"sub-problems-1171",level:3},{value:"Edge Cases",id:"edge-cases-1171",level:3},{value:"Further Readings",id:"further-readings-1171",level:3},{value:"Number of Single Divisor Triplets",id:"number-of-single-divisor-triplets",level:2},{value:"Inputs",id:"inputs-1172",level:3},{value:"Sub-problems",id:"sub-problems-1172",level:3},{value:"Edge Cases",id:"edge-cases-1172",level:3},{value:"Further Readings",id:"further-readings-1172",level:3},{value:"Count Artifacts That Can Be Extracted",id:"count-artifacts-that-can-be-extracted",level:2},{value:"Inputs",id:"inputs-1173",level:3},{value:"Sub-problems",id:"sub-problems-1173",level:3},{value:"Edge Cases",id:"edge-cases-1173",level:3},{value:"Further Readings",id:"further-readings-1173",level:3},{value:"Maximize the Topmost Element After K Moves",id:"maximize-the-topmost-element-after-k-moves",level:2},{value:"Inputs",id:"inputs-1174",level:3},{value:"Sub-problems",id:"sub-problems-1174",level:3},{value:"Edge Cases",id:"edge-cases-1174",level:3},{value:"Further Readings",id:"further-readings-1174",level:3},{value:"Maximize Number of Subsequences in a String",id:"maximize-number-of-subsequences-in-a-string",level:2},{value:"Inputs",id:"inputs-1175",level:3},{value:"Sub-problems",id:"sub-problems-1175",level:3},{value:"Edge Cases",id:"edge-cases-1175",level:3},{value:"Further Readings",id:"further-readings-1175",level:3},{value:"Minimum Operations to Halve Array Sum",id:"minimum-operations-to-halve-array-sum",level:2},{value:"Inputs",id:"inputs-1176",level:3},{value:"Sub-problems",id:"sub-problems-1176",level:3},{value:"Edge Cases",id:"edge-cases-1176",level:3},{value:"Further Readings",id:"further-readings-1176",level:3},{value:"Count Collisions on a Road",id:"count-collisions-on-a-road",level:2},{value:"Inputs",id:"inputs-1177",level:3},{value:"Sub-problems",id:"sub-problems-1177",level:3},{value:"Edge Cases",id:"edge-cases-1177",level:3},{value:"Further Readings",id:"further-readings-1177",level:3},{value:"Maximum Points in an Archery Competition",id:"maximum-points-in-an-archery-competition",level:2},{value:"Inputs",id:"inputs-1178",level:3},{value:"Sub-problems",id:"sub-problems-1178",level:3},{value:"Edge Cases",id:"edge-cases-1178",level:3},{value:"Further Readings",id:"further-readings-1178",level:3},{value:"Minimum Health to Beat Game",id:"minimum-health-to-beat-game",level:2},{value:"Inputs",id:"inputs-1179",level:3},{value:"Sub-problems",id:"sub-problems-1179",level:3},{value:"Edge Cases",id:"edge-cases-1179",level:3},{value:"Further Readings",id:"further-readings-1179",level:3},{value:"Minimum Deletions to Make Array Beautiful",id:"minimum-deletions-to-make-array-beautiful",level:2},{value:"Inputs",id:"inputs-1180",level:3},{value:"Sub-problems",id:"sub-problems-1180",level:3},{value:"Edge Cases",id:"edge-cases-1180",level:3},{value:"Further Readings",id:"further-readings-1180",level:3},{value:"Find Palindrome With Fixed Length",id:"find-palindrome-with-fixed-length",level:2},{value:"Inputs",id:"inputs-1181",level:3},{value:"Sub-problems",id:"sub-problems-1181",level:3},{value:"Edge Cases",id:"edge-cases-1181",level:3},{value:"Further Readings",id:"further-readings-1181",level:3},{value:"Maximum Sum Score of Array",id:"maximum-sum-score-of-array",level:2},{value:"Inputs",id:"inputs-1182",level:3},{value:"Sub-problems",id:"sub-problems-1182",level:3},{value:"Edge Cases",id:"edge-cases-1182",level:3},{value:"Further Readings",id:"further-readings-1182",level:3},{value:"Find Triangular Sum of an Array",id:"find-triangular-sum-of-an-array",level:2},{value:"Inputs",id:"inputs-1183",level:3},{value:"Sub-problems",id:"sub-problems-1183",level:3},{value:"Edge Cases",id:"edge-cases-1183",level:3},{value:"Further Readings",id:"further-readings-1183",level:3},{value:"Number of Ways to Select Buildings",id:"number-of-ways-to-select-buildings",level:2},{value:"Inputs",id:"inputs-1184",level:3},{value:"Sub-problems",id:"sub-problems-1184",level:3},{value:"Edge Cases",id:"edge-cases-1184",level:3},{value:"Further Readings",id:"further-readings-1184",level:3},{value:"Find Players With Zero or One Losses",id:"find-players-with-zero-or-one-losses",level:2},{value:"Inputs",id:"inputs-1185",level:3},{value:"Sub-problems",id:"sub-problems-1185",level:3},{value:"Edge Cases",id:"edge-cases-1185",level:3},{value:"Further Readings",id:"further-readings-1185",level:3},{value:"Maximum Candies Allocated to K Children",id:"maximum-candies-allocated-to-k-children",level:2},{value:"Inputs",id:"inputs-1186",level:3},{value:"Sub-problems",id:"sub-problems-1186",level:3},{value:"Edge Cases",id:"edge-cases-1186",level:3},{value:"Further Readings",id:"further-readings-1186",level:3},{value:"Users With Two Purchases Within Seven Days",id:"users-with-two-purchases-within-seven-days",level:2},{value:"Inputs",id:"inputs-1187",level:3},{value:"Sub-problems",id:"sub-problems-1187",level:3},{value:"Edge Cases",id:"edge-cases-1187",level:3},{value:"Further Readings",id:"further-readings-1187",level:3},{value:"Minimize Result by Adding Parentheses to Expression",id:"minimize-result-by-adding-parentheses-to-expression",level:2},{value:"Inputs",id:"inputs-1188",level:3},{value:"Sub-problems",id:"sub-problems-1188",level:3},{value:"Edge Cases",id:"edge-cases-1188",level:3},{value:"Further Readings",id:"further-readings-1188",level:3},{value:"Maximum Product After K Increments",id:"maximum-product-after-k-increments",level:2},{value:"Inputs",id:"inputs-1189",level:3},{value:"Sub-problems",id:"sub-problems-1189",level:3},{value:"Edge Cases",id:"edge-cases-1189",level:3},{value:"Further Readings",id:"further-readings-1189",level:3},{value:"Count Positions on Street With Required Brightness",id:"count-positions-on-street-with-required-brightness",level:2},{value:"Inputs",id:"inputs-1190",level:3},{value:"Sub-problems",id:"sub-problems-1190",level:3},{value:"Edge Cases",id:"edge-cases-1190",level:3},{value:"Further Readings",id:"further-readings-1190",level:3},{value:"Number of Times a Driver Was a Passenger",id:"number-of-times-a-driver-was-a-passenger",level:2},{value:"Inputs",id:"inputs-1191",level:3},{value:"Sub-problems",id:"sub-problems-1191",level:3},{value:"Edge Cases",id:"edge-cases-1191",level:3},{value:"Further Readings",id:"further-readings-1191",level:3},{value:"Number of Ways to Buy Pens and Pencils",id:"number-of-ways-to-buy-pens-and-pencils",level:2},{value:"Inputs",id:"inputs-1192",level:3},{value:"Sub-problems",id:"sub-problems-1192",level:3},{value:"Edge Cases",id:"edge-cases-1192",level:3},{value:"Further Readings",id:"further-readings-1192",level:3},{value:"Design an ATM Machine",id:"design-an-atm-machine",level:2},{value:"Inputs",id:"inputs-1193",level:3},{value:"Sub-problems",id:"sub-problems-1193",level:3},{value:"Edge Cases",id:"edge-cases-1193",level:3},{value:"Further Readings",id:"further-readings-1193",level:3},{value:"Minimum Rounds to Complete All Tasks",id:"minimum-rounds-to-complete-all-tasks",level:2},{value:"Inputs",id:"inputs-1194",level:3},{value:"Sub-problems",id:"sub-problems-1194",level:3},{value:"Edge Cases",id:"edge-cases-1194",level:3},{value:"Further Readings",id:"further-readings-1194",level:3},{value:"Maximum Trailing Zeros in a Cornered Path",id:"maximum-trailing-zeros-in-a-cornered-path",level:2},{value:"Inputs",id:"inputs-1195",level:3},{value:"Sub-problems",id:"sub-problems-1195",level:3},{value:"Edge Cases",id:"edge-cases-1195",level:3},{value:"Further Readings",id:"further-readings-1195",level:3},{value:"Count Lattice Points Inside a Circle",id:"count-lattice-points-inside-a-circle",level:2},{value:"Inputs",id:"inputs-1196",level:3},{value:"Sub-problems",id:"sub-problems-1196",level:3},{value:"Edge Cases",id:"edge-cases-1196",level:3},{value:"Further Readings",id:"further-readings-1196",level:3},{value:"Count Number of Rectangles Containing Each Point",id:"count-number-of-rectangles-containing-each-point",level:2},{value:"Inputs",id:"inputs-1197",level:3},{value:"Sub-problems",id:"sub-problems-1197",level:3},{value:"Edge Cases",id:"edge-cases-1197",level:3},{value:"Further Readings",id:"further-readings-1197",level:3},{value:"Minimum Average Difference",id:"minimum-average-difference",level:2},{value:"Inputs",id:"inputs-1198",level:3},{value:"Sub-problems",id:"sub-problems-1198",level:3},{value:"Edge Cases",id:"edge-cases-1198",level:3},{value:"Further Readings",id:"further-readings-1198",level:3},{value:"Count Unguarded Cells in the Grid",id:"count-unguarded-cells-in-the-grid",level:2},{value:"Inputs",id:"inputs-1199",level:3},{value:"Sub-problems",id:"sub-problems-1199",level:3},{value:"Edge Cases",id:"edge-cases-1199",level:3},{value:"Further Readings",id:"further-readings-1199",level:3},{value:"Minimum Consecutive Cards to Pick Up",id:"minimum-consecutive-cards-to-pick-up",level:2},{value:"Inputs",id:"inputs-1200",level:3},{value:"Sub-problems",id:"sub-problems-1200",level:3},{value:"Edge Cases",id:"edge-cases-1200",level:3},{value:"Further Readings",id:"further-readings-1200",level:3},{value:"K Divisible Elements Subarrays",id:"k-divisible-elements-subarrays",level:2},{value:"Inputs",id:"inputs-1201",level:3},{value:"Sub-problems",id:"sub-problems-1201",level:3},{value:"Edge Cases",id:"edge-cases-1201",level:3},{value:"Further Readings",id:"further-readings-1201",level:3},{value:"Count Nodes Equal to Average of Subtree",id:"count-nodes-equal-to-average-of-subtree",level:2},{value:"Inputs",id:"inputs-1202",level:3},{value:"Sub-problems",id:"sub-problems-1202",level:3},{value:"Edge Cases",id:"edge-cases-1202",level:3},{value:"Further Readings",id:"further-readings-1202",level:3},{value:"Count Number of Texts",id:"count-number-of-texts",level:2},{value:"Inputs",id:"inputs-1203",level:3},{value:"Sub-problems",id:"sub-problems-1203",level:3},{value:"Edge Cases",id:"edge-cases-1203",level:3},{value:"Further Readings",id:"further-readings-1203",level:3},{value:"Minimum Number of Keypresses",id:"minimum-number-of-keypresses",level:2},{value:"Inputs",id:"inputs-1204",level:3},{value:"Sub-problems",id:"sub-problems-1204",level:3},{value:"Edge Cases",id:"edge-cases-1204",level:3},{value:"Further Readings",id:"further-readings-1204",level:3},{value:"Number of Ways to Split Array",id:"number-of-ways-to-split-array",level:2},{value:"Inputs",id:"inputs-1205",level:3},{value:"Sub-problems",id:"sub-problems-1205",level:3},{value:"Edge Cases",id:"edge-cases-1205",level:3},{value:"Further Readings",id:"further-readings-1205",level:3},{value:"Maximum White Tiles Covered by a Carpet",id:"maximum-white-tiles-covered-by-a-carpet",level:2},{value:"Inputs",id:"inputs-1206",level:3},{value:"Sub-problems",id:"sub-problems-1206",level:3},{value:"Edge Cases",id:"edge-cases-1206",level:3},{value:"Further Readings",id:"further-readings-1206",level:3},{value:"Maximum Consecutive Floors Without Special Floors",id:"maximum-consecutive-floors-without-special-floors",level:2},{value:"Inputs",id:"inputs-1207",level:3},{value:"Sub-problems",id:"sub-problems-1207",level:3},{value:"Edge Cases",id:"edge-cases-1207",level:3},{value:"Further Readings",id:"further-readings-1207",level:3},{value:"Largest Combination With Bitwise AND Greater Than Zero",id:"largest-combination-with-bitwise-and-greater-than-zero",level:2},{value:"Inputs",id:"inputs-1208",level:3},{value:"Sub-problems",id:"sub-problems-1208",level:3},{value:"Edge Cases",id:"edge-cases-1208",level:3},{value:"Further Readings",id:"further-readings-1208",level:3},{value:"Maximum Bags With Full Capacity of Rocks",id:"maximum-bags-with-full-capacity-of-rocks",level:2},{value:"Inputs",id:"inputs-1209",level:3},{value:"Sub-problems",id:"sub-problems-1209",level:3},{value:"Edge Cases",id:"edge-cases-1209",level:3},{value:"Further Readings",id:"further-readings-1209",level:3},{value:"Minimum Lines to Represent a Line Chart",id:"minimum-lines-to-represent-a-line-chart",level:2},{value:"Inputs",id:"inputs-1210",level:3},{value:"Sub-problems",id:"sub-problems-1210",level:3},{value:"Edge Cases",id:"edge-cases-1210",level:3},{value:"Further Readings",id:"further-readings-1210",level:3},{value:"Number of People That Can Be Seen in a Grid",id:"number-of-people-that-can-be-seen-in-a-grid",level:2},{value:"Inputs",id:"inputs-1211",level:3},{value:"Sub-problems",id:"sub-problems-1211",level:3},{value:"Edge Cases",id:"edge-cases-1211",level:3},{value:"Further Readings",id:"further-readings-1211",level:3},{value:"Sender With Largest Word Count",id:"sender-with-largest-word-count",level:2},{value:"Inputs",id:"inputs-1212",level:3},{value:"Sub-problems",id:"sub-problems-1212",level:3},{value:"Edge Cases",id:"edge-cases-1212",level:3},{value:"Further Readings",id:"further-readings-1212",level:3},{value:"Maximum Total Importance of Roads",id:"maximum-total-importance-of-roads",level:2},{value:"Inputs",id:"inputs-1213",level:3},{value:"Sub-problems",id:"sub-problems-1213",level:3},{value:"Edge Cases",id:"edge-cases-1213",level:3},{value:"Further Readings",id:"further-readings-1213",level:3},{value:"Apply Discount to Prices",id:"apply-discount-to-prices",level:2},{value:"Inputs",id:"inputs-1214",level:3},{value:"Sub-problems",id:"sub-problems-1214",level:3},{value:"Edge Cases",id:"edge-cases-1214",level:3},{value:"Further Readings",id:"further-readings-1214",level:3},{value:"Steps to Make Array Non-decreasing",id:"steps-to-make-array-non-decreasing",level:2},{value:"Inputs",id:"inputs-1215",level:3},{value:"Sub-problems",id:"sub-problems-1215",level:3},{value:"Edge Cases",id:"edge-cases-1215",level:3},{value:"Further Readings",id:"further-readings-1215",level:3},{value:"Maximum Profit From Trading Stocks",id:"maximum-profit-from-trading-stocks",level:2},{value:"Inputs",id:"inputs-1216",level:3},{value:"Sub-problems",id:"sub-problems-1216",level:3},{value:"Edge Cases",id:"edge-cases-1216",level:3},{value:"Further Readings",id:"further-readings-1216",level:3},{value:"Products With Three or More Orders in Two Consecutive Years",id:"products-with-three-or-more-orders-in-two-consecutive-years",level:2},{value:"Inputs",id:"inputs-1217",level:3},{value:"Sub-problems",id:"sub-problems-1217",level:3},{value:"Edge Cases",id:"edge-cases-1217",level:3},{value:"Further Readings",id:"further-readings-1217",level:3},{value:"Partition Array Such That Maximum Difference Is K",id:"partition-array-such-that-maximum-difference-is-k",level:2},{value:"Inputs",id:"inputs-1218",level:3},{value:"Sub-problems",id:"sub-problems-1218",level:3},{value:"Edge Cases",id:"edge-cases-1218",level:3},{value:"Further Readings",id:"further-readings-1218",level:3},{value:"Replace Elements in an Array",id:"replace-elements-in-an-array",level:2},{value:"Inputs",id:"inputs-1219",level:3},{value:"Sub-problems",id:"sub-problems-1219",level:3},{value:"Edge Cases",id:"edge-cases-1219",level:3},{value:"Further Readings",id:"further-readings-1219",level:3},{value:"Jump Game IX",id:"jump-game-ix",level:2},{value:"Inputs",id:"inputs-1220",level:3},{value:"Sub-problems",id:"sub-problems-1220",level:3},{value:"Edge Cases",id:"edge-cases-1220",level:3},{value:"Further Readings",id:"further-readings-1220",level:3}],p={toc:g};function h(e){var s=e.components,a=(0,t.Z)(e,r);return(0,l.kt)("wrapper",(0,i.Z)({},p,a,{components:s,mdxType:"MDXLayout"}),(0,l.kt)("p",null,"This will cover up all the medium questions that are available on Leetcode."),(0,l.kt)("h2",{id:"add-two-numbers"},"Add Two Numbers"),(0,l.kt)("span",{class:"tag-is-success"},"Linked List"),(0,l.kt)("span",{class:"tag-is-success"},"Math"),(0,l.kt)("span",{class:"tag-is-success"},"Recursion"),(0,l.kt)("h3",{id:"inputs"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings"},"Further Readings"),(0,l.kt)("h2",{id:"longest-substring-without-repeating-characters"},"Longest Substring Without Repeating Characters"),(0,l.kt)("span",{class:"tag-is-success"},"Hash Table"),(0,l.kt)("span",{class:"tag-is-success"},"String"),(0,l.kt)("span",{class:"tag-is-success"},"Sliding Window"),(0,l.kt)("h3",{id:"inputs-1"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-1"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-1"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-1"},"Further Readings"),(0,l.kt)("h2",{id:"longest-palindromic-substring"},"Longest Palindromic Substring"),(0,l.kt)("span",{class:"tag-is-success"},"String"),(0,l.kt)("span",{class:"tag-is-success"},"Dynamic Programming"),(0,l.kt)("h3",{id:"inputs-2"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-2"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-2"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-2"},"Further Readings"),(0,l.kt)("h2",{id:"zigzag-conversion"},"Zigzag Conversion"),(0,l.kt)("span",{class:"tag-is-success"},"String"),(0,l.kt)("h3",{id:"inputs-3"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-3"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-3"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-3"},"Further Readings"),(0,l.kt)("h2",{id:"reverse-integer"},"Reverse Integer"),(0,l.kt)("span",{class:"tag-is-success"},"Math"),(0,l.kt)("h3",{id:"inputs-4"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-4"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-4"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-4"},"Further Readings"),(0,l.kt)("h2",{id:"string-to-integer-atoi"},"String to Integer (atoi)"),(0,l.kt)("span",{class:"tag-is-success"},"String"),(0,l.kt)("h3",{id:"inputs-5"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-5"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-5"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-5"},"Further Readings"),(0,l.kt)("h2",{id:"container-with-most-water"},"Container With Most Water"),(0,l.kt)("span",{class:"tag-is-success"},"Array"),(0,l.kt)("span",{class:"tag-is-success"},"Two Pointers"),(0,l.kt)("span",{class:"tag-is-success"},"Greedy"),(0,l.kt)("h3",{id:"inputs-6"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-6"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-6"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-6"},"Further Readings"),(0,l.kt)("h2",{id:"integer-to-roman"},"Integer to Roman"),(0,l.kt)("span",{class:"tag-is-success"},"Hash Table"),(0,l.kt)("span",{class:"tag-is-success"},"Math"),(0,l.kt)("span",{class:"tag-is-success"},"String"),(0,l.kt)("h3",{id:"inputs-7"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-7"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-7"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-7"},"Further Readings"),(0,l.kt)("h2",{id:"3sum"},"3Sum"),(0,l.kt)("span",{class:"tag-is-success"},"Array"),(0,l.kt)("span",{class:"tag-is-success"},"Two Pointers"),(0,l.kt)("span",{class:"tag-is-success"},"Sorting"),(0,l.kt)("h3",{id:"inputs-8"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-8"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-8"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-8"},"Further Readings"),(0,l.kt)("h2",{id:"3sum-closest"},"3Sum Closest"),(0,l.kt)("span",{class:"tag-is-success"},"Array"),(0,l.kt)("span",{class:"tag-is-success"},"Two Pointers"),(0,l.kt)("span",{class:"tag-is-success"},"Sorting"),(0,l.kt)("h3",{id:"inputs-9"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-9"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-9"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-9"},"Further Readings"),(0,l.kt)("h2",{id:"letter-combinations-of-a-phone-number"},"Letter Combinations of a Phone Number"),(0,l.kt)("span",{class:"tag-is-success"},"Hash Table"),(0,l.kt)("span",{class:"tag-is-success"},"String"),(0,l.kt)("span",{class:"tag-is-success"},"Backtracking"),(0,l.kt)("h3",{id:"inputs-10"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-10"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-10"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-10"},"Further Readings"),(0,l.kt)("h2",{id:"4sum"},"4Sum"),(0,l.kt)("span",{class:"tag-is-success"},"Array"),(0,l.kt)("span",{class:"tag-is-success"},"Two Pointers"),(0,l.kt)("span",{class:"tag-is-success"},"Sorting"),(0,l.kt)("h3",{id:"inputs-11"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-11"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-11"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-11"},"Further Readings"),(0,l.kt)("h2",{id:"remove-nth-node-from-end-of-list"},"Remove Nth Node From End of List"),(0,l.kt)("span",{class:"tag-is-success"},"Linked List"),(0,l.kt)("span",{class:"tag-is-success"},"Two Pointers"),(0,l.kt)("h3",{id:"inputs-12"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-12"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-12"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-12"},"Further Readings"),(0,l.kt)("h2",{id:"generate-parentheses"},"Generate Parentheses"),(0,l.kt)("span",{class:"tag-is-success"},"String"),(0,l.kt)("span",{class:"tag-is-success"},"Dynamic Programming"),(0,l.kt)("span",{class:"tag-is-success"},"Backtracking"),(0,l.kt)("h3",{id:"inputs-13"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-13"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-13"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-13"},"Further Readings"),(0,l.kt)("h2",{id:"swap-nodes-in-pairs"},"Swap Nodes in Pairs"),(0,l.kt)("span",{class:"tag-is-success"},"Linked List"),(0,l.kt)("span",{class:"tag-is-success"},"Recursion"),(0,l.kt)("h3",{id:"inputs-14"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-14"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-14"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-14"},"Further Readings"),(0,l.kt)("h2",{id:"divide-two-integers"},"Divide Two Integers"),(0,l.kt)("span",{class:"tag-is-success"},"Math"),(0,l.kt)("span",{class:"tag-is-success"},"Bit Manipulation"),(0,l.kt)("h3",{id:"inputs-15"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-15"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-15"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-15"},"Further Readings"),(0,l.kt)("h2",{id:"next-permutation"},"Next Permutation"),(0,l.kt)("span",{class:"tag-is-success"},"Array"),(0,l.kt)("span",{class:"tag-is-success"},"Two Pointers"),(0,l.kt)("h3",{id:"inputs-16"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-16"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-16"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-16"},"Further Readings"),(0,l.kt)("h2",{id:"search-in-rotated-sorted-array"},"Search in Rotated Sorted Array"),(0,l.kt)("span",{class:"tag-is-success"},"Array"),(0,l.kt)("span",{class:"tag-is-success"},"Binary Search"),(0,l.kt)("h3",{id:"inputs-17"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-17"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-17"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-17"},"Further Readings"),(0,l.kt)("h2",{id:"find-first-and-last-position-of-element-in-sorted-array"},"Find First and Last Position of Element in Sorted Array"),(0,l.kt)("span",{class:"tag-is-success"},"Array"),(0,l.kt)("span",{class:"tag-is-success"},"Binary Search"),(0,l.kt)("h3",{id:"inputs-18"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-18"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-18"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-18"},"Further Readings"),(0,l.kt)("h2",{id:"valid-sudoku"},"Valid Sudoku"),(0,l.kt)("span",{class:"tag-is-success"},"Array"),(0,l.kt)("span",{class:"tag-is-success"},"Hash Table"),(0,l.kt)("span",{class:"tag-is-success"},"Matrix"),(0,l.kt)("h3",{id:"inputs-19"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-19"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-19"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-19"},"Further Readings"),(0,l.kt)("h2",{id:"count-and-say"},"Count and Say"),(0,l.kt)("span",{class:"tag-is-success"},"String"),(0,l.kt)("h3",{id:"inputs-20"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-20"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-20"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-20"},"Further Readings"),(0,l.kt)("h2",{id:"combination-sum"},"Combination Sum"),(0,l.kt)("span",{class:"tag-is-success"},"Array"),(0,l.kt)("span",{class:"tag-is-success"},"Backtracking"),(0,l.kt)("h3",{id:"inputs-21"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-21"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-21"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-21"},"Further Readings"),(0,l.kt)("h2",{id:"combination-sum-ii"},"Combination Sum II"),(0,l.kt)("span",{class:"tag-is-success"},"Array"),(0,l.kt)("span",{class:"tag-is-success"},"Backtracking"),(0,l.kt)("h3",{id:"inputs-22"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-22"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-22"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-22"},"Further Readings"),(0,l.kt)("h2",{id:"multiply-strings"},"Multiply Strings"),(0,l.kt)("span",{class:"tag-is-success"},"Math"),(0,l.kt)("span",{class:"tag-is-success"},"String"),(0,l.kt)("span",{class:"tag-is-success"},"Simulation"),(0,l.kt)("h3",{id:"inputs-23"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-23"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-23"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-23"},"Further Readings"),(0,l.kt)("h2",{id:"jump-game-ii"},"Jump Game II"),(0,l.kt)("span",{class:"tag-is-success"},"Array"),(0,l.kt)("span",{class:"tag-is-success"},"Dynamic Programming"),(0,l.kt)("span",{class:"tag-is-success"},"Greedy"),(0,l.kt)("h3",{id:"inputs-24"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-24"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-24"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-24"},"Further Readings"),(0,l.kt)("h2",{id:"permutations"},"Permutations"),(0,l.kt)("span",{class:"tag-is-success"},"Array"),(0,l.kt)("span",{class:"tag-is-success"},"Backtracking"),(0,l.kt)("h3",{id:"inputs-25"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-25"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-25"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-25"},"Further Readings"),(0,l.kt)("h2",{id:"permutations-ii"},"Permutations II"),(0,l.kt)("span",{class:"tag-is-success"},"Array"),(0,l.kt)("span",{class:"tag-is-success"},"Backtracking"),(0,l.kt)("h3",{id:"inputs-26"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-26"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-26"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-26"},"Further Readings"),(0,l.kt)("h2",{id:"rotate-image"},"Rotate Image"),(0,l.kt)("span",{class:"tag-is-success"},"Array"),(0,l.kt)("span",{class:"tag-is-success"},"Math"),(0,l.kt)("span",{class:"tag-is-success"},"Matrix"),(0,l.kt)("h3",{id:"inputs-27"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-27"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-27"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-27"},"Further Readings"),(0,l.kt)("h2",{id:"group-anagrams"},"Group Anagrams"),(0,l.kt)("span",{class:"tag-is-success"},"Array"),(0,l.kt)("span",{class:"tag-is-success"},"Hash Table"),(0,l.kt)("span",{class:"tag-is-success"},"String"),(0,l.kt)("span",{class:"tag-is-success"},"Sorting"),(0,l.kt)("h3",{id:"inputs-28"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-28"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-28"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-28"},"Further Readings"),(0,l.kt)("h2",{id:"powx-n"},"Pow(x, n)"),(0,l.kt)("span",{class:"tag-is-success"},"Math"),(0,l.kt)("span",{class:"tag-is-success"},"Recursion"),(0,l.kt)("h3",{id:"inputs-29"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-29"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-29"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-29"},"Further Readings"),(0,l.kt)("h2",{id:"spiral-matrix"},"Spiral Matrix"),(0,l.kt)("span",{class:"tag-is-success"},"Array"),(0,l.kt)("span",{class:"tag-is-success"},"Matrix"),(0,l.kt)("span",{class:"tag-is-success"},"Simulation"),(0,l.kt)("h3",{id:"inputs-30"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-30"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-30"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-30"},"Further Readings"),(0,l.kt)("h2",{id:"jump-game"},"Jump Game"),(0,l.kt)("span",{class:"tag-is-success"},"Array"),(0,l.kt)("span",{class:"tag-is-success"},"Dynamic Programming"),(0,l.kt)("span",{class:"tag-is-success"},"Greedy"),(0,l.kt)("h3",{id:"inputs-31"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-31"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-31"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-31"},"Further Readings"),(0,l.kt)("h2",{id:"merge-intervals"},"Merge Intervals"),(0,l.kt)("span",{class:"tag-is-success"},"Array"),(0,l.kt)("span",{class:"tag-is-success"},"Sorting"),(0,l.kt)("h3",{id:"inputs-32"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-32"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-32"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-32"},"Further Readings"),(0,l.kt)("h2",{id:"insert-interval"},"Insert Interval"),(0,l.kt)("span",{class:"tag-is-success"},"Array"),(0,l.kt)("h3",{id:"inputs-33"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-33"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-33"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-33"},"Further Readings"),(0,l.kt)("h2",{id:"spiral-matrix-ii"},"Spiral Matrix II"),(0,l.kt)("span",{class:"tag-is-success"},"Array"),(0,l.kt)("span",{class:"tag-is-success"},"Matrix"),(0,l.kt)("span",{class:"tag-is-success"},"Simulation"),(0,l.kt)("h3",{id:"inputs-34"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-34"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-34"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-34"},"Further Readings"),(0,l.kt)("h2",{id:"rotate-list"},"Rotate List"),(0,l.kt)("span",{class:"tag-is-success"},"Linked List"),(0,l.kt)("span",{class:"tag-is-success"},"Two Pointers"),(0,l.kt)("h3",{id:"inputs-35"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-35"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-35"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-35"},"Further Readings"),(0,l.kt)("h2",{id:"unique-paths"},"Unique Paths"),(0,l.kt)("span",{class:"tag-is-success"},"Math"),(0,l.kt)("span",{class:"tag-is-success"},"Dynamic Programming"),(0,l.kt)("span",{class:"tag-is-success"},"Combinatorics"),(0,l.kt)("h3",{id:"inputs-36"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-36"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-36"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-36"},"Further Readings"),(0,l.kt)("h2",{id:"unique-paths-ii"},"Unique Paths II"),(0,l.kt)("span",{class:"tag-is-success"},"Array"),(0,l.kt)("span",{class:"tag-is-success"},"Dynamic Programming"),(0,l.kt)("span",{class:"tag-is-success"},"Matrix"),(0,l.kt)("h3",{id:"inputs-37"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-37"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-37"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-37"},"Further Readings"),(0,l.kt)("h2",{id:"minimum-path-sum"},"Minimum Path Sum"),(0,l.kt)("span",{class:"tag-is-success"},"Array"),(0,l.kt)("span",{class:"tag-is-success"},"Dynamic Programming"),(0,l.kt)("span",{class:"tag-is-success"},"Matrix"),(0,l.kt)("h3",{id:"inputs-38"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-38"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-38"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-38"},"Further Readings"),(0,l.kt)("h2",{id:"simplify-path"},"Simplify Path"),(0,l.kt)("span",{class:"tag-is-success"},"String"),(0,l.kt)("span",{class:"tag-is-success"},"Stack"),(0,l.kt)("h3",{id:"inputs-39"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-39"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-39"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-39"},"Further Readings"),(0,l.kt)("h2",{id:"set-matrix-zeroes"},"Set Matrix Zeroes"),(0,l.kt)("span",{class:"tag-is-success"},"Array"),(0,l.kt)("span",{class:"tag-is-success"},"Hash Table"),(0,l.kt)("span",{class:"tag-is-success"},"Matrix"),(0,l.kt)("h3",{id:"inputs-40"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-40"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-40"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-40"},"Further Readings"),(0,l.kt)("h2",{id:"search-a-2d-matrix"},"Search a 2D Matrix"),(0,l.kt)("span",{class:"tag-is-success"},"Array"),(0,l.kt)("span",{class:"tag-is-success"},"Binary Search"),(0,l.kt)("span",{class:"tag-is-success"},"Matrix"),(0,l.kt)("h3",{id:"inputs-41"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-41"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-41"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-41"},"Further Readings"),(0,l.kt)("h2",{id:"sort-colors"},"Sort Colors"),(0,l.kt)("span",{class:"tag-is-success"},"Array"),(0,l.kt)("span",{class:"tag-is-success"},"Two Pointers"),(0,l.kt)("span",{class:"tag-is-success"},"Sorting"),(0,l.kt)("h3",{id:"inputs-42"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-42"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-42"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-42"},"Further Readings"),(0,l.kt)("h2",{id:"combinations"},"Combinations"),(0,l.kt)("span",{class:"tag-is-success"},"Backtracking"),(0,l.kt)("h3",{id:"inputs-43"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-43"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-43"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-43"},"Further Readings"),(0,l.kt)("h2",{id:"subsets"},"Subsets"),(0,l.kt)("span",{class:"tag-is-success"},"Array"),(0,l.kt)("span",{class:"tag-is-success"},"Backtracking"),(0,l.kt)("span",{class:"tag-is-success"},"Bit Manipulation"),(0,l.kt)("h3",{id:"inputs-44"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-44"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-44"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-44"},"Further Readings"),(0,l.kt)("h2",{id:"word-search"},"Word Search"),(0,l.kt)("span",{class:"tag-is-success"},"Array"),(0,l.kt)("span",{class:"tag-is-success"},"Backtracking"),(0,l.kt)("span",{class:"tag-is-success"},"Matrix"),(0,l.kt)("h3",{id:"inputs-45"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-45"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-45"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-45"},"Further Readings"),(0,l.kt)("h2",{id:"remove-duplicates-from-sorted-array-ii"},"Remove Duplicates from Sorted Array II"),(0,l.kt)("span",{class:"tag-is-success"},"Array"),(0,l.kt)("span",{class:"tag-is-success"},"Two Pointers"),(0,l.kt)("h3",{id:"inputs-46"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-46"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-46"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-46"},"Further Readings"),(0,l.kt)("h2",{id:"search-in-rotated-sorted-array-ii"},"Search in Rotated Sorted Array II"),(0,l.kt)("span",{class:"tag-is-success"},"Array"),(0,l.kt)("span",{class:"tag-is-success"},"Binary Search"),(0,l.kt)("h3",{id:"inputs-47"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-47"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-47"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-47"},"Further Readings"),(0,l.kt)("h2",{id:"remove-duplicates-from-sorted-list-ii"},"Remove Duplicates from Sorted List II"),(0,l.kt)("span",{class:"tag-is-success"},"Linked List"),(0,l.kt)("span",{class:"tag-is-success"},"Two Pointers"),(0,l.kt)("h3",{id:"inputs-48"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-48"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-48"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-48"},"Further Readings"),(0,l.kt)("h2",{id:"partition-list"},"Partition List"),(0,l.kt)("span",{class:"tag-is-success"},"Linked List"),(0,l.kt)("span",{class:"tag-is-success"},"Two Pointers"),(0,l.kt)("h3",{id:"inputs-49"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-49"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-49"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-49"},"Further Readings"),(0,l.kt)("h2",{id:"gray-code"},"Gray Code"),(0,l.kt)("span",{class:"tag-is-success"},"Math"),(0,l.kt)("span",{class:"tag-is-success"},"Backtracking"),(0,l.kt)("span",{class:"tag-is-success"},"Bit Manipulation"),(0,l.kt)("h3",{id:"inputs-50"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-50"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-50"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-50"},"Further Readings"),(0,l.kt)("h2",{id:"subsets-ii"},"Subsets II"),(0,l.kt)("span",{class:"tag-is-success"},"Array"),(0,l.kt)("span",{class:"tag-is-success"},"Backtracking"),(0,l.kt)("span",{class:"tag-is-success"},"Bit Manipulation"),(0,l.kt)("h3",{id:"inputs-51"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-51"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-51"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-51"},"Further Readings"),(0,l.kt)("h2",{id:"decode-ways"},"Decode Ways"),(0,l.kt)("span",{class:"tag-is-success"},"String"),(0,l.kt)("span",{class:"tag-is-success"},"Dynamic Programming"),(0,l.kt)("h3",{id:"inputs-52"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-52"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-52"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-52"},"Further Readings"),(0,l.kt)("h2",{id:"reverse-linked-list-ii"},"Reverse Linked List II"),(0,l.kt)("span",{class:"tag-is-success"},"Linked List"),(0,l.kt)("h3",{id:"inputs-53"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-53"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-53"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-53"},"Further Readings"),(0,l.kt)("h2",{id:"restore-ip-addresses"},"Restore IP Addresses"),(0,l.kt)("span",{class:"tag-is-success"},"String"),(0,l.kt)("span",{class:"tag-is-success"},"Backtracking"),(0,l.kt)("h3",{id:"inputs-54"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-54"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-54"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-54"},"Further Readings"),(0,l.kt)("h2",{id:"unique-binary-search-trees-ii"},"Unique Binary Search Trees II"),(0,l.kt)("span",{class:"tag-is-success"},"Dynamic Programming"),(0,l.kt)("span",{class:"tag-is-success"},"Backtracking"),(0,l.kt)("span",{class:"tag-is-success"},"Tree"),(0,l.kt)("span",{class:"tag-is-success"},"Binary Search Tree"),(0,l.kt)("span",{class:"tag-is-success"},"Binary Tree"),(0,l.kt)("h3",{id:"inputs-55"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-55"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-55"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-55"},"Further Readings"),(0,l.kt)("h2",{id:"unique-binary-search-trees"},"Unique Binary Search Trees"),(0,l.kt)("span",{class:"tag-is-success"},"Math"),(0,l.kt)("span",{class:"tag-is-success"},"Dynamic Programming"),(0,l.kt)("span",{class:"tag-is-success"},"Tree"),(0,l.kt)("span",{class:"tag-is-success"},"Binary Search Tree"),(0,l.kt)("span",{class:"tag-is-success"},"Binary Tree"),(0,l.kt)("h3",{id:"inputs-56"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-56"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-56"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-56"},"Further Readings"),(0,l.kt)("h2",{id:"interleaving-string"},"Interleaving String"),(0,l.kt)("span",{class:"tag-is-success"},"String"),(0,l.kt)("span",{class:"tag-is-success"},"Dynamic Programming"),(0,l.kt)("h3",{id:"inputs-57"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-57"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-57"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-57"},"Further Readings"),(0,l.kt)("h2",{id:"validate-binary-search-tree"},"Validate Binary Search Tree"),(0,l.kt)("span",{class:"tag-is-success"},"Tree"),(0,l.kt)("span",{class:"tag-is-success"},"Depth-First Search"),(0,l.kt)("span",{class:"tag-is-success"},"Binary Search Tree"),(0,l.kt)("span",{class:"tag-is-success"},"Binary Tree"),(0,l.kt)("h3",{id:"inputs-58"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-58"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-58"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-58"},"Further Readings"),(0,l.kt)("h2",{id:"recover-binary-search-tree"},"Recover Binary Search Tree"),(0,l.kt)("span",{class:"tag-is-success"},"Tree"),(0,l.kt)("span",{class:"tag-is-success"},"Depth-First Search"),(0,l.kt)("span",{class:"tag-is-success"},"Binary Search Tree"),(0,l.kt)("span",{class:"tag-is-success"},"Binary Tree"),(0,l.kt)("h3",{id:"inputs-59"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-59"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-59"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-59"},"Further Readings"),(0,l.kt)("h2",{id:"binary-tree-level-order-traversal"},"Binary Tree Level Order Traversal"),(0,l.kt)("span",{class:"tag-is-success"},"Tree"),(0,l.kt)("span",{class:"tag-is-success"},"Breadth-First Search"),(0,l.kt)("span",{class:"tag-is-success"},"Binary Tree"),(0,l.kt)("h3",{id:"inputs-60"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-60"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-60"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-60"},"Further Readings"),(0,l.kt)("h2",{id:"binary-tree-zigzag-level-order-traversal"},"Binary Tree Zigzag Level Order Traversal"),(0,l.kt)("span",{class:"tag-is-success"},"Tree"),(0,l.kt)("span",{class:"tag-is-success"},"Breadth-First Search"),(0,l.kt)("span",{class:"tag-is-success"},"Binary Tree"),(0,l.kt)("h3",{id:"inputs-61"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-61"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-61"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-61"},"Further Readings"),(0,l.kt)("h2",{id:"construct-binary-tree-from-preorder-and-inorder-traversal"},"Construct Binary Tree from Preorder and Inorder Traversal"),(0,l.kt)("span",{class:"tag-is-success"},"Array"),(0,l.kt)("span",{class:"tag-is-success"},"Hash Table"),(0,l.kt)("span",{class:"tag-is-success"},"Divide and Conquer"),(0,l.kt)("span",{class:"tag-is-success"},"Tree"),(0,l.kt)("span",{class:"tag-is-success"},"Binary Tree"),(0,l.kt)("h3",{id:"inputs-62"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-62"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-62"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-62"},"Further Readings"),(0,l.kt)("h2",{id:"construct-binary-tree-from-inorder-and-postorder-traversal"},"Construct Binary Tree from Inorder and Postorder Traversal"),(0,l.kt)("span",{class:"tag-is-success"},"Array"),(0,l.kt)("span",{class:"tag-is-success"},"Hash Table"),(0,l.kt)("span",{class:"tag-is-success"},"Divide and Conquer"),(0,l.kt)("span",{class:"tag-is-success"},"Tree"),(0,l.kt)("span",{class:"tag-is-success"},"Binary Tree"),(0,l.kt)("h3",{id:"inputs-63"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-63"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-63"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-63"},"Further Readings"),(0,l.kt)("h2",{id:"binary-tree-level-order-traversal-ii"},"Binary Tree Level Order Traversal II"),(0,l.kt)("span",{class:"tag-is-success"},"Tree"),(0,l.kt)("span",{class:"tag-is-success"},"Breadth-First Search"),(0,l.kt)("span",{class:"tag-is-success"},"Binary Tree"),(0,l.kt)("h3",{id:"inputs-64"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-64"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-64"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-64"},"Further Readings"),(0,l.kt)("h2",{id:"convert-sorted-list-to-binary-search-tree"},"Convert Sorted List to Binary Search Tree"),(0,l.kt)("span",{class:"tag-is-success"},"Linked List"),(0,l.kt)("span",{class:"tag-is-success"},"Divide and Conquer"),(0,l.kt)("span",{class:"tag-is-success"},"Tree"),(0,l.kt)("span",{class:"tag-is-success"},"Binary Search Tree"),(0,l.kt)("span",{class:"tag-is-success"},"Binary Tree"),(0,l.kt)("h3",{id:"inputs-65"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-65"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-65"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-65"},"Further Readings"),(0,l.kt)("h2",{id:"path-sum-ii"},"Path Sum II"),(0,l.kt)("span",{class:"tag-is-success"},"Backtracking"),(0,l.kt)("span",{class:"tag-is-success"},"Tree"),(0,l.kt)("span",{class:"tag-is-success"},"Depth-First Search"),(0,l.kt)("span",{class:"tag-is-success"},"Binary Tree"),(0,l.kt)("h3",{id:"inputs-66"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-66"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-66"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-66"},"Further Readings"),(0,l.kt)("h2",{id:"flatten-binary-tree-to-linked-list"},"Flatten Binary Tree to Linked List"),(0,l.kt)("span",{class:"tag-is-success"},"Linked List"),(0,l.kt)("span",{class:"tag-is-success"},"Stack"),(0,l.kt)("span",{class:"tag-is-success"},"Tree"),(0,l.kt)("span",{class:"tag-is-success"},"Depth-First Search"),(0,l.kt)("span",{class:"tag-is-success"},"Binary Tree"),(0,l.kt)("h3",{id:"inputs-67"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-67"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-67"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-67"},"Further Readings"),(0,l.kt)("h2",{id:"populating-next-right-pointers-in-each-node"},"Populating Next Right Pointers in Each Node"),(0,l.kt)("span",{class:"tag-is-success"},"Linked List"),(0,l.kt)("span",{class:"tag-is-success"},"Tree"),(0,l.kt)("span",{class:"tag-is-success"},"Depth-First Search"),(0,l.kt)("span",{class:"tag-is-success"},"Breadth-First Search"),(0,l.kt)("span",{class:"tag-is-success"},"Binary Tree"),(0,l.kt)("h3",{id:"inputs-68"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-68"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-68"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-68"},"Further Readings"),(0,l.kt)("h2",{id:"populating-next-right-pointers-in-each-node-ii"},"Populating Next Right Pointers in Each Node II"),(0,l.kt)("span",{class:"tag-is-success"},"Linked List"),(0,l.kt)("span",{class:"tag-is-success"},"Tree"),(0,l.kt)("span",{class:"tag-is-success"},"Depth-First Search"),(0,l.kt)("span",{class:"tag-is-success"},"Breadth-First Search"),(0,l.kt)("span",{class:"tag-is-success"},"Binary Tree"),(0,l.kt)("h3",{id:"inputs-69"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-69"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-69"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-69"},"Further Readings"),(0,l.kt)("h2",{id:"triangle"},"Triangle"),(0,l.kt)("span",{class:"tag-is-success"},"Array"),(0,l.kt)("span",{class:"tag-is-success"},"Dynamic Programming"),(0,l.kt)("h3",{id:"inputs-70"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-70"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-70"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-70"},"Further Readings"),(0,l.kt)("h2",{id:"best-time-to-buy-and-sell-stock-ii"},"Best Time to Buy and Sell Stock II"),(0,l.kt)("span",{class:"tag-is-success"},"Array"),(0,l.kt)("span",{class:"tag-is-success"},"Dynamic Programming"),(0,l.kt)("span",{class:"tag-is-success"},"Greedy"),(0,l.kt)("h3",{id:"inputs-71"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-71"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-71"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-71"},"Further Readings"),(0,l.kt)("h2",{id:"longest-consecutive-sequence"},"Longest Consecutive Sequence"),(0,l.kt)("span",{class:"tag-is-success"},"Array"),(0,l.kt)("span",{class:"tag-is-success"},"Hash Table"),(0,l.kt)("span",{class:"tag-is-success"},"Union Find"),(0,l.kt)("h3",{id:"inputs-72"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-72"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-72"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-72"},"Further Readings"),(0,l.kt)("h2",{id:"sum-root-to-leaf-numbers"},"Sum Root to Leaf Numbers"),(0,l.kt)("span",{class:"tag-is-success"},"Tree"),(0,l.kt)("span",{class:"tag-is-success"},"Depth-First Search"),(0,l.kt)("span",{class:"tag-is-success"},"Binary Tree"),(0,l.kt)("h3",{id:"inputs-73"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-73"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-73"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-73"},"Further Readings"),(0,l.kt)("h2",{id:"surrounded-regions"},"Surrounded Regions"),(0,l.kt)("span",{class:"tag-is-success"},"Array"),(0,l.kt)("span",{class:"tag-is-success"},"Depth-First Search"),(0,l.kt)("span",{class:"tag-is-success"},"Breadth-First Search"),(0,l.kt)("span",{class:"tag-is-success"},"Union Find"),(0,l.kt)("span",{class:"tag-is-success"},"Matrix"),(0,l.kt)("h3",{id:"inputs-74"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-74"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-74"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-74"},"Further Readings"),(0,l.kt)("h2",{id:"palindrome-partitioning"},"Palindrome Partitioning"),(0,l.kt)("span",{class:"tag-is-success"},"String"),(0,l.kt)("span",{class:"tag-is-success"},"Dynamic Programming"),(0,l.kt)("span",{class:"tag-is-success"},"Backtracking"),(0,l.kt)("h3",{id:"inputs-75"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-75"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-75"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-75"},"Further Readings"),(0,l.kt)("h2",{id:"clone-graph"},"Clone Graph"),(0,l.kt)("span",{class:"tag-is-success"},"Hash Table"),(0,l.kt)("span",{class:"tag-is-success"},"Depth-First Search"),(0,l.kt)("span",{class:"tag-is-success"},"Breadth-First Search"),(0,l.kt)("span",{class:"tag-is-success"},"Graph"),(0,l.kt)("h3",{id:"inputs-76"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-76"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-76"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-76"},"Further Readings"),(0,l.kt)("h2",{id:"gas-station"},"Gas Station"),(0,l.kt)("span",{class:"tag-is-success"},"Array"),(0,l.kt)("span",{class:"tag-is-success"},"Greedy"),(0,l.kt)("h3",{id:"inputs-77"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-77"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-77"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-77"},"Further Readings"),(0,l.kt)("h2",{id:"single-number-ii"},"Single Number II"),(0,l.kt)("span",{class:"tag-is-success"},"Array"),(0,l.kt)("span",{class:"tag-is-success"},"Bit Manipulation"),(0,l.kt)("h3",{id:"inputs-78"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-78"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-78"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-78"},"Further Readings"),(0,l.kt)("h2",{id:"copy-list-with-random-pointer"},"Copy List with Random Pointer"),(0,l.kt)("span",{class:"tag-is-success"},"Hash Table"),(0,l.kt)("span",{class:"tag-is-success"},"Linked List"),(0,l.kt)("h3",{id:"inputs-79"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-79"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-79"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-79"},"Further Readings"),(0,l.kt)("h2",{id:"word-break"},"Word Break"),(0,l.kt)("span",{class:"tag-is-success"},"Hash Table"),(0,l.kt)("span",{class:"tag-is-success"},"String"),(0,l.kt)("span",{class:"tag-is-success"},"Dynamic Programming"),(0,l.kt)("span",{class:"tag-is-success"},"Trie"),(0,l.kt)("span",{class:"tag-is-success"},"Memoization"),(0,l.kt)("h3",{id:"inputs-80"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-80"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-80"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-80"},"Further Readings"),(0,l.kt)("h2",{id:"linked-list-cycle-ii"},"Linked List Cycle II"),(0,l.kt)("span",{class:"tag-is-success"},"Hash Table"),(0,l.kt)("span",{class:"tag-is-success"},"Linked List"),(0,l.kt)("span",{class:"tag-is-success"},"Two Pointers"),(0,l.kt)("h3",{id:"inputs-81"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-81"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-81"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-81"},"Further Readings"),(0,l.kt)("h2",{id:"reorder-list"},"Reorder List"),(0,l.kt)("span",{class:"tag-is-success"},"Linked List"),(0,l.kt)("span",{class:"tag-is-success"},"Two Pointers"),(0,l.kt)("span",{class:"tag-is-success"},"Stack"),(0,l.kt)("span",{class:"tag-is-success"},"Recursion"),(0,l.kt)("h3",{id:"inputs-82"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-82"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-82"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-82"},"Further Readings"),(0,l.kt)("h2",{id:"lru-cache"},"LRU Cache"),(0,l.kt)("span",{class:"tag-is-success"},"Hash Table"),(0,l.kt)("span",{class:"tag-is-success"},"Linked List"),(0,l.kt)("span",{class:"tag-is-success"},"Design"),(0,l.kt)("span",{class:"tag-is-success"},"Doubly-Linked List"),(0,l.kt)("h3",{id:"inputs-83"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-83"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-83"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-83"},"Further Readings"),(0,l.kt)("h2",{id:"insertion-sort-list"},"Insertion Sort List"),(0,l.kt)("span",{class:"tag-is-success"},"Linked List"),(0,l.kt)("span",{class:"tag-is-success"},"Sorting"),(0,l.kt)("h3",{id:"inputs-84"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-84"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-84"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-84"},"Further Readings"),(0,l.kt)("h2",{id:"sort-list"},"Sort List"),(0,l.kt)("span",{class:"tag-is-success"},"Linked List"),(0,l.kt)("span",{class:"tag-is-success"},"Two Pointers"),(0,l.kt)("span",{class:"tag-is-success"},"Divide and Conquer"),(0,l.kt)("span",{class:"tag-is-success"},"Sorting"),(0,l.kt)("span",{class:"tag-is-success"},"Merge Sort"),(0,l.kt)("h3",{id:"inputs-85"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-85"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-85"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-85"},"Further Readings"),(0,l.kt)("h2",{id:"evaluate-reverse-polish-notation"},"Evaluate Reverse Polish Notation"),(0,l.kt)("span",{class:"tag-is-success"},"Array"),(0,l.kt)("span",{class:"tag-is-success"},"Math"),(0,l.kt)("span",{class:"tag-is-success"},"Stack"),(0,l.kt)("h3",{id:"inputs-86"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-86"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-86"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-86"},"Further Readings"),(0,l.kt)("h2",{id:"reverse-words-in-a-string"},"Reverse Words in a String"),(0,l.kt)("span",{class:"tag-is-success"},"Two Pointers"),(0,l.kt)("span",{class:"tag-is-success"},"String"),(0,l.kt)("h3",{id:"inputs-87"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-87"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-87"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-87"},"Further Readings"),(0,l.kt)("h2",{id:"maximum-product-subarray"},"Maximum Product Subarray"),(0,l.kt)("span",{class:"tag-is-success"},"Array"),(0,l.kt)("span",{class:"tag-is-success"},"Dynamic Programming"),(0,l.kt)("h3",{id:"inputs-88"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-88"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-88"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-88"},"Further Readings"),(0,l.kt)("h2",{id:"find-minimum-in-rotated-sorted-array"},"Find Minimum in Rotated Sorted Array"),(0,l.kt)("span",{class:"tag-is-success"},"Array"),(0,l.kt)("span",{class:"tag-is-success"},"Binary Search"),(0,l.kt)("h3",{id:"inputs-89"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-89"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-89"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-89"},"Further Readings"),(0,l.kt)("h2",{id:"binary-tree-upside-down"},"Binary Tree Upside Down"),(0,l.kt)("span",{class:"tag-is-success"},"Tree"),(0,l.kt)("span",{class:"tag-is-success"},"Depth-First Search"),(0,l.kt)("span",{class:"tag-is-success"},"Binary Tree"),(0,l.kt)("h3",{id:"inputs-90"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-90"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-90"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-90"},"Further Readings"),(0,l.kt)("h2",{id:"longest-substring-with-at-most-two-distinct-characters"},"Longest Substring with At Most Two Distinct Characters"),(0,l.kt)("span",{class:"tag-is-success"},"Hash Table"),(0,l.kt)("span",{class:"tag-is-success"},"String"),(0,l.kt)("span",{class:"tag-is-success"},"Sliding Window"),(0,l.kt)("h3",{id:"inputs-91"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-91"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-91"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-91"},"Further Readings"),(0,l.kt)("h2",{id:"one-edit-distance"},"One Edit Distance"),(0,l.kt)("span",{class:"tag-is-success"},"Two Pointers"),(0,l.kt)("span",{class:"tag-is-success"},"String"),(0,l.kt)("h3",{id:"inputs-92"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-92"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-92"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-92"},"Further Readings"),(0,l.kt)("h2",{id:"find-peak-element"},"Find Peak Element"),(0,l.kt)("span",{class:"tag-is-success"},"Array"),(0,l.kt)("span",{class:"tag-is-success"},"Binary Search"),(0,l.kt)("h3",{id:"inputs-93"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-93"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-93"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-93"},"Further Readings"),(0,l.kt)("h2",{id:"compare-version-numbers"},"Compare Version Numbers"),(0,l.kt)("span",{class:"tag-is-success"},"Two Pointers"),(0,l.kt)("span",{class:"tag-is-success"},"String"),(0,l.kt)("h3",{id:"inputs-94"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-94"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-94"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-94"},"Further Readings"),(0,l.kt)("h2",{id:"fraction-to-recurring-decimal"},"Fraction to Recurring Decimal"),(0,l.kt)("span",{class:"tag-is-success"},"Hash Table"),(0,l.kt)("span",{class:"tag-is-success"},"Math"),(0,l.kt)("span",{class:"tag-is-success"},"String"),(0,l.kt)("h3",{id:"inputs-95"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-95"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-95"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-95"},"Further Readings"),(0,l.kt)("h2",{id:"two-sum-ii---input-array-is-sorted"},"Two Sum II - Input Array Is Sorted"),(0,l.kt)("span",{class:"tag-is-success"},"Array"),(0,l.kt)("span",{class:"tag-is-success"},"Two Pointers"),(0,l.kt)("span",{class:"tag-is-success"},"Binary Search"),(0,l.kt)("h3",{id:"inputs-96"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-96"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-96"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-96"},"Further Readings"),(0,l.kt)("h2",{id:"factorial-trailing-zeroes"},"Factorial Trailing Zeroes"),(0,l.kt)("span",{class:"tag-is-success"},"Math"),(0,l.kt)("h3",{id:"inputs-97"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-97"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-97"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-97"},"Further Readings"),(0,l.kt)("h2",{id:"binary-search-tree-iterator"},"Binary Search Tree Iterator"),(0,l.kt)("span",{class:"tag-is-success"},"Stack"),(0,l.kt)("span",{class:"tag-is-success"},"Tree"),(0,l.kt)("span",{class:"tag-is-success"},"Design"),(0,l.kt)("span",{class:"tag-is-success"},"Binary Search Tree"),(0,l.kt)("span",{class:"tag-is-success"},"Binary Tree"),(0,l.kt)("span",{class:"tag-is-success"},"Iterator"),(0,l.kt)("h3",{id:"inputs-98"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-98"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-98"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-98"},"Further Readings"),(0,l.kt)("h2",{id:"second-highest-salary"},"Second Highest Salary"),(0,l.kt)("span",{class:"tag-is-success"},"Database"),(0,l.kt)("h3",{id:"inputs-99"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-99"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-99"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-99"},"Further Readings"),(0,l.kt)("h2",{id:"nth-highest-salary"},"Nth Highest Salary"),(0,l.kt)("span",{class:"tag-is-success"},"Database"),(0,l.kt)("h3",{id:"inputs-100"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-100"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-100"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-100"},"Further Readings"),(0,l.kt)("h2",{id:"rank-scores"},"Rank Scores"),(0,l.kt)("span",{class:"tag-is-success"},"Database"),(0,l.kt)("h3",{id:"inputs-101"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-101"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-101"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-101"},"Further Readings"),(0,l.kt)("h2",{id:"largest-number"},"Largest Number"),(0,l.kt)("span",{class:"tag-is-success"},"String"),(0,l.kt)("span",{class:"tag-is-success"},"Greedy"),(0,l.kt)("span",{class:"tag-is-success"},"Sorting"),(0,l.kt)("h3",{id:"inputs-102"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-102"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-102"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-102"},"Further Readings"),(0,l.kt)("h2",{id:"consecutive-numbers"},"Consecutive Numbers"),(0,l.kt)("span",{class:"tag-is-success"},"Database"),(0,l.kt)("h3",{id:"inputs-103"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-103"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-103"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-103"},"Further Readings"),(0,l.kt)("h2",{id:"department-highest-salary"},"Department Highest Salary"),(0,l.kt)("span",{class:"tag-is-success"},"Database"),(0,l.kt)("h3",{id:"inputs-104"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-104"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-104"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-104"},"Further Readings"),(0,l.kt)("h2",{id:"reverse-words-in-a-string-ii"},"Reverse Words in a String II"),(0,l.kt)("span",{class:"tag-is-success"},"Two Pointers"),(0,l.kt)("span",{class:"tag-is-success"},"String"),(0,l.kt)("h3",{id:"inputs-105"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-105"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-105"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-105"},"Further Readings"),(0,l.kt)("h2",{id:"repeated-dna-sequences"},"Repeated DNA Sequences"),(0,l.kt)("span",{class:"tag-is-success"},"Hash Table"),(0,l.kt)("span",{class:"tag-is-success"},"String"),(0,l.kt)("span",{class:"tag-is-success"},"Bit Manipulation"),(0,l.kt)("span",{class:"tag-is-success"},"Sliding Window"),(0,l.kt)("span",{class:"tag-is-success"},"Rolling Hash"),(0,l.kt)("span",{class:"tag-is-success"},"Hash Function"),(0,l.kt)("h3",{id:"inputs-106"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-106"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-106"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-106"},"Further Readings"),(0,l.kt)("h2",{id:"rotate-array"},"Rotate Array"),(0,l.kt)("span",{class:"tag-is-success"},"Array"),(0,l.kt)("span",{class:"tag-is-success"},"Math"),(0,l.kt)("span",{class:"tag-is-success"},"Two Pointers"),(0,l.kt)("h3",{id:"inputs-107"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-107"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-107"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-107"},"Further Readings"),(0,l.kt)("h2",{id:"word-frequency"},"Word Frequency"),(0,l.kt)("span",{class:"tag-is-success"},"Shell"),(0,l.kt)("h3",{id:"inputs-108"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-108"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-108"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-108"},"Further Readings"),(0,l.kt)("h2",{id:"transpose-file"},"Transpose File"),(0,l.kt)("span",{class:"tag-is-success"},"Shell"),(0,l.kt)("h3",{id:"inputs-109"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-109"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-109"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-109"},"Further Readings"),(0,l.kt)("h2",{id:"house-robber"},"House Robber"),(0,l.kt)("span",{class:"tag-is-success"},"Array"),(0,l.kt)("span",{class:"tag-is-success"},"Dynamic Programming"),(0,l.kt)("h3",{id:"inputs-110"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-110"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-110"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-110"},"Further Readings"),(0,l.kt)("h2",{id:"binary-tree-right-side-view"},"Binary Tree Right Side View"),(0,l.kt)("span",{class:"tag-is-success"},"Tree"),(0,l.kt)("span",{class:"tag-is-success"},"Depth-First Search"),(0,l.kt)("span",{class:"tag-is-success"},"Breadth-First Search"),(0,l.kt)("span",{class:"tag-is-success"},"Binary Tree"),(0,l.kt)("h3",{id:"inputs-111"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-111"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-111"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-111"},"Further Readings"),(0,l.kt)("h2",{id:"number-of-islands"},"Number of Islands"),(0,l.kt)("span",{class:"tag-is-success"},"Array"),(0,l.kt)("span",{class:"tag-is-success"},"Depth-First Search"),(0,l.kt)("span",{class:"tag-is-success"},"Breadth-First Search"),(0,l.kt)("span",{class:"tag-is-success"},"Union Find"),(0,l.kt)("span",{class:"tag-is-success"},"Matrix"),(0,l.kt)("h3",{id:"inputs-112"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-112"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-112"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-112"},"Further Readings"),(0,l.kt)("h2",{id:"bitwise-and-of-numbers-range"},"Bitwise AND of Numbers Range"),(0,l.kt)("span",{class:"tag-is-success"},"Bit Manipulation"),(0,l.kt)("h3",{id:"inputs-113"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-113"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-113"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-113"},"Further Readings"),(0,l.kt)("h2",{id:"count-primes"},"Count Primes"),(0,l.kt)("span",{class:"tag-is-success"},"Array"),(0,l.kt)("span",{class:"tag-is-success"},"Math"),(0,l.kt)("span",{class:"tag-is-success"},"Enumeration"),(0,l.kt)("span",{class:"tag-is-success"},"Number Theory"),(0,l.kt)("h3",{id:"inputs-114"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-114"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-114"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-114"},"Further Readings"),(0,l.kt)("h2",{id:"course-schedule"},"Course Schedule"),(0,l.kt)("span",{class:"tag-is-success"},"Depth-First Search"),(0,l.kt)("span",{class:"tag-is-success"},"Breadth-First Search"),(0,l.kt)("span",{class:"tag-is-success"},"Graph"),(0,l.kt)("span",{class:"tag-is-success"},"Topological Sort"),(0,l.kt)("h3",{id:"inputs-115"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-115"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-115"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-115"},"Further Readings"),(0,l.kt)("h2",{id:"implement-trie-prefix-tree"},"Implement Trie (Prefix Tree)"),(0,l.kt)("span",{class:"tag-is-success"},"Hash Table"),(0,l.kt)("span",{class:"tag-is-success"},"String"),(0,l.kt)("span",{class:"tag-is-success"},"Design"),(0,l.kt)("span",{class:"tag-is-success"},"Trie"),(0,l.kt)("h3",{id:"inputs-116"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-116"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-116"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-116"},"Further Readings"),(0,l.kt)("h2",{id:"minimum-size-subarray-sum"},"Minimum Size Subarray Sum"),(0,l.kt)("span",{class:"tag-is-success"},"Array"),(0,l.kt)("span",{class:"tag-is-success"},"Binary Search"),(0,l.kt)("span",{class:"tag-is-success"},"Sliding Window"),(0,l.kt)("span",{class:"tag-is-success"},"Prefix Sum"),(0,l.kt)("h3",{id:"inputs-117"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-117"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-117"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-117"},"Further Readings"),(0,l.kt)("h2",{id:"course-schedule-ii"},"Course Schedule II"),(0,l.kt)("span",{class:"tag-is-success"},"Depth-First Search"),(0,l.kt)("span",{class:"tag-is-success"},"Breadth-First Search"),(0,l.kt)("span",{class:"tag-is-success"},"Graph"),(0,l.kt)("span",{class:"tag-is-success"},"Topological Sort"),(0,l.kt)("h3",{id:"inputs-118"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-118"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-118"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-118"},"Further Readings"),(0,l.kt)("h2",{id:"design-add-and-search-words-data-structure"},"Design Add and Search Words Data Structure"),(0,l.kt)("span",{class:"tag-is-success"},"String"),(0,l.kt)("span",{class:"tag-is-success"},"Depth-First Search"),(0,l.kt)("span",{class:"tag-is-success"},"Design"),(0,l.kt)("span",{class:"tag-is-success"},"Trie"),(0,l.kt)("h3",{id:"inputs-119"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-119"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-119"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-119"},"Further Readings"),(0,l.kt)("h2",{id:"house-robber-ii"},"House Robber II"),(0,l.kt)("span",{class:"tag-is-success"},"Array"),(0,l.kt)("span",{class:"tag-is-success"},"Dynamic Programming"),(0,l.kt)("h3",{id:"inputs-120"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-120"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-120"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-120"},"Further Readings"),(0,l.kt)("h2",{id:"kth-largest-element-in-an-array"},"Kth Largest Element in an Array"),(0,l.kt)("span",{class:"tag-is-success"},"Array"),(0,l.kt)("span",{class:"tag-is-success"},"Divide and Conquer"),(0,l.kt)("span",{class:"tag-is-success"},"Sorting"),(0,l.kt)("span",{class:"tag-is-success"},"Heap (Priority Queue)"),(0,l.kt)("span",{class:"tag-is-success"},"Quickselect"),(0,l.kt)("h3",{id:"inputs-121"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-121"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-121"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-121"},"Further Readings"),(0,l.kt)("h2",{id:"combination-sum-iii"},"Combination Sum III"),(0,l.kt)("span",{class:"tag-is-success"},"Array"),(0,l.kt)("span",{class:"tag-is-success"},"Backtracking"),(0,l.kt)("h3",{id:"inputs-122"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-122"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-122"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-122"},"Further Readings"),(0,l.kt)("h2",{id:"contains-duplicate-iii"},"Contains Duplicate III"),(0,l.kt)("span",{class:"tag-is-success"},"Array"),(0,l.kt)("span",{class:"tag-is-success"},"Sliding Window"),(0,l.kt)("span",{class:"tag-is-success"},"Sorting"),(0,l.kt)("span",{class:"tag-is-success"},"Bucket Sort"),(0,l.kt)("span",{class:"tag-is-success"},"Ordered Set"),(0,l.kt)("h3",{id:"inputs-123"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-123"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-123"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-123"},"Further Readings"),(0,l.kt)("h2",{id:"maximal-square"},"Maximal Square"),(0,l.kt)("span",{class:"tag-is-success"},"Array"),(0,l.kt)("span",{class:"tag-is-success"},"Dynamic Programming"),(0,l.kt)("span",{class:"tag-is-success"},"Matrix"),(0,l.kt)("h3",{id:"inputs-124"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-124"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-124"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-124"},"Further Readings"),(0,l.kt)("h2",{id:"count-complete-tree-nodes"},"Count Complete Tree Nodes"),(0,l.kt)("span",{class:"tag-is-success"},"Binary Search"),(0,l.kt)("span",{class:"tag-is-success"},"Tree"),(0,l.kt)("span",{class:"tag-is-success"},"Depth-First Search"),(0,l.kt)("span",{class:"tag-is-success"},"Binary Tree"),(0,l.kt)("h3",{id:"inputs-125"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-125"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-125"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-125"},"Further Readings"),(0,l.kt)("h2",{id:"rectangle-area"},"Rectangle Area"),(0,l.kt)("span",{class:"tag-is-success"},"Math"),(0,l.kt)("span",{class:"tag-is-success"},"Geometry"),(0,l.kt)("h3",{id:"inputs-126"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-126"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-126"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-126"},"Further Readings"),(0,l.kt)("h2",{id:"basic-calculator-ii"},"Basic Calculator II"),(0,l.kt)("span",{class:"tag-is-success"},"Math"),(0,l.kt)("span",{class:"tag-is-success"},"String"),(0,l.kt)("span",{class:"tag-is-success"},"Stack"),(0,l.kt)("h3",{id:"inputs-127"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-127"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-127"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-127"},"Further Readings"),(0,l.kt)("h2",{id:"majority-element-ii"},"Majority Element II"),(0,l.kt)("span",{class:"tag-is-success"},"Array"),(0,l.kt)("span",{class:"tag-is-success"},"Hash Table"),(0,l.kt)("span",{class:"tag-is-success"},"Sorting"),(0,l.kt)("span",{class:"tag-is-success"},"Counting"),(0,l.kt)("h3",{id:"inputs-128"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-128"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-128"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-128"},"Further Readings"),(0,l.kt)("h2",{id:"kth-smallest-element-in-a-bst"},"Kth Smallest Element in a BST"),(0,l.kt)("span",{class:"tag-is-success"},"Tree"),(0,l.kt)("span",{class:"tag-is-success"},"Depth-First Search"),(0,l.kt)("span",{class:"tag-is-success"},"Binary Search Tree"),(0,l.kt)("span",{class:"tag-is-success"},"Binary Tree"),(0,l.kt)("h3",{id:"inputs-129"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-129"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-129"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-129"},"Further Readings"),(0,l.kt)("h2",{id:"lowest-common-ancestor-of-a-binary-tree"},"Lowest Common Ancestor of a Binary Tree"),(0,l.kt)("span",{class:"tag-is-success"},"Tree"),(0,l.kt)("span",{class:"tag-is-success"},"Depth-First Search"),(0,l.kt)("span",{class:"tag-is-success"},"Binary Tree"),(0,l.kt)("h3",{id:"inputs-130"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-130"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-130"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-130"},"Further Readings"),(0,l.kt)("h2",{id:"product-of-array-except-self"},"Product of Array Except Self"),(0,l.kt)("span",{class:"tag-is-success"},"Array"),(0,l.kt)("span",{class:"tag-is-success"},"Prefix Sum"),(0,l.kt)("h3",{id:"inputs-131"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-131"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-131"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-131"},"Further Readings"),(0,l.kt)("h2",{id:"search-a-2d-matrix-ii"},"Search a 2D Matrix II"),(0,l.kt)("span",{class:"tag-is-success"},"Array"),(0,l.kt)("span",{class:"tag-is-success"},"Binary Search"),(0,l.kt)("span",{class:"tag-is-success"},"Divide and Conquer"),(0,l.kt)("span",{class:"tag-is-success"},"Matrix"),(0,l.kt)("h3",{id:"inputs-132"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-132"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-132"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-132"},"Further Readings"),(0,l.kt)("h2",{id:"different-ways-to-add-parentheses"},"Different Ways to Add Parentheses"),(0,l.kt)("span",{class:"tag-is-success"},"Math"),(0,l.kt)("span",{class:"tag-is-success"},"String"),(0,l.kt)("span",{class:"tag-is-success"},"Dynamic Programming"),(0,l.kt)("span",{class:"tag-is-success"},"Recursion"),(0,l.kt)("span",{class:"tag-is-success"},"Memoization"),(0,l.kt)("h3",{id:"inputs-133"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-133"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-133"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-133"},"Further Readings"),(0,l.kt)("h2",{id:"shortest-word-distance-ii"},"Shortest Word Distance II"),(0,l.kt)("span",{class:"tag-is-success"},"Array"),(0,l.kt)("span",{class:"tag-is-success"},"Hash Table"),(0,l.kt)("span",{class:"tag-is-success"},"Two Pointers"),(0,l.kt)("span",{class:"tag-is-success"},"String"),(0,l.kt)("span",{class:"tag-is-success"},"Design"),(0,l.kt)("h3",{id:"inputs-134"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-134"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-134"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-134"},"Further Readings"),(0,l.kt)("h2",{id:"shortest-word-distance-iii"},"Shortest Word Distance III"),(0,l.kt)("span",{class:"tag-is-success"},"Array"),(0,l.kt)("span",{class:"tag-is-success"},"String"),(0,l.kt)("h3",{id:"inputs-135"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-135"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-135"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-135"},"Further Readings"),(0,l.kt)("h2",{id:"strobogrammatic-number-ii"},"Strobogrammatic Number II"),(0,l.kt)("span",{class:"tag-is-success"},"Array"),(0,l.kt)("span",{class:"tag-is-success"},"String"),(0,l.kt)("span",{class:"tag-is-success"},"Recursion"),(0,l.kt)("h3",{id:"inputs-136"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-136"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-136"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-136"},"Further Readings"),(0,l.kt)("h2",{id:"group-shifted-strings"},"Group Shifted Strings"),(0,l.kt)("span",{class:"tag-is-success"},"Array"),(0,l.kt)("span",{class:"tag-is-success"},"Hash Table"),(0,l.kt)("span",{class:"tag-is-success"},"String"),(0,l.kt)("h3",{id:"inputs-137"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-137"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-137"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-137"},"Further Readings"),(0,l.kt)("h2",{id:"count-univalue-subtrees"},"Count Univalue Subtrees"),(0,l.kt)("span",{class:"tag-is-success"},"Tree"),(0,l.kt)("span",{class:"tag-is-success"},"Depth-First Search"),(0,l.kt)("span",{class:"tag-is-success"},"Binary Tree"),(0,l.kt)("h3",{id:"inputs-138"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-138"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-138"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-138"},"Further Readings"),(0,l.kt)("h2",{id:"flatten-2d-vector"},"Flatten 2D Vector"),(0,l.kt)("span",{class:"tag-is-success"},"Array"),(0,l.kt)("span",{class:"tag-is-success"},"Two Pointers"),(0,l.kt)("span",{class:"tag-is-success"},"Design"),(0,l.kt)("span",{class:"tag-is-success"},"Iterator"),(0,l.kt)("h3",{id:"inputs-139"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-139"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-139"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-139"},"Further Readings"),(0,l.kt)("h2",{id:"meeting-rooms-ii"},"Meeting Rooms II"),(0,l.kt)("span",{class:"tag-is-success"},"Array"),(0,l.kt)("span",{class:"tag-is-success"},"Two Pointers"),(0,l.kt)("span",{class:"tag-is-success"},"Greedy"),(0,l.kt)("span",{class:"tag-is-success"},"Sorting"),(0,l.kt)("span",{class:"tag-is-success"},"Heap (Priority Queue)"),(0,l.kt)("h3",{id:"inputs-140"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-140"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-140"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-140"},"Further Readings"),(0,l.kt)("h2",{id:"factor-combinations"},"Factor Combinations"),(0,l.kt)("span",{class:"tag-is-success"},"Array"),(0,l.kt)("span",{class:"tag-is-success"},"Backtracking"),(0,l.kt)("h3",{id:"inputs-141"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-141"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-141"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-141"},"Further Readings"),(0,l.kt)("h2",{id:"verify-preorder-sequence-in-binary-search-tree"},"Verify Preorder Sequence in Binary Search Tree"),(0,l.kt)("span",{class:"tag-is-success"},"Stack"),(0,l.kt)("span",{class:"tag-is-success"},"Tree"),(0,l.kt)("span",{class:"tag-is-success"},"Binary Search Tree"),(0,l.kt)("span",{class:"tag-is-success"},"Recursion"),(0,l.kt)("span",{class:"tag-is-success"},"Monotonic Stack"),(0,l.kt)("span",{class:"tag-is-success"},"Binary Tree"),(0,l.kt)("h3",{id:"inputs-142"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-142"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-142"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-142"},"Further Readings"),(0,l.kt)("h2",{id:"paint-house"},"Paint House"),(0,l.kt)("span",{class:"tag-is-success"},"Array"),(0,l.kt)("span",{class:"tag-is-success"},"Dynamic Programming"),(0,l.kt)("h3",{id:"inputs-143"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-143"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-143"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-143"},"Further Readings"),(0,l.kt)("h2",{id:"3sum-smaller"},"3Sum Smaller"),(0,l.kt)("span",{class:"tag-is-success"},"Array"),(0,l.kt)("span",{class:"tag-is-success"},"Two Pointers"),(0,l.kt)("span",{class:"tag-is-success"},"Binary Search"),(0,l.kt)("span",{class:"tag-is-success"},"Sorting"),(0,l.kt)("h3",{id:"inputs-144"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-144"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-144"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-144"},"Further Readings"),(0,l.kt)("h2",{id:"single-number-iii"},"Single Number III"),(0,l.kt)("span",{class:"tag-is-success"},"Array"),(0,l.kt)("span",{class:"tag-is-success"},"Bit Manipulation"),(0,l.kt)("h3",{id:"inputs-145"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-145"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-145"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-145"},"Further Readings"),(0,l.kt)("h2",{id:"graph-valid-tree"},"Graph Valid Tree"),(0,l.kt)("span",{class:"tag-is-success"},"Depth-First Search"),(0,l.kt)("span",{class:"tag-is-success"},"Breadth-First Search"),(0,l.kt)("span",{class:"tag-is-success"},"Union Find"),(0,l.kt)("span",{class:"tag-is-success"},"Graph"),(0,l.kt)("h3",{id:"inputs-146"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-146"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-146"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-146"},"Further Readings"),(0,l.kt)("h2",{id:"ugly-number-ii"},"Ugly Number II"),(0,l.kt)("span",{class:"tag-is-success"},"Hash Table"),(0,l.kt)("span",{class:"tag-is-success"},"Math"),(0,l.kt)("span",{class:"tag-is-success"},"Dynamic Programming"),(0,l.kt)("span",{class:"tag-is-success"},"Heap (Priority Queue)"),(0,l.kt)("h3",{id:"inputs-147"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-147"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-147"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-147"},"Further Readings"),(0,l.kt)("h2",{id:"palindrome-permutation-ii"},"Palindrome Permutation II"),(0,l.kt)("span",{class:"tag-is-success"},"Hash Table"),(0,l.kt)("span",{class:"tag-is-success"},"String"),(0,l.kt)("span",{class:"tag-is-success"},"Backtracking"),(0,l.kt)("h3",{id:"inputs-148"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-148"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-148"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-148"},"Further Readings"),(0,l.kt)("h2",{id:"encode-and-decode-strings"},"Encode and Decode Strings"),(0,l.kt)("span",{class:"tag-is-success"},"Array"),(0,l.kt)("span",{class:"tag-is-success"},"String"),(0,l.kt)("span",{class:"tag-is-success"},"Design"),(0,l.kt)("h3",{id:"inputs-149"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-149"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-149"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-149"},"Further Readings"),(0,l.kt)("h2",{id:"h-index"},"H-Index"),(0,l.kt)("span",{class:"tag-is-success"},"Array"),(0,l.kt)("span",{class:"tag-is-success"},"Sorting"),(0,l.kt)("span",{class:"tag-is-success"},"Counting Sort"),(0,l.kt)("h3",{id:"inputs-150"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-150"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-150"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-150"},"Further Readings"),(0,l.kt)("h2",{id:"h-index-ii"},"H-Index II"),(0,l.kt)("span",{class:"tag-is-success"},"Array"),(0,l.kt)("span",{class:"tag-is-success"},"Binary Search"),(0,l.kt)("h3",{id:"inputs-151"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-151"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-151"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-151"},"Further Readings"),(0,l.kt)("h2",{id:"paint-fence"},"Paint Fence"),(0,l.kt)("span",{class:"tag-is-success"},"Dynamic Programming"),(0,l.kt)("h3",{id:"inputs-152"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-152"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-152"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-152"},"Further Readings"),(0,l.kt)("h2",{id:"find-the-celebrity"},"Find the Celebrity"),(0,l.kt)("span",{class:"tag-is-success"},"Two Pointers"),(0,l.kt)("span",{class:"tag-is-success"},"Greedy"),(0,l.kt)("span",{class:"tag-is-success"},"Graph"),(0,l.kt)("span",{class:"tag-is-success"},"Interactive"),(0,l.kt)("h3",{id:"inputs-153"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-153"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-153"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-153"},"Further Readings"),(0,l.kt)("h2",{id:"perfect-squares"},"Perfect Squares"),(0,l.kt)("span",{class:"tag-is-success"},"Math"),(0,l.kt)("span",{class:"tag-is-success"},"Dynamic Programming"),(0,l.kt)("span",{class:"tag-is-success"},"Breadth-First Search"),(0,l.kt)("h3",{id:"inputs-154"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-154"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-154"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-154"},"Further Readings"),(0,l.kt)("h2",{id:"wiggle-sort"},"Wiggle Sort"),(0,l.kt)("span",{class:"tag-is-success"},"Array"),(0,l.kt)("span",{class:"tag-is-success"},"Greedy"),(0,l.kt)("span",{class:"tag-is-success"},"Sorting"),(0,l.kt)("h3",{id:"inputs-155"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-155"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-155"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-155"},"Further Readings"),(0,l.kt)("h2",{id:"zigzag-iterator"},"Zigzag Iterator"),(0,l.kt)("span",{class:"tag-is-success"},"Array"),(0,l.kt)("span",{class:"tag-is-success"},"Design"),(0,l.kt)("span",{class:"tag-is-success"},"Queue"),(0,l.kt)("span",{class:"tag-is-success"},"Iterator"),(0,l.kt)("h3",{id:"inputs-156"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-156"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-156"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-156"},"Further Readings"),(0,l.kt)("h2",{id:"peeking-iterator"},"Peeking Iterator"),(0,l.kt)("span",{class:"tag-is-success"},"Array"),(0,l.kt)("span",{class:"tag-is-success"},"Design"),(0,l.kt)("span",{class:"tag-is-success"},"Iterator"),(0,l.kt)("h3",{id:"inputs-157"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-157"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-157"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-157"},"Further Readings"),(0,l.kt)("h2",{id:"inorder-successor-in-bst"},"Inorder Successor in BST"),(0,l.kt)("span",{class:"tag-is-success"},"Tree"),(0,l.kt)("span",{class:"tag-is-success"},"Depth-First Search"),(0,l.kt)("span",{class:"tag-is-success"},"Binary Search Tree"),(0,l.kt)("span",{class:"tag-is-success"},"Binary Tree"),(0,l.kt)("h3",{id:"inputs-158"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-158"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-158"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-158"},"Further Readings"),(0,l.kt)("h2",{id:"walls-and-gates"},"Walls and Gates"),(0,l.kt)("span",{class:"tag-is-success"},"Array"),(0,l.kt)("span",{class:"tag-is-success"},"Breadth-First Search"),(0,l.kt)("span",{class:"tag-is-success"},"Matrix"),(0,l.kt)("h3",{id:"inputs-159"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-159"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-159"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-159"},"Further Readings"),(0,l.kt)("h2",{id:"find-the-duplicate-number"},"Find the Duplicate Number"),(0,l.kt)("span",{class:"tag-is-success"},"Array"),(0,l.kt)("span",{class:"tag-is-success"},"Two Pointers"),(0,l.kt)("span",{class:"tag-is-success"},"Binary Search"),(0,l.kt)("span",{class:"tag-is-success"},"Bit Manipulation"),(0,l.kt)("h3",{id:"inputs-160"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-160"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-160"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-160"},"Further Readings"),(0,l.kt)("h2",{id:"unique-word-abbreviation"},"Unique Word Abbreviation"),(0,l.kt)("span",{class:"tag-is-success"},"Array"),(0,l.kt)("span",{class:"tag-is-success"},"Hash Table"),(0,l.kt)("span",{class:"tag-is-success"},"String"),(0,l.kt)("span",{class:"tag-is-success"},"Design"),(0,l.kt)("h3",{id:"inputs-161"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-161"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-161"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-161"},"Further Readings"),(0,l.kt)("h2",{id:"game-of-life"},"Game of Life"),(0,l.kt)("span",{class:"tag-is-success"},"Array"),(0,l.kt)("span",{class:"tag-is-success"},"Matrix"),(0,l.kt)("span",{class:"tag-is-success"},"Simulation"),(0,l.kt)("h3",{id:"inputs-162"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-162"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-162"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-162"},"Further Readings"),(0,l.kt)("h2",{id:"word-pattern-ii"},"Word Pattern II"),(0,l.kt)("span",{class:"tag-is-success"},"Hash Table"),(0,l.kt)("span",{class:"tag-is-success"},"String"),(0,l.kt)("span",{class:"tag-is-success"},"Backtracking"),(0,l.kt)("h3",{id:"inputs-163"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-163"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-163"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-163"},"Further Readings"),(0,l.kt)("h2",{id:"flip-game-ii"},"Flip Game II"),(0,l.kt)("span",{class:"tag-is-success"},"Math"),(0,l.kt)("span",{class:"tag-is-success"},"Dynamic Programming"),(0,l.kt)("span",{class:"tag-is-success"},"Backtracking"),(0,l.kt)("span",{class:"tag-is-success"},"Memoization"),(0,l.kt)("span",{class:"tag-is-success"},"Game Theory"),(0,l.kt)("h3",{id:"inputs-164"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-164"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-164"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-164"},"Further Readings"),(0,l.kt)("h2",{id:"binary-tree-longest-consecutive-sequence"},"Binary Tree Longest Consecutive Sequence"),(0,l.kt)("span",{class:"tag-is-success"},"Tree"),(0,l.kt)("span",{class:"tag-is-success"},"Depth-First Search"),(0,l.kt)("span",{class:"tag-is-success"},"Binary Tree"),(0,l.kt)("h3",{id:"inputs-165"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-165"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-165"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-165"},"Further Readings"),(0,l.kt)("h2",{id:"bulls-and-cows"},"Bulls and Cows"),(0,l.kt)("span",{class:"tag-is-success"},"Hash Table"),(0,l.kt)("span",{class:"tag-is-success"},"String"),(0,l.kt)("span",{class:"tag-is-success"},"Counting"),(0,l.kt)("h3",{id:"inputs-166"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-166"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-166"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-166"},"Further Readings"),(0,l.kt)("h2",{id:"longest-increasing-subsequence"},"Longest Increasing Subsequence"),(0,l.kt)("span",{class:"tag-is-success"},"Array"),(0,l.kt)("span",{class:"tag-is-success"},"Binary Search"),(0,l.kt)("span",{class:"tag-is-success"},"Dynamic Programming"),(0,l.kt)("h3",{id:"inputs-167"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-167"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-167"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-167"},"Further Readings"),(0,l.kt)("h2",{id:"range-sum-query-2d---immutable"},"Range Sum Query 2D - Immutable"),(0,l.kt)("span",{class:"tag-is-success"},"Array"),(0,l.kt)("span",{class:"tag-is-success"},"Design"),(0,l.kt)("span",{class:"tag-is-success"},"Matrix"),(0,l.kt)("span",{class:"tag-is-success"},"Prefix Sum"),(0,l.kt)("h3",{id:"inputs-168"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-168"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-168"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-168"},"Further Readings"),(0,l.kt)("h2",{id:"additive-number"},"Additive Number"),(0,l.kt)("span",{class:"tag-is-success"},"String"),(0,l.kt)("span",{class:"tag-is-success"},"Backtracking"),(0,l.kt)("h3",{id:"inputs-169"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-169"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-169"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-169"},"Further Readings"),(0,l.kt)("h2",{id:"range-sum-query---mutable"},"Range Sum Query - Mutable"),(0,l.kt)("span",{class:"tag-is-success"},"Array"),(0,l.kt)("span",{class:"tag-is-success"},"Design"),(0,l.kt)("span",{class:"tag-is-success"},"Binary Indexed Tree"),(0,l.kt)("span",{class:"tag-is-success"},"Segment Tree"),(0,l.kt)("h3",{id:"inputs-170"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-170"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-170"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-170"},"Further Readings"),(0,l.kt)("h2",{id:"best-time-to-buy-and-sell-stock-with-cooldown"},"Best Time to Buy and Sell Stock with Cooldown"),(0,l.kt)("span",{class:"tag-is-success"},"Array"),(0,l.kt)("span",{class:"tag-is-success"},"Dynamic Programming"),(0,l.kt)("h3",{id:"inputs-171"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-171"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-171"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-171"},"Further Readings"),(0,l.kt)("h2",{id:"minimum-height-trees"},"Minimum Height Trees"),(0,l.kt)("span",{class:"tag-is-success"},"Depth-First Search"),(0,l.kt)("span",{class:"tag-is-success"},"Breadth-First Search"),(0,l.kt)("span",{class:"tag-is-success"},"Graph"),(0,l.kt)("span",{class:"tag-is-success"},"Topological Sort"),(0,l.kt)("h3",{id:"inputs-172"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-172"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-172"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-172"},"Further Readings"),(0,l.kt)("h2",{id:"sparse-matrix-multiplication"},"Sparse Matrix Multiplication"),(0,l.kt)("span",{class:"tag-is-success"},"Array"),(0,l.kt)("span",{class:"tag-is-success"},"Hash Table"),(0,l.kt)("span",{class:"tag-is-success"},"Matrix"),(0,l.kt)("h3",{id:"inputs-173"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-173"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-173"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-173"},"Further Readings"),(0,l.kt)("h2",{id:"super-ugly-number"},"Super Ugly Number"),(0,l.kt)("span",{class:"tag-is-success"},"Array"),(0,l.kt)("span",{class:"tag-is-success"},"Math"),(0,l.kt)("span",{class:"tag-is-success"},"Dynamic Programming"),(0,l.kt)("h3",{id:"inputs-174"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-174"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-174"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-174"},"Further Readings"),(0,l.kt)("h2",{id:"binary-tree-vertical-order-traversal"},"Binary Tree Vertical Order Traversal"),(0,l.kt)("span",{class:"tag-is-success"},"Hash Table"),(0,l.kt)("span",{class:"tag-is-success"},"Tree"),(0,l.kt)("span",{class:"tag-is-success"},"Depth-First Search"),(0,l.kt)("span",{class:"tag-is-success"},"Breadth-First Search"),(0,l.kt)("span",{class:"tag-is-success"},"Binary Tree"),(0,l.kt)("h3",{id:"inputs-175"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-175"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-175"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-175"},"Further Readings"),(0,l.kt)("h2",{id:"remove-duplicate-letters"},"Remove Duplicate Letters"),(0,l.kt)("span",{class:"tag-is-success"},"String"),(0,l.kt)("span",{class:"tag-is-success"},"Stack"),(0,l.kt)("span",{class:"tag-is-success"},"Greedy"),(0,l.kt)("span",{class:"tag-is-success"},"Monotonic Stack"),(0,l.kt)("h3",{id:"inputs-176"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-176"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-176"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-176"},"Further Readings"),(0,l.kt)("h2",{id:"maximum-product-of-word-lengths"},"Maximum Product of Word Lengths"),(0,l.kt)("span",{class:"tag-is-success"},"Array"),(0,l.kt)("span",{class:"tag-is-success"},"String"),(0,l.kt)("span",{class:"tag-is-success"},"Bit Manipulation"),(0,l.kt)("h3",{id:"inputs-177"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-177"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-177"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-177"},"Further Readings"),(0,l.kt)("h2",{id:"bulb-switcher"},"Bulb Switcher"),(0,l.kt)("span",{class:"tag-is-success"},"Math"),(0,l.kt)("span",{class:"tag-is-success"},"Brainteaser"),(0,l.kt)("h3",{id:"inputs-178"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-178"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-178"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-178"},"Further Readings"),(0,l.kt)("h2",{id:"generalized-abbreviation"},"Generalized Abbreviation"),(0,l.kt)("span",{class:"tag-is-success"},"String"),(0,l.kt)("span",{class:"tag-is-success"},"Backtracking"),(0,l.kt)("span",{class:"tag-is-success"},"Bit Manipulation"),(0,l.kt)("h3",{id:"inputs-179"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-179"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-179"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-179"},"Further Readings"),(0,l.kt)("h2",{id:"coin-change"},"Coin Change"),(0,l.kt)("span",{class:"tag-is-success"},"Array"),(0,l.kt)("span",{class:"tag-is-success"},"Dynamic Programming"),(0,l.kt)("span",{class:"tag-is-success"},"Breadth-First Search"),(0,l.kt)("h3",{id:"inputs-180"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-180"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-180"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-180"},"Further Readings"),(0,l.kt)("h2",{id:"number-of-connected-components-in-an-undirected-graph"},"Number of Connected Components in an Undirected Graph"),(0,l.kt)("span",{class:"tag-is-success"},"Depth-First Search"),(0,l.kt)("span",{class:"tag-is-success"},"Breadth-First Search"),(0,l.kt)("span",{class:"tag-is-success"},"Union Find"),(0,l.kt)("span",{class:"tag-is-success"},"Graph"),(0,l.kt)("h3",{id:"inputs-181"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-181"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-181"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-181"},"Further Readings"),(0,l.kt)("h2",{id:"wiggle-sort-ii"},"Wiggle Sort II"),(0,l.kt)("span",{class:"tag-is-success"},"Array"),(0,l.kt)("span",{class:"tag-is-success"},"Divide and Conquer"),(0,l.kt)("span",{class:"tag-is-success"},"Sorting"),(0,l.kt)("span",{class:"tag-is-success"},"Quickselect"),(0,l.kt)("h3",{id:"inputs-182"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-182"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-182"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-182"},"Further Readings"),(0,l.kt)("h2",{id:"maximum-size-subarray-sum-equals-k"},"Maximum Size Subarray Sum Equals k"),(0,l.kt)("span",{class:"tag-is-success"},"Array"),(0,l.kt)("span",{class:"tag-is-success"},"Hash Table"),(0,l.kt)("h3",{id:"inputs-183"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-183"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-183"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-183"},"Further Readings"),(0,l.kt)("h2",{id:"odd-even-linked-list"},"Odd Even Linked List"),(0,l.kt)("span",{class:"tag-is-success"},"Linked List"),(0,l.kt)("h3",{id:"inputs-184"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-184"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-184"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-184"},"Further Readings"),(0,l.kt)("h2",{id:"verify-preorder-serialization-of-a-binary-tree"},"Verify Preorder Serialization of a Binary Tree"),(0,l.kt)("span",{class:"tag-is-success"},"String"),(0,l.kt)("span",{class:"tag-is-success"},"Stack"),(0,l.kt)("span",{class:"tag-is-success"},"Tree"),(0,l.kt)("span",{class:"tag-is-success"},"Binary Tree"),(0,l.kt)("h3",{id:"inputs-185"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-185"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-185"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-185"},"Further Readings"),(0,l.kt)("h2",{id:"largest-bst-subtree"},"Largest BST Subtree"),(0,l.kt)("span",{class:"tag-is-success"},"Dynamic Programming"),(0,l.kt)("span",{class:"tag-is-success"},"Tree"),(0,l.kt)("span",{class:"tag-is-success"},"Depth-First Search"),(0,l.kt)("span",{class:"tag-is-success"},"Binary Search Tree"),(0,l.kt)("span",{class:"tag-is-success"},"Binary Tree"),(0,l.kt)("h3",{id:"inputs-186"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-186"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-186"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-186"},"Further Readings"),(0,l.kt)("h2",{id:"increasing-triplet-subsequence"},"Increasing Triplet Subsequence"),(0,l.kt)("span",{class:"tag-is-success"},"Array"),(0,l.kt)("span",{class:"tag-is-success"},"Greedy"),(0,l.kt)("h3",{id:"inputs-187"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-187"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-187"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-187"},"Further Readings"),(0,l.kt)("h2",{id:"house-robber-iii"},"House Robber III"),(0,l.kt)("span",{class:"tag-is-success"},"Dynamic Programming"),(0,l.kt)("span",{class:"tag-is-success"},"Tree"),(0,l.kt)("span",{class:"tag-is-success"},"Depth-First Search"),(0,l.kt)("span",{class:"tag-is-success"},"Binary Tree"),(0,l.kt)("h3",{id:"inputs-188"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-188"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-188"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-188"},"Further Readings"),(0,l.kt)("h2",{id:"nested-list-weight-sum"},"Nested List Weight Sum"),(0,l.kt)("span",{class:"tag-is-success"},"Depth-First Search"),(0,l.kt)("span",{class:"tag-is-success"},"Breadth-First Search"),(0,l.kt)("h3",{id:"inputs-189"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-189"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-189"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-189"},"Further Readings"),(0,l.kt)("h2",{id:"longest-substring-with-at-most-k-distinct-characters"},"Longest Substring with At Most K Distinct Characters"),(0,l.kt)("span",{class:"tag-is-success"},"Hash Table"),(0,l.kt)("span",{class:"tag-is-success"},"String"),(0,l.kt)("span",{class:"tag-is-success"},"Sliding Window"),(0,l.kt)("h3",{id:"inputs-190"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-190"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-190"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-190"},"Further Readings"),(0,l.kt)("h2",{id:"flatten-nested-list-iterator"},"Flatten Nested List Iterator"),(0,l.kt)("span",{class:"tag-is-success"},"Stack"),(0,l.kt)("span",{class:"tag-is-success"},"Tree"),(0,l.kt)("span",{class:"tag-is-success"},"Depth-First Search"),(0,l.kt)("span",{class:"tag-is-success"},"Design"),(0,l.kt)("span",{class:"tag-is-success"},"Queue"),(0,l.kt)("span",{class:"tag-is-success"},"Iterator"),(0,l.kt)("h3",{id:"inputs-191"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-191"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-191"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-191"},"Further Readings"),(0,l.kt)("h2",{id:"integer-break"},"Integer Break"),(0,l.kt)("span",{class:"tag-is-success"},"Math"),(0,l.kt)("span",{class:"tag-is-success"},"Dynamic Programming"),(0,l.kt)("h3",{id:"inputs-192"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-192"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-192"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-192"},"Further Readings"),(0,l.kt)("h2",{id:"top-k-frequent-elements"},"Top K Frequent Elements"),(0,l.kt)("span",{class:"tag-is-success"},"Array"),(0,l.kt)("span",{class:"tag-is-success"},"Hash Table"),(0,l.kt)("span",{class:"tag-is-success"},"Divide and Conquer"),(0,l.kt)("span",{class:"tag-is-success"},"Sorting"),(0,l.kt)("span",{class:"tag-is-success"},"Heap (Priority Queue)"),(0,l.kt)("span",{class:"tag-is-success"},"Bucket Sort"),(0,l.kt)("span",{class:"tag-is-success"},"Counting"),(0,l.kt)("span",{class:"tag-is-success"},"Quickselect"),(0,l.kt)("h3",{id:"inputs-193"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-193"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-193"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-193"},"Further Readings"),(0,l.kt)("h2",{id:"design-tic-tac-toe"},"Design Tic-Tac-Toe"),(0,l.kt)("span",{class:"tag-is-success"},"Array"),(0,l.kt)("span",{class:"tag-is-success"},"Hash Table"),(0,l.kt)("span",{class:"tag-is-success"},"Design"),(0,l.kt)("span",{class:"tag-is-success"},"Matrix"),(0,l.kt)("h3",{id:"inputs-194"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-194"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-194"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-194"},"Further Readings"),(0,l.kt)("h2",{id:"android-unlock-patterns"},"Android Unlock Patterns"),(0,l.kt)("span",{class:"tag-is-success"},"Dynamic Programming"),(0,l.kt)("span",{class:"tag-is-success"},"Backtracking"),(0,l.kt)("h3",{id:"inputs-195"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-195"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-195"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-195"},"Further Readings"),(0,l.kt)("h2",{id:"design-snake-game"},"Design Snake Game"),(0,l.kt)("span",{class:"tag-is-success"},"Array"),(0,l.kt)("span",{class:"tag-is-success"},"Design"),(0,l.kt)("span",{class:"tag-is-success"},"Queue"),(0,l.kt)("span",{class:"tag-is-success"},"Matrix"),(0,l.kt)("h3",{id:"inputs-196"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-196"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-196"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-196"},"Further Readings"),(0,l.kt)("h2",{id:"design-twitter"},"Design Twitter"),(0,l.kt)("span",{class:"tag-is-success"},"Hash Table"),(0,l.kt)("span",{class:"tag-is-success"},"Linked List"),(0,l.kt)("span",{class:"tag-is-success"},"Design"),(0,l.kt)("span",{class:"tag-is-success"},"Heap (Priority Queue)"),(0,l.kt)("h3",{id:"inputs-197"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-197"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-197"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-197"},"Further Readings"),(0,l.kt)("h2",{id:"line-reflection"},"Line Reflection"),(0,l.kt)("span",{class:"tag-is-success"},"Array"),(0,l.kt)("span",{class:"tag-is-success"},"Hash Table"),(0,l.kt)("span",{class:"tag-is-success"},"Math"),(0,l.kt)("h3",{id:"inputs-198"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-198"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-198"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-198"},"Further Readings"),(0,l.kt)("h2",{id:"count-numbers-with-unique-digits"},"Count Numbers with Unique Digits"),(0,l.kt)("span",{class:"tag-is-success"},"Math"),(0,l.kt)("span",{class:"tag-is-success"},"Dynamic Programming"),(0,l.kt)("span",{class:"tag-is-success"},"Backtracking"),(0,l.kt)("h3",{id:"inputs-199"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-199"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-199"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-199"},"Further Readings"),(0,l.kt)("h2",{id:"sort-transformed-array"},"Sort Transformed Array"),(0,l.kt)("span",{class:"tag-is-success"},"Array"),(0,l.kt)("span",{class:"tag-is-success"},"Math"),(0,l.kt)("span",{class:"tag-is-success"},"Two Pointers"),(0,l.kt)("span",{class:"tag-is-success"},"Sorting"),(0,l.kt)("h3",{id:"inputs-200"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-200"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-200"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-200"},"Further Readings"),(0,l.kt)("h2",{id:"bomb-enemy"},"Bomb Enemy"),(0,l.kt)("span",{class:"tag-is-success"},"Array"),(0,l.kt)("span",{class:"tag-is-success"},"Dynamic Programming"),(0,l.kt)("span",{class:"tag-is-success"},"Matrix"),(0,l.kt)("h3",{id:"inputs-201"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-201"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-201"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-201"},"Further Readings"),(0,l.kt)("h2",{id:"design-hit-counter"},"Design Hit Counter"),(0,l.kt)("span",{class:"tag-is-success"},"Array"),(0,l.kt)("span",{class:"tag-is-success"},"Hash Table"),(0,l.kt)("span",{class:"tag-is-success"},"Binary Search"),(0,l.kt)("span",{class:"tag-is-success"},"Design"),(0,l.kt)("span",{class:"tag-is-success"},"Queue"),(0,l.kt)("h3",{id:"inputs-202"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-202"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-202"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-202"},"Further Readings"),(0,l.kt)("h2",{id:"nested-list-weight-sum-ii"},"Nested List Weight Sum II"),(0,l.kt)("span",{class:"tag-is-success"},"Stack"),(0,l.kt)("span",{class:"tag-is-success"},"Depth-First Search"),(0,l.kt)("span",{class:"tag-is-success"},"Breadth-First Search"),(0,l.kt)("h3",{id:"inputs-203"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-203"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-203"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-203"},"Further Readings"),(0,l.kt)("h2",{id:"water-and-jug-problem"},"Water and Jug Problem"),(0,l.kt)("span",{class:"tag-is-success"},"Math"),(0,l.kt)("span",{class:"tag-is-success"},"Depth-First Search"),(0,l.kt)("span",{class:"tag-is-success"},"Breadth-First Search"),(0,l.kt)("h3",{id:"inputs-204"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-204"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-204"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-204"},"Further Readings"),(0,l.kt)("h2",{id:"find-leaves-of-binary-tree"},"Find Leaves of Binary Tree"),(0,l.kt)("span",{class:"tag-is-success"},"Tree"),(0,l.kt)("span",{class:"tag-is-success"},"Depth-First Search"),(0,l.kt)("span",{class:"tag-is-success"},"Binary Tree"),(0,l.kt)("h3",{id:"inputs-205"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-205"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-205"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-205"},"Further Readings"),(0,l.kt)("h2",{id:"largest-divisible-subset"},"Largest Divisible Subset"),(0,l.kt)("span",{class:"tag-is-success"},"Array"),(0,l.kt)("span",{class:"tag-is-success"},"Math"),(0,l.kt)("span",{class:"tag-is-success"},"Dynamic Programming"),(0,l.kt)("span",{class:"tag-is-success"},"Sorting"),(0,l.kt)("h3",{id:"inputs-206"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-206"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-206"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-206"},"Further Readings"),(0,l.kt)("h2",{id:"plus-one-linked-list"},"Plus One Linked List"),(0,l.kt)("span",{class:"tag-is-success"},"Linked List"),(0,l.kt)("span",{class:"tag-is-success"},"Math"),(0,l.kt)("h3",{id:"inputs-207"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-207"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-207"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-207"},"Further Readings"),(0,l.kt)("h2",{id:"range-addition"},"Range Addition"),(0,l.kt)("span",{class:"tag-is-success"},"Array"),(0,l.kt)("span",{class:"tag-is-success"},"Prefix Sum"),(0,l.kt)("h3",{id:"inputs-208"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-208"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-208"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-208"},"Further Readings"),(0,l.kt)("h2",{id:"sum-of-two-integers"},"Sum of Two Integers"),(0,l.kt)("span",{class:"tag-is-success"},"Math"),(0,l.kt)("span",{class:"tag-is-success"},"Bit Manipulation"),(0,l.kt)("h3",{id:"inputs-209"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-209"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-209"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-209"},"Further Readings"),(0,l.kt)("h2",{id:"super-pow"},"Super Pow"),(0,l.kt)("span",{class:"tag-is-success"},"Math"),(0,l.kt)("span",{class:"tag-is-success"},"Divide and Conquer"),(0,l.kt)("h3",{id:"inputs-210"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-210"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-210"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-210"},"Further Readings"),(0,l.kt)("h2",{id:"find-k-pairs-with-smallest-sums"},"Find K Pairs with Smallest Sums"),(0,l.kt)("span",{class:"tag-is-success"},"Array"),(0,l.kt)("span",{class:"tag-is-success"},"Heap (Priority Queue)"),(0,l.kt)("h3",{id:"inputs-211"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-211"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-211"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-211"},"Further Readings"),(0,l.kt)("h2",{id:"guess-number-higher-or-lower-ii"},"Guess Number Higher or Lower II"),(0,l.kt)("span",{class:"tag-is-success"},"Math"),(0,l.kt)("span",{class:"tag-is-success"},"Dynamic Programming"),(0,l.kt)("span",{class:"tag-is-success"},"Game Theory"),(0,l.kt)("h3",{id:"inputs-212"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-212"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-212"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-212"},"Further Readings"),(0,l.kt)("h2",{id:"wiggle-subsequence"},"Wiggle Subsequence"),(0,l.kt)("span",{class:"tag-is-success"},"Array"),(0,l.kt)("span",{class:"tag-is-success"},"Dynamic Programming"),(0,l.kt)("span",{class:"tag-is-success"},"Greedy"),(0,l.kt)("h3",{id:"inputs-213"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-213"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-213"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-213"},"Further Readings"),(0,l.kt)("h2",{id:"combination-sum-iv"},"Combination Sum IV"),(0,l.kt)("span",{class:"tag-is-success"},"Array"),(0,l.kt)("span",{class:"tag-is-success"},"Dynamic Programming"),(0,l.kt)("h3",{id:"inputs-214"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-214"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-214"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-214"},"Further Readings"),(0,l.kt)("h2",{id:"kth-smallest-element-in-a-sorted-matrix"},"Kth Smallest Element in a Sorted Matrix"),(0,l.kt)("span",{class:"tag-is-success"},"Array"),(0,l.kt)("span",{class:"tag-is-success"},"Binary Search"),(0,l.kt)("span",{class:"tag-is-success"},"Sorting"),(0,l.kt)("span",{class:"tag-is-success"},"Heap (Priority Queue)"),(0,l.kt)("span",{class:"tag-is-success"},"Matrix"),(0,l.kt)("h3",{id:"inputs-215"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-215"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-215"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-215"},"Further Readings"),(0,l.kt)("h2",{id:"design-phone-directory"},"Design Phone Directory"),(0,l.kt)("span",{class:"tag-is-success"},"Array"),(0,l.kt)("span",{class:"tag-is-success"},"Hash Table"),(0,l.kt)("span",{class:"tag-is-success"},"Linked List"),(0,l.kt)("span",{class:"tag-is-success"},"Design"),(0,l.kt)("span",{class:"tag-is-success"},"Queue"),(0,l.kt)("h3",{id:"inputs-216"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-216"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-216"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-216"},"Further Readings"),(0,l.kt)("h2",{id:"insert-delete-getrandom-o1"},"Insert Delete GetRandom O(1)"),(0,l.kt)("span",{class:"tag-is-success"},"Array"),(0,l.kt)("span",{class:"tag-is-success"},"Hash Table"),(0,l.kt)("span",{class:"tag-is-success"},"Math"),(0,l.kt)("span",{class:"tag-is-success"},"Design"),(0,l.kt)("span",{class:"tag-is-success"},"Randomized"),(0,l.kt)("h3",{id:"inputs-217"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-217"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-217"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-217"},"Further Readings"),(0,l.kt)("h2",{id:"linked-list-random-node"},"Linked List Random Node"),(0,l.kt)("span",{class:"tag-is-success"},"Linked List"),(0,l.kt)("span",{class:"tag-is-success"},"Math"),(0,l.kt)("span",{class:"tag-is-success"},"Reservoir Sampling"),(0,l.kt)("span",{class:"tag-is-success"},"Randomized"),(0,l.kt)("h3",{id:"inputs-218"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-218"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-218"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-218"},"Further Readings"),(0,l.kt)("h2",{id:"shuffle-an-array"},"Shuffle an Array"),(0,l.kt)("span",{class:"tag-is-success"},"Array"),(0,l.kt)("span",{class:"tag-is-success"},"Math"),(0,l.kt)("span",{class:"tag-is-success"},"Randomized"),(0,l.kt)("h3",{id:"inputs-219"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-219"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-219"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-219"},"Further Readings"),(0,l.kt)("h2",{id:"mini-parser"},"Mini Parser"),(0,l.kt)("span",{class:"tag-is-success"},"String"),(0,l.kt)("span",{class:"tag-is-success"},"Stack"),(0,l.kt)("span",{class:"tag-is-success"},"Depth-First Search"),(0,l.kt)("h3",{id:"inputs-220"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-220"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-220"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-220"},"Further Readings"),(0,l.kt)("h2",{id:"lexicographical-numbers"},"Lexicographical Numbers"),(0,l.kt)("span",{class:"tag-is-success"},"Depth-First Search"),(0,l.kt)("span",{class:"tag-is-success"},"Trie"),(0,l.kt)("h3",{id:"inputs-221"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-221"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-221"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-221"},"Further Readings"),(0,l.kt)("h2",{id:"longest-absolute-file-path"},"Longest Absolute File Path"),(0,l.kt)("span",{class:"tag-is-success"},"String"),(0,l.kt)("span",{class:"tag-is-success"},"Stack"),(0,l.kt)("span",{class:"tag-is-success"},"Depth-First Search"),(0,l.kt)("h3",{id:"inputs-222"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-222"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-222"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-222"},"Further Readings"),(0,l.kt)("h2",{id:"elimination-game"},"Elimination Game"),(0,l.kt)("span",{class:"tag-is-success"},"Math"),(0,l.kt)("span",{class:"tag-is-success"},"Recursion"),(0,l.kt)("h3",{id:"inputs-223"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-223"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-223"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-223"},"Further Readings"),(0,l.kt)("h2",{id:"utf-8-validation"},"UTF-8 Validation"),(0,l.kt)("span",{class:"tag-is-success"},"Array"),(0,l.kt)("span",{class:"tag-is-success"},"Bit Manipulation"),(0,l.kt)("h3",{id:"inputs-224"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-224"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-224"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-224"},"Further Readings"),(0,l.kt)("h2",{id:"decode-string"},"Decode String"),(0,l.kt)("span",{class:"tag-is-success"},"String"),(0,l.kt)("span",{class:"tag-is-success"},"Stack"),(0,l.kt)("span",{class:"tag-is-success"},"Recursion"),(0,l.kt)("h3",{id:"inputs-225"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-225"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-225"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-225"},"Further Readings"),(0,l.kt)("h2",{id:"longest-substring-with-at-least-k-repeating-characters"},"Longest Substring with At Least K Repeating Characters"),(0,l.kt)("span",{class:"tag-is-success"},"Hash Table"),(0,l.kt)("span",{class:"tag-is-success"},"String"),(0,l.kt)("span",{class:"tag-is-success"},"Divide and Conquer"),(0,l.kt)("span",{class:"tag-is-success"},"Sliding Window"),(0,l.kt)("h3",{id:"inputs-226"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-226"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-226"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-226"},"Further Readings"),(0,l.kt)("h2",{id:"rotate-function"},"Rotate Function"),(0,l.kt)("span",{class:"tag-is-success"},"Array"),(0,l.kt)("span",{class:"tag-is-success"},"Math"),(0,l.kt)("span",{class:"tag-is-success"},"Dynamic Programming"),(0,l.kt)("h3",{id:"inputs-227"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-227"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-227"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-227"},"Further Readings"),(0,l.kt)("h2",{id:"integer-replacement"},"Integer Replacement"),(0,l.kt)("span",{class:"tag-is-success"},"Dynamic Programming"),(0,l.kt)("span",{class:"tag-is-success"},"Greedy"),(0,l.kt)("span",{class:"tag-is-success"},"Bit Manipulation"),(0,l.kt)("span",{class:"tag-is-success"},"Memoization"),(0,l.kt)("h3",{id:"inputs-228"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-228"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-228"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-228"},"Further Readings"),(0,l.kt)("h2",{id:"random-pick-index"},"Random Pick Index"),(0,l.kt)("span",{class:"tag-is-success"},"Hash Table"),(0,l.kt)("span",{class:"tag-is-success"},"Math"),(0,l.kt)("span",{class:"tag-is-success"},"Reservoir Sampling"),(0,l.kt)("span",{class:"tag-is-success"},"Randomized"),(0,l.kt)("h3",{id:"inputs-229"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-229"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-229"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-229"},"Further Readings"),(0,l.kt)("h2",{id:"evaluate-division"},"Evaluate Division"),(0,l.kt)("span",{class:"tag-is-success"},"Array"),(0,l.kt)("span",{class:"tag-is-success"},"Depth-First Search"),(0,l.kt)("span",{class:"tag-is-success"},"Breadth-First Search"),(0,l.kt)("span",{class:"tag-is-success"},"Union Find"),(0,l.kt)("span",{class:"tag-is-success"},"Graph"),(0,l.kt)("span",{class:"tag-is-success"},"Shortest Path"),(0,l.kt)("h3",{id:"inputs-230"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-230"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-230"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-230"},"Further Readings"),(0,l.kt)("h2",{id:"nth-digit"},"Nth Digit"),(0,l.kt)("span",{class:"tag-is-success"},"Math"),(0,l.kt)("span",{class:"tag-is-success"},"Binary Search"),(0,l.kt)("h3",{id:"inputs-231"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-231"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-231"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-231"},"Further Readings"),(0,l.kt)("h2",{id:"remove-k-digits"},"Remove K Digits"),(0,l.kt)("span",{class:"tag-is-success"},"String"),(0,l.kt)("span",{class:"tag-is-success"},"Stack"),(0,l.kt)("span",{class:"tag-is-success"},"Greedy"),(0,l.kt)("span",{class:"tag-is-success"},"Monotonic Stack"),(0,l.kt)("h3",{id:"inputs-232"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-232"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-232"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-232"},"Further Readings"),(0,l.kt)("h2",{id:"queue-reconstruction-by-height"},"Queue Reconstruction by Height"),(0,l.kt)("span",{class:"tag-is-success"},"Array"),(0,l.kt)("span",{class:"tag-is-success"},"Greedy"),(0,l.kt)("span",{class:"tag-is-success"},"Binary Indexed Tree"),(0,l.kt)("span",{class:"tag-is-success"},"Segment Tree"),(0,l.kt)("span",{class:"tag-is-success"},"Sorting"),(0,l.kt)("h3",{id:"inputs-233"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-233"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-233"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-233"},"Further Readings"),(0,l.kt)("h2",{id:"arithmetic-slices"},"Arithmetic Slices"),(0,l.kt)("span",{class:"tag-is-success"},"Array"),(0,l.kt)("span",{class:"tag-is-success"},"Dynamic Programming"),(0,l.kt)("h3",{id:"inputs-234"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-234"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-234"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-234"},"Further Readings"),(0,l.kt)("h2",{id:"partition-equal-subset-sum"},"Partition Equal Subset Sum"),(0,l.kt)("span",{class:"tag-is-success"},"Array"),(0,l.kt)("span",{class:"tag-is-success"},"Dynamic Programming"),(0,l.kt)("h3",{id:"inputs-235"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-235"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-235"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-235"},"Further Readings"),(0,l.kt)("h2",{id:"pacific-atlantic-water-flow"},"Pacific Atlantic Water Flow"),(0,l.kt)("span",{class:"tag-is-success"},"Array"),(0,l.kt)("span",{class:"tag-is-success"},"Depth-First Search"),(0,l.kt)("span",{class:"tag-is-success"},"Breadth-First Search"),(0,l.kt)("span",{class:"tag-is-success"},"Matrix"),(0,l.kt)("h3",{id:"inputs-236"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-236"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-236"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-236"},"Further Readings"),(0,l.kt)("h2",{id:"sentence-screen-fitting"},"Sentence Screen Fitting"),(0,l.kt)("span",{class:"tag-is-success"},"String"),(0,l.kt)("span",{class:"tag-is-success"},"Dynamic Programming"),(0,l.kt)("span",{class:"tag-is-success"},"Simulation"),(0,l.kt)("h3",{id:"inputs-237"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-237"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-237"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-237"},"Further Readings"),(0,l.kt)("h2",{id:"battleships-in-a-board"},"Battleships in a Board"),(0,l.kt)("span",{class:"tag-is-success"},"Array"),(0,l.kt)("span",{class:"tag-is-success"},"Depth-First Search"),(0,l.kt)("span",{class:"tag-is-success"},"Matrix"),(0,l.kt)("h3",{id:"inputs-238"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-238"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-238"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-238"},"Further Readings"),(0,l.kt)("h2",{id:"maximum-xor-of-two-numbers-in-an-array"},"Maximum XOR of Two Numbers in an Array"),(0,l.kt)("span",{class:"tag-is-success"},"Array"),(0,l.kt)("span",{class:"tag-is-success"},"Hash Table"),(0,l.kt)("span",{class:"tag-is-success"},"Bit Manipulation"),(0,l.kt)("span",{class:"tag-is-success"},"Trie"),(0,l.kt)("h3",{id:"inputs-239"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-239"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-239"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-239"},"Further Readings"),(0,l.kt)("h2",{id:"reconstruct-original-digits-from-english"},"Reconstruct Original Digits from English"),(0,l.kt)("span",{class:"tag-is-success"},"Hash Table"),(0,l.kt)("span",{class:"tag-is-success"},"Math"),(0,l.kt)("span",{class:"tag-is-success"},"String"),(0,l.kt)("h3",{id:"inputs-240"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-240"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-240"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-240"},"Further Readings"),(0,l.kt)("h2",{id:"longest-repeating-character-replacement"},"Longest Repeating Character Replacement"),(0,l.kt)("span",{class:"tag-is-success"},"Hash Table"),(0,l.kt)("span",{class:"tag-is-success"},"String"),(0,l.kt)("span",{class:"tag-is-success"},"Sliding Window"),(0,l.kt)("h3",{id:"inputs-241"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-241"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-241"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-241"},"Further Readings"),(0,l.kt)("h2",{id:"convert-binary-search-tree-to-sorted-doubly-linked-list"},"Convert Binary Search Tree to Sorted Doubly Linked List"),(0,l.kt)("span",{class:"tag-is-success"},"Linked List"),(0,l.kt)("span",{class:"tag-is-success"},"Stack"),(0,l.kt)("span",{class:"tag-is-success"},"Tree"),(0,l.kt)("span",{class:"tag-is-success"},"Depth-First Search"),(0,l.kt)("span",{class:"tag-is-success"},"Binary Search Tree"),(0,l.kt)("span",{class:"tag-is-success"},"Binary Tree"),(0,l.kt)("span",{class:"tag-is-success"},"Doubly-Linked List"),(0,l.kt)("h3",{id:"inputs-242"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-242"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-242"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-242"},"Further Readings"),(0,l.kt)("h2",{id:"construct-quad-tree"},"Construct Quad Tree"),(0,l.kt)("span",{class:"tag-is-success"},"Array"),(0,l.kt)("span",{class:"tag-is-success"},"Divide and Conquer"),(0,l.kt)("span",{class:"tag-is-success"},"Tree"),(0,l.kt)("span",{class:"tag-is-success"},"Matrix"),(0,l.kt)("h3",{id:"inputs-243"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-243"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-243"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-243"},"Further Readings"),(0,l.kt)("h2",{id:"n-ary-tree-level-order-traversal"},"N-ary Tree Level Order Traversal"),(0,l.kt)("span",{class:"tag-is-success"},"Tree"),(0,l.kt)("span",{class:"tag-is-success"},"Breadth-First Search"),(0,l.kt)("h3",{id:"inputs-244"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-244"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-244"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-244"},"Further Readings"),(0,l.kt)("h2",{id:"flatten-a-multilevel-doubly-linked-list"},"Flatten a Multilevel Doubly Linked List"),(0,l.kt)("span",{class:"tag-is-success"},"Linked List"),(0,l.kt)("span",{class:"tag-is-success"},"Depth-First Search"),(0,l.kt)("span",{class:"tag-is-success"},"Doubly-Linked List"),(0,l.kt)("h3",{id:"inputs-245"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-245"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-245"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-245"},"Further Readings"),(0,l.kt)("h2",{id:"minimum-genetic-mutation"},"Minimum Genetic Mutation"),(0,l.kt)("span",{class:"tag-is-success"},"Hash Table"),(0,l.kt)("span",{class:"tag-is-success"},"String"),(0,l.kt)("span",{class:"tag-is-success"},"Breadth-First Search"),(0,l.kt)("h3",{id:"inputs-246"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-246"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-246"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-246"},"Further Readings"),(0,l.kt)("h2",{id:"non-overlapping-intervals"},"Non-overlapping Intervals"),(0,l.kt)("span",{class:"tag-is-success"},"Array"),(0,l.kt)("span",{class:"tag-is-success"},"Dynamic Programming"),(0,l.kt)("span",{class:"tag-is-success"},"Greedy"),(0,l.kt)("span",{class:"tag-is-success"},"Sorting"),(0,l.kt)("h3",{id:"inputs-247"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-247"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-247"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-247"},"Further Readings"),(0,l.kt)("h2",{id:"find-right-interval"},"Find Right Interval"),(0,l.kt)("span",{class:"tag-is-success"},"Array"),(0,l.kt)("span",{class:"tag-is-success"},"Binary Search"),(0,l.kt)("span",{class:"tag-is-success"},"Sorting"),(0,l.kt)("h3",{id:"inputs-248"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-248"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-248"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-248"},"Further Readings"),(0,l.kt)("h2",{id:"path-sum-iii"},"Path Sum III"),(0,l.kt)("span",{class:"tag-is-success"},"Tree"),(0,l.kt)("span",{class:"tag-is-success"},"Depth-First Search"),(0,l.kt)("span",{class:"tag-is-success"},"Binary Tree"),(0,l.kt)("h3",{id:"inputs-249"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-249"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-249"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-249"},"Further Readings"),(0,l.kt)("h2",{id:"find-all-anagrams-in-a-string"},"Find All Anagrams in a String"),(0,l.kt)("span",{class:"tag-is-success"},"Hash Table"),(0,l.kt)("span",{class:"tag-is-success"},"String"),(0,l.kt)("span",{class:"tag-is-success"},"Sliding Window"),(0,l.kt)("h3",{id:"inputs-250"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-250"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-250"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-250"},"Further Readings"),(0,l.kt)("h2",{id:"ternary-expression-parser"},"Ternary Expression Parser"),(0,l.kt)("span",{class:"tag-is-success"},"String"),(0,l.kt)("span",{class:"tag-is-success"},"Stack"),(0,l.kt)("span",{class:"tag-is-success"},"Recursion"),(0,l.kt)("h3",{id:"inputs-251"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-251"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-251"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-251"},"Further Readings"),(0,l.kt)("h2",{id:"find-all-duplicates-in-an-array"},"Find All Duplicates in an Array"),(0,l.kt)("span",{class:"tag-is-success"},"Array"),(0,l.kt)("span",{class:"tag-is-success"},"Hash Table"),(0,l.kt)("h3",{id:"inputs-252"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-252"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-252"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-252"},"Further Readings"),(0,l.kt)("h2",{id:"string-compression"},"String Compression"),(0,l.kt)("span",{class:"tag-is-success"},"Two Pointers"),(0,l.kt)("span",{class:"tag-is-success"},"String"),(0,l.kt)("h3",{id:"inputs-253"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-253"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-253"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-253"},"Further Readings"),(0,l.kt)("h2",{id:"sequence-reconstruction"},"Sequence Reconstruction"),(0,l.kt)("span",{class:"tag-is-success"},"Array"),(0,l.kt)("span",{class:"tag-is-success"},"Graph"),(0,l.kt)("span",{class:"tag-is-success"},"Topological Sort"),(0,l.kt)("h3",{id:"inputs-254"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-254"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-254"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-254"},"Further Readings"),(0,l.kt)("h2",{id:"add-two-numbers-ii"},"Add Two Numbers II"),(0,l.kt)("span",{class:"tag-is-success"},"Linked List"),(0,l.kt)("span",{class:"tag-is-success"},"Math"),(0,l.kt)("span",{class:"tag-is-success"},"Stack"),(0,l.kt)("h3",{id:"inputs-255"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-255"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-255"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-255"},"Further Readings"),(0,l.kt)("h2",{id:"number-of-boomerangs"},"Number of Boomerangs"),(0,l.kt)("span",{class:"tag-is-success"},"Array"),(0,l.kt)("span",{class:"tag-is-success"},"Hash Table"),(0,l.kt)("span",{class:"tag-is-success"},"Math"),(0,l.kt)("h3",{id:"inputs-256"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-256"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-256"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-256"},"Further Readings"),(0,l.kt)("h2",{id:"serialize-and-deserialize-bst"},"Serialize and Deserialize BST"),(0,l.kt)("span",{class:"tag-is-success"},"String"),(0,l.kt)("span",{class:"tag-is-success"},"Tree"),(0,l.kt)("span",{class:"tag-is-success"},"Depth-First Search"),(0,l.kt)("span",{class:"tag-is-success"},"Breadth-First Search"),(0,l.kt)("span",{class:"tag-is-success"},"Design"),(0,l.kt)("span",{class:"tag-is-success"},"Binary Search Tree"),(0,l.kt)("span",{class:"tag-is-success"},"Binary Tree"),(0,l.kt)("h3",{id:"inputs-257"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-257"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-257"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-257"},"Further Readings"),(0,l.kt)("h2",{id:"delete-node-in-a-bst"},"Delete Node in a BST"),(0,l.kt)("span",{class:"tag-is-success"},"Tree"),(0,l.kt)("span",{class:"tag-is-success"},"Binary Search Tree"),(0,l.kt)("span",{class:"tag-is-success"},"Binary Tree"),(0,l.kt)("h3",{id:"inputs-258"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-258"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-258"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-258"},"Further Readings"),(0,l.kt)("h2",{id:"sort-characters-by-frequency"},"Sort Characters By Frequency"),(0,l.kt)("span",{class:"tag-is-success"},"Hash Table"),(0,l.kt)("span",{class:"tag-is-success"},"String"),(0,l.kt)("span",{class:"tag-is-success"},"Sorting"),(0,l.kt)("span",{class:"tag-is-success"},"Heap (Priority Queue)"),(0,l.kt)("span",{class:"tag-is-success"},"Bucket Sort"),(0,l.kt)("span",{class:"tag-is-success"},"Counting"),(0,l.kt)("h3",{id:"inputs-259"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-259"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-259"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-259"},"Further Readings"),(0,l.kt)("h2",{id:"minimum-number-of-arrows-to-burst-balloons"},"Minimum Number of Arrows to Burst Balloons"),(0,l.kt)("span",{class:"tag-is-success"},"Array"),(0,l.kt)("span",{class:"tag-is-success"},"Greedy"),(0,l.kt)("span",{class:"tag-is-success"},"Sorting"),(0,l.kt)("h3",{id:"inputs-260"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-260"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-260"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-260"},"Further Readings"),(0,l.kt)("h2",{id:"minimum-moves-to-equal-array-elements"},"Minimum Moves to Equal Array Elements"),(0,l.kt)("span",{class:"tag-is-success"},"Array"),(0,l.kt)("span",{class:"tag-is-success"},"Math"),(0,l.kt)("h3",{id:"inputs-261"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-261"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-261"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-261"},"Further Readings"),(0,l.kt)("h2",{id:"4sum-ii"},"4Sum II"),(0,l.kt)("span",{class:"tag-is-success"},"Array"),(0,l.kt)("span",{class:"tag-is-success"},"Hash Table"),(0,l.kt)("h3",{id:"inputs-262"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-262"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-262"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-262"},"Further Readings"),(0,l.kt)("h2",{id:"132-pattern"},"132 Pattern"),(0,l.kt)("span",{class:"tag-is-success"},"Array"),(0,l.kt)("span",{class:"tag-is-success"},"Binary Search"),(0,l.kt)("span",{class:"tag-is-success"},"Stack"),(0,l.kt)("span",{class:"tag-is-success"},"Monotonic Stack"),(0,l.kt)("span",{class:"tag-is-success"},"Ordered Set"),(0,l.kt)("h3",{id:"inputs-263"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-263"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-263"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-263"},"Further Readings"),(0,l.kt)("h2",{id:"circular-array-loop"},"Circular Array Loop"),(0,l.kt)("span",{class:"tag-is-success"},"Array"),(0,l.kt)("span",{class:"tag-is-success"},"Hash Table"),(0,l.kt)("span",{class:"tag-is-success"},"Two Pointers"),(0,l.kt)("h3",{id:"inputs-264"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-264"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-264"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-264"},"Further Readings"),(0,l.kt)("h2",{id:"minimum-moves-to-equal-array-elements-ii"},"Minimum Moves to Equal Array Elements II"),(0,l.kt)("span",{class:"tag-is-success"},"Array"),(0,l.kt)("span",{class:"tag-is-success"},"Math"),(0,l.kt)("span",{class:"tag-is-success"},"Sorting"),(0,l.kt)("h3",{id:"inputs-265"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-265"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-265"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-265"},"Further Readings"),(0,l.kt)("h2",{id:"can-i-win"},"Can I Win"),(0,l.kt)("span",{class:"tag-is-success"},"Math"),(0,l.kt)("span",{class:"tag-is-success"},"Dynamic Programming"),(0,l.kt)("span",{class:"tag-is-success"},"Bit Manipulation"),(0,l.kt)("span",{class:"tag-is-success"},"Memoization"),(0,l.kt)("span",{class:"tag-is-success"},"Game Theory"),(0,l.kt)("span",{class:"tag-is-success"},"Bitmask"),(0,l.kt)("h3",{id:"inputs-266"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-266"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-266"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-266"},"Further Readings"),(0,l.kt)("h2",{id:"unique-substrings-in-wraparound-string"},"Unique Substrings in Wraparound String"),(0,l.kt)("span",{class:"tag-is-success"},"String"),(0,l.kt)("span",{class:"tag-is-success"},"Dynamic Programming"),(0,l.kt)("h3",{id:"inputs-267"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-267"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-267"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-267"},"Further Readings"),(0,l.kt)("h2",{id:"validate-ip-address"},"Validate IP Address"),(0,l.kt)("span",{class:"tag-is-success"},"String"),(0,l.kt)("h3",{id:"inputs-268"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-268"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-268"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-268"},"Further Readings"),(0,l.kt)("h2",{id:"convex-polygon"},"Convex Polygon"),(0,l.kt)("span",{class:"tag-is-success"},"Math"),(0,l.kt)("span",{class:"tag-is-success"},"Geometry"),(0,l.kt)("h3",{id:"inputs-269"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-269"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-269"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-269"},"Further Readings"),(0,l.kt)("h2",{id:"implement-rand10-using-rand7"},"Implement Rand10() Using Rand7()"),(0,l.kt)("span",{class:"tag-is-success"},"Math"),(0,l.kt)("span",{class:"tag-is-success"},"Rejection Sampling"),(0,l.kt)("span",{class:"tag-is-success"},"Randomized"),(0,l.kt)("span",{class:"tag-is-success"},"Probability and Statistics"),(0,l.kt)("h3",{id:"inputs-270"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-270"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-270"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-270"},"Further Readings"),(0,l.kt)("h2",{id:"matchsticks-to-square"},"Matchsticks to Square"),(0,l.kt)("span",{class:"tag-is-success"},"Array"),(0,l.kt)("span",{class:"tag-is-success"},"Dynamic Programming"),(0,l.kt)("span",{class:"tag-is-success"},"Backtracking"),(0,l.kt)("span",{class:"tag-is-success"},"Bit Manipulation"),(0,l.kt)("span",{class:"tag-is-success"},"Bitmask"),(0,l.kt)("h3",{id:"inputs-271"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-271"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-271"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-271"},"Further Readings"),(0,l.kt)("h2",{id:"ones-and-zeroes"},"Ones and Zeroes"),(0,l.kt)("span",{class:"tag-is-success"},"Array"),(0,l.kt)("span",{class:"tag-is-success"},"String"),(0,l.kt)("span",{class:"tag-is-success"},"Dynamic Programming"),(0,l.kt)("h3",{id:"inputs-272"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-272"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-272"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-272"},"Further Readings"),(0,l.kt)("h2",{id:"heaters"},"Heaters"),(0,l.kt)("span",{class:"tag-is-success"},"Array"),(0,l.kt)("span",{class:"tag-is-success"},"Two Pointers"),(0,l.kt)("span",{class:"tag-is-success"},"Binary Search"),(0,l.kt)("span",{class:"tag-is-success"},"Sorting"),(0,l.kt)("h3",{id:"inputs-273"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-273"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-273"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-273"},"Further Readings"),(0,l.kt)("h2",{id:"total-hamming-distance"},"Total Hamming Distance"),(0,l.kt)("span",{class:"tag-is-success"},"Array"),(0,l.kt)("span",{class:"tag-is-success"},"Math"),(0,l.kt)("span",{class:"tag-is-success"},"Bit Manipulation"),(0,l.kt)("h3",{id:"inputs-274"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-274"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-274"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-274"},"Further Readings"),(0,l.kt)("h2",{id:"generate-random-point-in-a-circle"},"Generate Random Point in a Circle"),(0,l.kt)("span",{class:"tag-is-success"},"Math"),(0,l.kt)("span",{class:"tag-is-success"},"Geometry"),(0,l.kt)("span",{class:"tag-is-success"},"Rejection Sampling"),(0,l.kt)("span",{class:"tag-is-success"},"Randomized"),(0,l.kt)("h3",{id:"inputs-275"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-275"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-275"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-275"},"Further Readings"),(0,l.kt)("h2",{id:"magical-string"},"Magical String"),(0,l.kt)("span",{class:"tag-is-success"},"Two Pointers"),(0,l.kt)("span",{class:"tag-is-success"},"String"),(0,l.kt)("h3",{id:"inputs-276"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-276"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-276"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-276"},"Further Readings"),(0,l.kt)("h2",{id:"find-permutation"},"Find Permutation"),(0,l.kt)("span",{class:"tag-is-success"},"Array"),(0,l.kt)("span",{class:"tag-is-success"},"Stack"),(0,l.kt)("span",{class:"tag-is-success"},"Greedy"),(0,l.kt)("h3",{id:"inputs-277"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-277"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-277"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-277"},"Further Readings"),(0,l.kt)("h2",{id:"predict-the-winner"},"Predict the Winner"),(0,l.kt)("span",{class:"tag-is-success"},"Array"),(0,l.kt)("span",{class:"tag-is-success"},"Math"),(0,l.kt)("span",{class:"tag-is-success"},"Dynamic Programming"),(0,l.kt)("span",{class:"tag-is-success"},"Recursion"),(0,l.kt)("span",{class:"tag-is-success"},"Game Theory"),(0,l.kt)("h3",{id:"inputs-278"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-278"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-278"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-278"},"Further Readings"),(0,l.kt)("h2",{id:"max-consecutive-ones-ii"},"Max Consecutive Ones II"),(0,l.kt)("span",{class:"tag-is-success"},"Array"),(0,l.kt)("span",{class:"tag-is-success"},"Dynamic Programming"),(0,l.kt)("span",{class:"tag-is-success"},"Sliding Window"),(0,l.kt)("h3",{id:"inputs-279"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-279"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-279"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-279"},"Further Readings"),(0,l.kt)("h2",{id:"the-maze"},"The Maze"),(0,l.kt)("span",{class:"tag-is-success"},"Depth-First Search"),(0,l.kt)("span",{class:"tag-is-success"},"Breadth-First Search"),(0,l.kt)("span",{class:"tag-is-success"},"Graph"),(0,l.kt)("h3",{id:"inputs-280"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-280"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-280"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-280"},"Further Readings"),(0,l.kt)("h2",{id:"increasing-subsequences"},"Increasing Subsequences"),(0,l.kt)("span",{class:"tag-is-success"},"Array"),(0,l.kt)("span",{class:"tag-is-success"},"Hash Table"),(0,l.kt)("span",{class:"tag-is-success"},"Backtracking"),(0,l.kt)("span",{class:"tag-is-success"},"Bit Manipulation"),(0,l.kt)("h3",{id:"inputs-281"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-281"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-281"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-281"},"Further Readings"),(0,l.kt)("h2",{id:"target-sum"},"Target Sum"),(0,l.kt)("span",{class:"tag-is-success"},"Array"),(0,l.kt)("span",{class:"tag-is-success"},"Dynamic Programming"),(0,l.kt)("span",{class:"tag-is-success"},"Backtracking"),(0,l.kt)("h3",{id:"inputs-282"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-282"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-282"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-282"},"Further Readings"),(0,l.kt)("h2",{id:"random-point-in-non-overlapping-rectangles"},"Random Point in Non-overlapping Rectangles"),(0,l.kt)("span",{class:"tag-is-success"},"Math"),(0,l.kt)("span",{class:"tag-is-success"},"Binary Search"),(0,l.kt)("span",{class:"tag-is-success"},"Reservoir Sampling"),(0,l.kt)("span",{class:"tag-is-success"},"Prefix Sum"),(0,l.kt)("span",{class:"tag-is-success"},"Ordered Set"),(0,l.kt)("span",{class:"tag-is-success"},"Randomized"),(0,l.kt)("h3",{id:"inputs-283"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-283"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-283"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-283"},"Further Readings"),(0,l.kt)("h2",{id:"diagonal-traverse"},"Diagonal Traverse"),(0,l.kt)("span",{class:"tag-is-success"},"Array"),(0,l.kt)("span",{class:"tag-is-success"},"Matrix"),(0,l.kt)("span",{class:"tag-is-success"},"Simulation"),(0,l.kt)("h3",{id:"inputs-284"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-284"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-284"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-284"},"Further Readings"),(0,l.kt)("h2",{id:"next-greater-element-ii"},"Next Greater Element II"),(0,l.kt)("span",{class:"tag-is-success"},"Array"),(0,l.kt)("span",{class:"tag-is-success"},"Stack"),(0,l.kt)("span",{class:"tag-is-success"},"Monotonic Stack"),(0,l.kt)("h3",{id:"inputs-285"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-285"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-285"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-285"},"Further Readings"),(0,l.kt)("h2",{id:"the-maze-ii"},"The Maze II"),(0,l.kt)("span",{class:"tag-is-success"},"Depth-First Search"),(0,l.kt)("span",{class:"tag-is-success"},"Breadth-First Search"),(0,l.kt)("span",{class:"tag-is-success"},"Graph"),(0,l.kt)("span",{class:"tag-is-success"},"Heap (Priority Queue)"),(0,l.kt)("span",{class:"tag-is-success"},"Shortest Path"),(0,l.kt)("h3",{id:"inputs-286"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-286"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-286"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-286"},"Further Readings"),(0,l.kt)("h2",{id:"most-frequent-subtree-sum"},"Most Frequent Subtree Sum"),(0,l.kt)("span",{class:"tag-is-success"},"Hash Table"),(0,l.kt)("span",{class:"tag-is-success"},"Tree"),(0,l.kt)("span",{class:"tag-is-success"},"Depth-First Search"),(0,l.kt)("span",{class:"tag-is-success"},"Binary Tree"),(0,l.kt)("h3",{id:"inputs-287"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-287"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-287"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-287"},"Further Readings"),(0,l.kt)("h2",{id:"inorder-successor-in-bst-ii"},"Inorder Successor in BST II"),(0,l.kt)("span",{class:"tag-is-success"},"Tree"),(0,l.kt)("span",{class:"tag-is-success"},"Binary Search Tree"),(0,l.kt)("span",{class:"tag-is-success"},"Binary Tree"),(0,l.kt)("h3",{id:"inputs-288"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-288"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-288"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-288"},"Further Readings"),(0,l.kt)("h2",{id:"find-bottom-left-tree-value"},"Find Bottom Left Tree Value"),(0,l.kt)("span",{class:"tag-is-success"},"Tree"),(0,l.kt)("span",{class:"tag-is-success"},"Depth-First Search"),(0,l.kt)("span",{class:"tag-is-success"},"Breadth-First Search"),(0,l.kt)("span",{class:"tag-is-success"},"Binary Tree"),(0,l.kt)("h3",{id:"inputs-289"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-289"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-289"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-289"},"Further Readings"),(0,l.kt)("h2",{id:"find-largest-value-in-each-tree-row"},"Find Largest Value in Each Tree Row"),(0,l.kt)("span",{class:"tag-is-success"},"Tree"),(0,l.kt)("span",{class:"tag-is-success"},"Depth-First Search"),(0,l.kt)("span",{class:"tag-is-success"},"Breadth-First Search"),(0,l.kt)("span",{class:"tag-is-success"},"Binary Tree"),(0,l.kt)("h3",{id:"inputs-290"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-290"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-290"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-290"},"Further Readings"),(0,l.kt)("h2",{id:"longest-palindromic-subsequence"},"Longest Palindromic Subsequence"),(0,l.kt)("span",{class:"tag-is-success"},"String"),(0,l.kt)("span",{class:"tag-is-success"},"Dynamic Programming"),(0,l.kt)("h3",{id:"inputs-291"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-291"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-291"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-291"},"Further Readings"),(0,l.kt)("h2",{id:"coin-change-2"},"Coin Change 2"),(0,l.kt)("span",{class:"tag-is-success"},"Array"),(0,l.kt)("span",{class:"tag-is-success"},"Dynamic Programming"),(0,l.kt)("h3",{id:"inputs-292"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-292"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-292"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-292"},"Further Readings"),(0,l.kt)("h2",{id:"random-flip-matrix"},"Random Flip Matrix"),(0,l.kt)("span",{class:"tag-is-success"},"Hash Table"),(0,l.kt)("span",{class:"tag-is-success"},"Math"),(0,l.kt)("span",{class:"tag-is-success"},"Reservoir Sampling"),(0,l.kt)("span",{class:"tag-is-success"},"Randomized"),(0,l.kt)("h3",{id:"inputs-293"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-293"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-293"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-293"},"Further Readings"),(0,l.kt)("h2",{id:"longest-uncommon-subsequence-ii"},"Longest Uncommon Subsequence II"),(0,l.kt)("span",{class:"tag-is-success"},"Array"),(0,l.kt)("span",{class:"tag-is-success"},"Hash Table"),(0,l.kt)("span",{class:"tag-is-success"},"Two Pointers"),(0,l.kt)("span",{class:"tag-is-success"},"String"),(0,l.kt)("span",{class:"tag-is-success"},"Sorting"),(0,l.kt)("h3",{id:"inputs-294"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-294"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-294"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-294"},"Further Readings"),(0,l.kt)("h2",{id:"continuous-subarray-sum"},"Continuous Subarray Sum"),(0,l.kt)("span",{class:"tag-is-success"},"Array"),(0,l.kt)("span",{class:"tag-is-success"},"Hash Table"),(0,l.kt)("span",{class:"tag-is-success"},"Math"),(0,l.kt)("span",{class:"tag-is-success"},"Prefix Sum"),(0,l.kt)("h3",{id:"inputs-295"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-295"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-295"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-295"},"Further Readings"),(0,l.kt)("h2",{id:"longest-word-in-dictionary-through-deleting"},"Longest Word in Dictionary through Deleting"),(0,l.kt)("span",{class:"tag-is-success"},"Array"),(0,l.kt)("span",{class:"tag-is-success"},"Two Pointers"),(0,l.kt)("span",{class:"tag-is-success"},"String"),(0,l.kt)("span",{class:"tag-is-success"},"Sorting"),(0,l.kt)("h3",{id:"inputs-296"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-296"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-296"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-296"},"Further Readings"),(0,l.kt)("h2",{id:"contiguous-array"},"Contiguous Array"),(0,l.kt)("span",{class:"tag-is-success"},"Array"),(0,l.kt)("span",{class:"tag-is-success"},"Hash Table"),(0,l.kt)("span",{class:"tag-is-success"},"Prefix Sum"),(0,l.kt)("h3",{id:"inputs-297"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-297"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-297"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-297"},"Further Readings"),(0,l.kt)("h2",{id:"beautiful-arrangement"},"Beautiful Arrangement"),(0,l.kt)("span",{class:"tag-is-success"},"Array"),(0,l.kt)("span",{class:"tag-is-success"},"Dynamic Programming"),(0,l.kt)("span",{class:"tag-is-success"},"Backtracking"),(0,l.kt)("span",{class:"tag-is-success"},"Bit Manipulation"),(0,l.kt)("span",{class:"tag-is-success"},"Bitmask"),(0,l.kt)("h3",{id:"inputs-298"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-298"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-298"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-298"},"Further Readings"),(0,l.kt)("h2",{id:"random-pick-with-weight"},"Random Pick with Weight"),(0,l.kt)("span",{class:"tag-is-success"},"Math"),(0,l.kt)("span",{class:"tag-is-success"},"Binary Search"),(0,l.kt)("span",{class:"tag-is-success"},"Prefix Sum"),(0,l.kt)("span",{class:"tag-is-success"},"Randomized"),(0,l.kt)("h3",{id:"inputs-299"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-299"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-299"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-299"},"Further Readings"),(0,l.kt)("h2",{id:"minesweeper"},"Minesweeper"),(0,l.kt)("span",{class:"tag-is-success"},"Array"),(0,l.kt)("span",{class:"tag-is-success"},"Depth-First Search"),(0,l.kt)("span",{class:"tag-is-success"},"Breadth-First Search"),(0,l.kt)("span",{class:"tag-is-success"},"Matrix"),(0,l.kt)("h3",{id:"inputs-300"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-300"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-300"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-300"},"Further Readings"),(0,l.kt)("h2",{id:"lonely-pixel-i"},"Lonely Pixel I"),(0,l.kt)("span",{class:"tag-is-success"},"Array"),(0,l.kt)("span",{class:"tag-is-success"},"Hash Table"),(0,l.kt)("span",{class:"tag-is-success"},"Matrix"),(0,l.kt)("h3",{id:"inputs-301"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-301"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-301"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-301"},"Further Readings"),(0,l.kt)("h2",{id:"k-diff-pairs-in-an-array"},"K-diff Pairs in an Array"),(0,l.kt)("span",{class:"tag-is-success"},"Array"),(0,l.kt)("span",{class:"tag-is-success"},"Hash Table"),(0,l.kt)("span",{class:"tag-is-success"},"Two Pointers"),(0,l.kt)("span",{class:"tag-is-success"},"Binary Search"),(0,l.kt)("span",{class:"tag-is-success"},"Sorting"),(0,l.kt)("h3",{id:"inputs-302"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-302"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-302"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-302"},"Further Readings"),(0,l.kt)("h2",{id:"lonely-pixel-ii"},"Lonely Pixel II"),(0,l.kt)("span",{class:"tag-is-success"},"Array"),(0,l.kt)("span",{class:"tag-is-success"},"Hash Table"),(0,l.kt)("span",{class:"tag-is-success"},"Matrix"),(0,l.kt)("h3",{id:"inputs-303"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-303"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-303"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-303"},"Further Readings"),(0,l.kt)("h2",{id:"game-play-analysis-iii"},"Game Play Analysis III"),(0,l.kt)("span",{class:"tag-is-success"},"Database"),(0,l.kt)("h3",{id:"inputs-304"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-304"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-304"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-304"},"Further Readings"),(0,l.kt)("h2",{id:"encode-and-decode-tinyurl"},"Encode and Decode TinyURL"),(0,l.kt)("span",{class:"tag-is-success"},"Hash Table"),(0,l.kt)("span",{class:"tag-is-success"},"String"),(0,l.kt)("span",{class:"tag-is-success"},"Design"),(0,l.kt)("span",{class:"tag-is-success"},"Hash Function"),(0,l.kt)("h3",{id:"inputs-305"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-305"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-305"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-305"},"Further Readings"),(0,l.kt)("h2",{id:"construct-binary-tree-from-string"},"Construct Binary Tree from String"),(0,l.kt)("span",{class:"tag-is-success"},"String"),(0,l.kt)("span",{class:"tag-is-success"},"Tree"),(0,l.kt)("span",{class:"tag-is-success"},"Depth-First Search"),(0,l.kt)("span",{class:"tag-is-success"},"Binary Tree"),(0,l.kt)("h3",{id:"inputs-306"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-306"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-306"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-306"},"Further Readings"),(0,l.kt)("h2",{id:"complex-number-multiplication"},"Complex Number Multiplication"),(0,l.kt)("span",{class:"tag-is-success"},"Math"),(0,l.kt)("span",{class:"tag-is-success"},"String"),(0,l.kt)("span",{class:"tag-is-success"},"Simulation"),(0,l.kt)("h3",{id:"inputs-307"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-307"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-307"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-307"},"Further Readings"),(0,l.kt)("h2",{id:"convert-bst-to-greater-tree"},"Convert BST to Greater Tree"),(0,l.kt)("span",{class:"tag-is-success"},"Tree"),(0,l.kt)("span",{class:"tag-is-success"},"Depth-First Search"),(0,l.kt)("span",{class:"tag-is-success"},"Binary Search Tree"),(0,l.kt)("span",{class:"tag-is-success"},"Binary Tree"),(0,l.kt)("h3",{id:"inputs-308"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-308"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-308"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-308"},"Further Readings"),(0,l.kt)("h2",{id:"minimum-time-difference"},"Minimum Time Difference"),(0,l.kt)("span",{class:"tag-is-success"},"Array"),(0,l.kt)("span",{class:"tag-is-success"},"Math"),(0,l.kt)("span",{class:"tag-is-success"},"String"),(0,l.kt)("span",{class:"tag-is-success"},"Sorting"),(0,l.kt)("h3",{id:"inputs-309"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-309"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-309"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-309"},"Further Readings"),(0,l.kt)("h2",{id:"single-element-in-a-sorted-array"},"Single Element in a Sorted Array"),(0,l.kt)("span",{class:"tag-is-success"},"Array"),(0,l.kt)("span",{class:"tag-is-success"},"Binary Search"),(0,l.kt)("h3",{id:"inputs-310"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-310"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-310"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-310"},"Further Readings"),(0,l.kt)("h2",{id:"01-matrix"},"01 Matrix"),(0,l.kt)("span",{class:"tag-is-success"},"Array"),(0,l.kt)("span",{class:"tag-is-success"},"Dynamic Programming"),(0,l.kt)("span",{class:"tag-is-success"},"Breadth-First Search"),(0,l.kt)("span",{class:"tag-is-success"},"Matrix"),(0,l.kt)("h3",{id:"inputs-311"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-311"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-311"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-311"},"Further Readings"),(0,l.kt)("h2",{id:"output-contest-matches"},"Output Contest Matches"),(0,l.kt)("span",{class:"tag-is-success"},"String"),(0,l.kt)("span",{class:"tag-is-success"},"Recursion"),(0,l.kt)("span",{class:"tag-is-success"},"Simulation"),(0,l.kt)("h3",{id:"inputs-312"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-312"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-312"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-312"},"Further Readings"),(0,l.kt)("h2",{id:"boundary-of-binary-tree"},"Boundary of Binary Tree"),(0,l.kt)("span",{class:"tag-is-success"},"Tree"),(0,l.kt)("span",{class:"tag-is-success"},"Depth-First Search"),(0,l.kt)("span",{class:"tag-is-success"},"Binary Tree"),(0,l.kt)("h3",{id:"inputs-313"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-313"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-313"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-313"},"Further Readings"),(0,l.kt)("h2",{id:"number-of-provinces"},"Number of Provinces"),(0,l.kt)("span",{class:"tag-is-success"},"Depth-First Search"),(0,l.kt)("span",{class:"tag-is-success"},"Breadth-First Search"),(0,l.kt)("span",{class:"tag-is-success"},"Union Find"),(0,l.kt)("span",{class:"tag-is-success"},"Graph"),(0,l.kt)("h3",{id:"inputs-314"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-314"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-314"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-314"},"Further Readings"),(0,l.kt)("h2",{id:"binary-tree-longest-consecutive-sequence-ii"},"Binary Tree Longest Consecutive Sequence II"),(0,l.kt)("span",{class:"tag-is-success"},"Tree"),(0,l.kt)("span",{class:"tag-is-success"},"Depth-First Search"),(0,l.kt)("span",{class:"tag-is-success"},"Binary Tree"),(0,l.kt)("h3",{id:"inputs-315"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-315"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-315"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-315"},"Further Readings"),(0,l.kt)("h2",{id:"game-play-analysis-iv"},"Game Play Analysis IV"),(0,l.kt)("span",{class:"tag-is-success"},"Database"),(0,l.kt)("h3",{id:"inputs-316"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-316"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-316"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-316"},"Further Readings"),(0,l.kt)("h2",{id:"optimal-division"},"Optimal Division"),(0,l.kt)("span",{class:"tag-is-success"},"Array"),(0,l.kt)("span",{class:"tag-is-success"},"Math"),(0,l.kt)("span",{class:"tag-is-success"},"Dynamic Programming"),(0,l.kt)("h3",{id:"inputs-317"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-317"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-317"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-317"},"Further Readings"),(0,l.kt)("h2",{id:"brick-wall"},"Brick Wall"),(0,l.kt)("span",{class:"tag-is-success"},"Array"),(0,l.kt)("span",{class:"tag-is-success"},"Hash Table"),(0,l.kt)("h3",{id:"inputs-318"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-318"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-318"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-318"},"Further Readings"),(0,l.kt)("h2",{id:"split-concatenated-strings"},"Split Concatenated Strings"),(0,l.kt)("span",{class:"tag-is-success"},"Array"),(0,l.kt)("span",{class:"tag-is-success"},"String"),(0,l.kt)("span",{class:"tag-is-success"},"Greedy"),(0,l.kt)("h3",{id:"inputs-319"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-319"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-319"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-319"},"Further Readings"),(0,l.kt)("h2",{id:"next-greater-element-iii"},"Next Greater Element III"),(0,l.kt)("span",{class:"tag-is-success"},"Math"),(0,l.kt)("span",{class:"tag-is-success"},"Two Pointers"),(0,l.kt)("span",{class:"tag-is-success"},"String"),(0,l.kt)("h3",{id:"inputs-320"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-320"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-320"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-320"},"Further Readings"),(0,l.kt)("h2",{id:"logical-or-of-two-binary-grids-represented-as-quad-trees"},"Logical OR of Two Binary Grids Represented as Quad-Trees"),(0,l.kt)("span",{class:"tag-is-success"},"Divide and Conquer"),(0,l.kt)("span",{class:"tag-is-success"},"Tree"),(0,l.kt)("h3",{id:"inputs-321"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-321"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-321"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-321"},"Further Readings"),(0,l.kt)("h2",{id:"subarray-sum-equals-k"},"Subarray Sum Equals K"),(0,l.kt)("span",{class:"tag-is-success"},"Array"),(0,l.kt)("span",{class:"tag-is-success"},"Hash Table"),(0,l.kt)("span",{class:"tag-is-success"},"Prefix Sum"),(0,l.kt)("h3",{id:"inputs-322"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-322"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-322"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-322"},"Further Readings"),(0,l.kt)("h2",{id:"longest-line-of-consecutive-one-in-matrix"},"Longest Line of Consecutive One in Matrix"),(0,l.kt)("span",{class:"tag-is-success"},"Array"),(0,l.kt)("span",{class:"tag-is-success"},"Dynamic Programming"),(0,l.kt)("span",{class:"tag-is-success"},"Matrix"),(0,l.kt)("h3",{id:"inputs-323"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-323"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-323"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-323"},"Further Readings"),(0,l.kt)("h2",{id:"array-nesting"},"Array Nesting"),(0,l.kt)("span",{class:"tag-is-success"},"Array"),(0,l.kt)("span",{class:"tag-is-success"},"Depth-First Search"),(0,l.kt)("h3",{id:"inputs-324"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-324"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-324"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-324"},"Further Readings"),(0,l.kt)("h2",{id:"permutation-in-string"},"Permutation in String"),(0,l.kt)("span",{class:"tag-is-success"},"Hash Table"),(0,l.kt)("span",{class:"tag-is-success"},"Two Pointers"),(0,l.kt)("span",{class:"tag-is-success"},"String"),(0,l.kt)("span",{class:"tag-is-success"},"Sliding Window"),(0,l.kt)("h3",{id:"inputs-325"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-325"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-325"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-325"},"Further Readings"),(0,l.kt)("h2",{id:"managers-with-at-least-5-direct-reports"},"Managers with at Least 5 Direct Reports"),(0,l.kt)("span",{class:"tag-is-success"},"Database"),(0,l.kt)("h3",{id:"inputs-326"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-326"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-326"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-326"},"Further Readings"),(0,l.kt)("h2",{id:"squirrel-simulation"},"Squirrel Simulation"),(0,l.kt)("span",{class:"tag-is-success"},"Array"),(0,l.kt)("span",{class:"tag-is-success"},"Math"),(0,l.kt)("h3",{id:"inputs-327"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-327"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-327"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-327"},"Further Readings"),(0,l.kt)("h2",{id:"winning-candidate"},"Winning Candidate"),(0,l.kt)("span",{class:"tag-is-success"},"Database"),(0,l.kt)("h3",{id:"inputs-328"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-328"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-328"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-328"},"Further Readings"),(0,l.kt)("h2",{id:"out-of-boundary-paths"},"Out of Boundary Paths"),(0,l.kt)("span",{class:"tag-is-success"},"Dynamic Programming"),(0,l.kt)("h3",{id:"inputs-329"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-329"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-329"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-329"},"Further Readings"),(0,l.kt)("h2",{id:"get-highest-answer-rate-question"},"Get Highest Answer Rate Question"),(0,l.kt)("span",{class:"tag-is-success"},"Database"),(0,l.kt)("h3",{id:"inputs-330"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-330"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-330"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-330"},"Further Readings"),(0,l.kt)("h2",{id:"count-student-number-in-departments"},"Count Student Number in Departments"),(0,l.kt)("span",{class:"tag-is-success"},"Database"),(0,l.kt)("h3",{id:"inputs-331"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-331"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-331"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-331"},"Further Readings"),(0,l.kt)("h2",{id:"shortest-unsorted-continuous-subarray"},"Shortest Unsorted Continuous Subarray"),(0,l.kt)("span",{class:"tag-is-success"},"Array"),(0,l.kt)("span",{class:"tag-is-success"},"Two Pointers"),(0,l.kt)("span",{class:"tag-is-success"},"Stack"),(0,l.kt)("span",{class:"tag-is-success"},"Greedy"),(0,l.kt)("span",{class:"tag-is-success"},"Sorting"),(0,l.kt)("span",{class:"tag-is-success"},"Monotonic Stack"),(0,l.kt)("h3",{id:"inputs-332"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-332"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-332"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-332"},"Further Readings"),(0,l.kt)("h2",{id:"kill-process"},"Kill Process"),(0,l.kt)("span",{class:"tag-is-success"},"Array"),(0,l.kt)("span",{class:"tag-is-success"},"Hash Table"),(0,l.kt)("span",{class:"tag-is-success"},"Tree"),(0,l.kt)("span",{class:"tag-is-success"},"Depth-First Search"),(0,l.kt)("span",{class:"tag-is-success"},"Breadth-First Search"),(0,l.kt)("h3",{id:"inputs-333"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-333"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-333"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-333"},"Further Readings"),(0,l.kt)("h2",{id:"delete-operation-for-two-strings"},"Delete Operation for Two Strings"),(0,l.kt)("span",{class:"tag-is-success"},"String"),(0,l.kt)("span",{class:"tag-is-success"},"Dynamic Programming"),(0,l.kt)("h3",{id:"inputs-334"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-334"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-334"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-334"},"Further Readings"),(0,l.kt)("h2",{id:"investments-in-2016"},"Investments in 2016"),(0,l.kt)("span",{class:"tag-is-success"},"Database"),(0,l.kt)("h3",{id:"inputs-335"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-335"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-335"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-335"},"Further Readings"),(0,l.kt)("h2",{id:"fraction-addition-and-subtraction"},"Fraction Addition and Subtraction"),(0,l.kt)("span",{class:"tag-is-success"},"Math"),(0,l.kt)("span",{class:"tag-is-success"},"String"),(0,l.kt)("span",{class:"tag-is-success"},"Simulation"),(0,l.kt)("h3",{id:"inputs-336"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-336"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-336"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-336"},"Further Readings"),(0,l.kt)("h2",{id:"valid-square"},"Valid Square"),(0,l.kt)("span",{class:"tag-is-success"},"Math"),(0,l.kt)("span",{class:"tag-is-success"},"Geometry"),(0,l.kt)("h3",{id:"inputs-337"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-337"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-337"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-337"},"Further Readings"),(0,l.kt)("h2",{id:"friend-requests-ii-who-has-the-most-friends"},"Friend Requests II: Who Has the Most Friends"),(0,l.kt)("span",{class:"tag-is-success"},"Database"),(0,l.kt)("h3",{id:"inputs-338"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-338"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-338"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-338"},"Further Readings"),(0,l.kt)("h2",{id:"tree-node"},"Tree Node"),(0,l.kt)("span",{class:"tag-is-success"},"Database"),(0,l.kt)("h3",{id:"inputs-339"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-339"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-339"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-339"},"Further Readings"),(0,l.kt)("h2",{id:"find-duplicate-file-in-system"},"Find Duplicate File in System"),(0,l.kt)("span",{class:"tag-is-success"},"Array"),(0,l.kt)("span",{class:"tag-is-success"},"Hash Table"),(0,l.kt)("span",{class:"tag-is-success"},"String"),(0,l.kt)("h3",{id:"inputs-340"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-340"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-340"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-340"},"Further Readings"),(0,l.kt)("h2",{id:"valid-triangle-number"},"Valid Triangle Number"),(0,l.kt)("span",{class:"tag-is-success"},"Array"),(0,l.kt)("span",{class:"tag-is-success"},"Two Pointers"),(0,l.kt)("span",{class:"tag-is-success"},"Binary Search"),(0,l.kt)("span",{class:"tag-is-success"},"Greedy"),(0,l.kt)("span",{class:"tag-is-success"},"Sorting"),(0,l.kt)("h3",{id:"inputs-341"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-341"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-341"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-341"},"Further Readings"),(0,l.kt)("h2",{id:"shortest-distance-in-a-plane"},"Shortest Distance in a Plane"),(0,l.kt)("span",{class:"tag-is-success"},"Database"),(0,l.kt)("h3",{id:"inputs-342"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-342"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-342"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-342"},"Further Readings"),(0,l.kt)("h2",{id:"second-degree-follower"},"Second Degree Follower"),(0,l.kt)("span",{class:"tag-is-success"},"Database"),(0,l.kt)("h3",{id:"inputs-343"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-343"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-343"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-343"},"Further Readings"),(0,l.kt)("h2",{id:"add-bold-tag-in-string"},"Add Bold Tag in String"),(0,l.kt)("span",{class:"tag-is-success"},"Array"),(0,l.kt)("span",{class:"tag-is-success"},"Hash Table"),(0,l.kt)("span",{class:"tag-is-success"},"String"),(0,l.kt)("span",{class:"tag-is-success"},"Trie"),(0,l.kt)("span",{class:"tag-is-success"},"String Matching"),(0,l.kt)("h3",{id:"inputs-344"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-344"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-344"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-344"},"Further Readings"),(0,l.kt)("h2",{id:"task-scheduler"},"Task Scheduler"),(0,l.kt)("span",{class:"tag-is-success"},"Array"),(0,l.kt)("span",{class:"tag-is-success"},"Hash Table"),(0,l.kt)("span",{class:"tag-is-success"},"Greedy"),(0,l.kt)("span",{class:"tag-is-success"},"Sorting"),(0,l.kt)("span",{class:"tag-is-success"},"Heap (Priority Queue)"),(0,l.kt)("span",{class:"tag-is-success"},"Counting"),(0,l.kt)("h3",{id:"inputs-345"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-345"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-345"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-345"},"Further Readings"),(0,l.kt)("h2",{id:"design-circular-queue"},"Design Circular Queue"),(0,l.kt)("span",{class:"tag-is-success"},"Array"),(0,l.kt)("span",{class:"tag-is-success"},"Linked List"),(0,l.kt)("span",{class:"tag-is-success"},"Design"),(0,l.kt)("span",{class:"tag-is-success"},"Queue"),(0,l.kt)("h3",{id:"inputs-346"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-346"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-346"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-346"},"Further Readings"),(0,l.kt)("h2",{id:"add-one-row-to-tree"},"Add One Row to Tree"),(0,l.kt)("span",{class:"tag-is-success"},"Tree"),(0,l.kt)("span",{class:"tag-is-success"},"Depth-First Search"),(0,l.kt)("span",{class:"tag-is-success"},"Breadth-First Search"),(0,l.kt)("span",{class:"tag-is-success"},"Binary Tree"),(0,l.kt)("h3",{id:"inputs-347"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-347"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-347"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-347"},"Further Readings"),(0,l.kt)("h2",{id:"maximum-distance-in-arrays"},"Maximum Distance in Arrays"),(0,l.kt)("span",{class:"tag-is-success"},"Array"),(0,l.kt)("span",{class:"tag-is-success"},"Greedy"),(0,l.kt)("h3",{id:"inputs-348"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-348"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-348"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-348"},"Further Readings"),(0,l.kt)("h2",{id:"minimum-factorization"},"Minimum Factorization"),(0,l.kt)("span",{class:"tag-is-success"},"Math"),(0,l.kt)("span",{class:"tag-is-success"},"Greedy"),(0,l.kt)("h3",{id:"inputs-349"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-349"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-349"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-349"},"Further Readings"),(0,l.kt)("h2",{id:"exchange-seats"},"Exchange Seats"),(0,l.kt)("span",{class:"tag-is-success"},"Database"),(0,l.kt)("h3",{id:"inputs-350"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-350"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-350"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-350"},"Further Readings"),(0,l.kt)("h2",{id:"sum-of-square-numbers"},"Sum of Square Numbers"),(0,l.kt)("span",{class:"tag-is-success"},"Math"),(0,l.kt)("span",{class:"tag-is-success"},"Two Pointers"),(0,l.kt)("span",{class:"tag-is-success"},"Binary Search"),(0,l.kt)("h3",{id:"inputs-351"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-351"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-351"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-351"},"Further Readings"),(0,l.kt)("h2",{id:"find-the-derangement-of-an-array"},"Find the Derangement of An Array"),(0,l.kt)("span",{class:"tag-is-success"},"Math"),(0,l.kt)("span",{class:"tag-is-success"},"Dynamic Programming"),(0,l.kt)("h3",{id:"inputs-352"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-352"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-352"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-352"},"Further Readings"),(0,l.kt)("h2",{id:"design-log-storage-system"},"Design Log Storage System"),(0,l.kt)("span",{class:"tag-is-success"},"Hash Table"),(0,l.kt)("span",{class:"tag-is-success"},"String"),(0,l.kt)("span",{class:"tag-is-success"},"Design"),(0,l.kt)("span",{class:"tag-is-success"},"Ordered Set"),(0,l.kt)("h3",{id:"inputs-353"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-353"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-353"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-353"},"Further Readings"),(0,l.kt)("h2",{id:"exclusive-time-of-functions"},"Exclusive Time of Functions"),(0,l.kt)("span",{class:"tag-is-success"},"Array"),(0,l.kt)("span",{class:"tag-is-success"},"Stack"),(0,l.kt)("h3",{id:"inputs-354"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-354"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-354"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-354"},"Further Readings"),(0,l.kt)("h2",{id:"shopping-offers"},"Shopping Offers"),(0,l.kt)("span",{class:"tag-is-success"},"Array"),(0,l.kt)("span",{class:"tag-is-success"},"Dynamic Programming"),(0,l.kt)("span",{class:"tag-is-success"},"Backtracking"),(0,l.kt)("span",{class:"tag-is-success"},"Bit Manipulation"),(0,l.kt)("span",{class:"tag-is-success"},"Memoization"),(0,l.kt)("span",{class:"tag-is-success"},"Bitmask"),(0,l.kt)("h3",{id:"inputs-355"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-355"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-355"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-355"},"Further Readings"),(0,l.kt)("h2",{id:"solve-the-equation"},"Solve the Equation"),(0,l.kt)("span",{class:"tag-is-success"},"Math"),(0,l.kt)("span",{class:"tag-is-success"},"String"),(0,l.kt)("span",{class:"tag-is-success"},"Simulation"),(0,l.kt)("h3",{id:"inputs-356"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-356"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-356"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-356"},"Further Readings"),(0,l.kt)("h2",{id:"design-circular-deque"},"Design Circular Deque"),(0,l.kt)("span",{class:"tag-is-success"},"Array"),(0,l.kt)("span",{class:"tag-is-success"},"Linked List"),(0,l.kt)("span",{class:"tag-is-success"},"Design"),(0,l.kt)("span",{class:"tag-is-success"},"Queue"),(0,l.kt)("h3",{id:"inputs-357"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-357"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-357"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-357"},"Further Readings"),(0,l.kt)("h2",{id:"maximum-length-of-pair-chain"},"Maximum Length of Pair Chain"),(0,l.kt)("span",{class:"tag-is-success"},"Array"),(0,l.kt)("span",{class:"tag-is-success"},"Dynamic Programming"),(0,l.kt)("span",{class:"tag-is-success"},"Greedy"),(0,l.kt)("span",{class:"tag-is-success"},"Sorting"),(0,l.kt)("h3",{id:"inputs-358"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-358"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-358"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-358"},"Further Readings"),(0,l.kt)("h2",{id:"palindromic-substrings"},"Palindromic Substrings"),(0,l.kt)("span",{class:"tag-is-success"},"String"),(0,l.kt)("span",{class:"tag-is-success"},"Dynamic Programming"),(0,l.kt)("h3",{id:"inputs-359"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-359"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-359"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-359"},"Further Readings"),(0,l.kt)("h2",{id:"replace-words"},"Replace Words"),(0,l.kt)("span",{class:"tag-is-success"},"Array"),(0,l.kt)("span",{class:"tag-is-success"},"Hash Table"),(0,l.kt)("span",{class:"tag-is-success"},"String"),(0,l.kt)("span",{class:"tag-is-success"},"Trie"),(0,l.kt)("h3",{id:"inputs-360"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-360"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-360"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-360"},"Further Readings"),(0,l.kt)("h2",{id:"dota2-senate"},"Dota2 Senate"),(0,l.kt)("span",{class:"tag-is-success"},"String"),(0,l.kt)("span",{class:"tag-is-success"},"Greedy"),(0,l.kt)("span",{class:"tag-is-success"},"Queue"),(0,l.kt)("h3",{id:"inputs-361"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-361"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-361"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-361"},"Further Readings"),(0,l.kt)("h2",{id:"2-keys-keyboard"},"2 Keys Keyboard"),(0,l.kt)("span",{class:"tag-is-success"},"Math"),(0,l.kt)("span",{class:"tag-is-success"},"Dynamic Programming"),(0,l.kt)("h3",{id:"inputs-362"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-362"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-362"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-362"},"Further Readings"),(0,l.kt)("h2",{id:"4-keys-keyboard"},"4 Keys Keyboard"),(0,l.kt)("span",{class:"tag-is-success"},"Math"),(0,l.kt)("span",{class:"tag-is-success"},"Dynamic Programming"),(0,l.kt)("h3",{id:"inputs-363"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-363"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-363"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-363"},"Further Readings"),(0,l.kt)("h2",{id:"find-duplicate-subtrees"},"Find Duplicate Subtrees"),(0,l.kt)("span",{class:"tag-is-success"},"Hash Table"),(0,l.kt)("span",{class:"tag-is-success"},"Tree"),(0,l.kt)("span",{class:"tag-is-success"},"Depth-First Search"),(0,l.kt)("span",{class:"tag-is-success"},"Binary Tree"),(0,l.kt)("h3",{id:"inputs-364"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-364"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-364"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-364"},"Further Readings"),(0,l.kt)("h2",{id:"maximum-binary-tree"},"Maximum Binary Tree"),(0,l.kt)("span",{class:"tag-is-success"},"Array"),(0,l.kt)("span",{class:"tag-is-success"},"Divide and Conquer"),(0,l.kt)("span",{class:"tag-is-success"},"Stack"),(0,l.kt)("span",{class:"tag-is-success"},"Tree"),(0,l.kt)("span",{class:"tag-is-success"},"Monotonic Stack"),(0,l.kt)("span",{class:"tag-is-success"},"Binary Tree"),(0,l.kt)("h3",{id:"inputs-365"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-365"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-365"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-365"},"Further Readings"),(0,l.kt)("h2",{id:"print-binary-tree"},"Print Binary Tree"),(0,l.kt)("span",{class:"tag-is-success"},"Tree"),(0,l.kt)("span",{class:"tag-is-success"},"Depth-First Search"),(0,l.kt)("span",{class:"tag-is-success"},"Breadth-First Search"),(0,l.kt)("span",{class:"tag-is-success"},"Binary Tree"),(0,l.kt)("h3",{id:"inputs-366"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-366"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-366"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-366"},"Further Readings"),(0,l.kt)("h2",{id:"find-k-closest-elements"},"Find K Closest Elements"),(0,l.kt)("span",{class:"tag-is-success"},"Array"),(0,l.kt)("span",{class:"tag-is-success"},"Two Pointers"),(0,l.kt)("span",{class:"tag-is-success"},"Binary Search"),(0,l.kt)("span",{class:"tag-is-success"},"Sorting"),(0,l.kt)("span",{class:"tag-is-success"},"Heap (Priority Queue)"),(0,l.kt)("h3",{id:"inputs-367"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-367"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-367"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-367"},"Further Readings"),(0,l.kt)("h2",{id:"split-array-into-consecutive-subsequences"},"Split Array into Consecutive Subsequences"),(0,l.kt)("span",{class:"tag-is-success"},"Array"),(0,l.kt)("span",{class:"tag-is-success"},"Hash Table"),(0,l.kt)("span",{class:"tag-is-success"},"Greedy"),(0,l.kt)("span",{class:"tag-is-success"},"Heap (Priority Queue)"),(0,l.kt)("h3",{id:"inputs-368"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-368"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-368"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-368"},"Further Readings"),(0,l.kt)("h2",{id:"maximum-width-of-binary-tree"},"Maximum Width of Binary Tree"),(0,l.kt)("span",{class:"tag-is-success"},"Tree"),(0,l.kt)("span",{class:"tag-is-success"},"Depth-First Search"),(0,l.kt)("span",{class:"tag-is-success"},"Breadth-First Search"),(0,l.kt)("span",{class:"tag-is-success"},"Binary Tree"),(0,l.kt)("h3",{id:"inputs-369"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-369"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-369"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-369"},"Further Readings"),(0,l.kt)("h2",{id:"equal-tree-partition"},"Equal Tree Partition"),(0,l.kt)("span",{class:"tag-is-success"},"Tree"),(0,l.kt)("span",{class:"tag-is-success"},"Depth-First Search"),(0,l.kt)("span",{class:"tag-is-success"},"Binary Tree"),(0,l.kt)("h3",{id:"inputs-370"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-370"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-370"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-370"},"Further Readings"),(0,l.kt)("h2",{id:"non-decreasing-array"},"Non-decreasing Array"),(0,l.kt)("span",{class:"tag-is-success"},"Array"),(0,l.kt)("h3",{id:"inputs-371"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-371"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-371"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-371"},"Further Readings"),(0,l.kt)("h2",{id:"path-sum-iv"},"Path Sum IV"),(0,l.kt)("span",{class:"tag-is-success"},"Array"),(0,l.kt)("span",{class:"tag-is-success"},"Tree"),(0,l.kt)("span",{class:"tag-is-success"},"Depth-First Search"),(0,l.kt)("span",{class:"tag-is-success"},"Binary Tree"),(0,l.kt)("h3",{id:"inputs-372"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-372"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-372"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-372"},"Further Readings"),(0,l.kt)("h2",{id:"beautiful-arrangement-ii"},"Beautiful Arrangement II"),(0,l.kt)("span",{class:"tag-is-success"},"Array"),(0,l.kt)("span",{class:"tag-is-success"},"Math"),(0,l.kt)("h3",{id:"inputs-373"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-373"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-373"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-373"},"Further Readings"),(0,l.kt)("h2",{id:"trim-a-binary-search-tree"},"Trim a Binary Search Tree"),(0,l.kt)("span",{class:"tag-is-success"},"Tree"),(0,l.kt)("span",{class:"tag-is-success"},"Depth-First Search"),(0,l.kt)("span",{class:"tag-is-success"},"Binary Search Tree"),(0,l.kt)("span",{class:"tag-is-success"},"Binary Tree"),(0,l.kt)("h3",{id:"inputs-374"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-374"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-374"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-374"},"Further Readings"),(0,l.kt)("h2",{id:"maximum-swap"},"Maximum Swap"),(0,l.kt)("span",{class:"tag-is-success"},"Math"),(0,l.kt)("span",{class:"tag-is-success"},"Greedy"),(0,l.kt)("h3",{id:"inputs-375"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-375"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-375"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-375"},"Further Readings"),(0,l.kt)("h2",{id:"bulb-switcher-ii"},"Bulb Switcher II"),(0,l.kt)("span",{class:"tag-is-success"},"Math"),(0,l.kt)("span",{class:"tag-is-success"},"Bit Manipulation"),(0,l.kt)("span",{class:"tag-is-success"},"Depth-First Search"),(0,l.kt)("span",{class:"tag-is-success"},"Breadth-First Search"),(0,l.kt)("h3",{id:"inputs-376"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-376"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-376"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-376"},"Further Readings"),(0,l.kt)("h2",{id:"number-of-longest-increasing-subsequence"},"Number of Longest Increasing Subsequence"),(0,l.kt)("span",{class:"tag-is-success"},"Array"),(0,l.kt)("span",{class:"tag-is-success"},"Dynamic Programming"),(0,l.kt)("span",{class:"tag-is-success"},"Binary Indexed Tree"),(0,l.kt)("span",{class:"tag-is-success"},"Segment Tree"),(0,l.kt)("h3",{id:"inputs-377"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-377"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-377"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-377"},"Further Readings"),(0,l.kt)("h2",{id:"implement-magic-dictionary"},"Implement Magic Dictionary"),(0,l.kt)("span",{class:"tag-is-success"},"Hash Table"),(0,l.kt)("span",{class:"tag-is-success"},"String"),(0,l.kt)("span",{class:"tag-is-success"},"Design"),(0,l.kt)("span",{class:"tag-is-success"},"Trie"),(0,l.kt)("h3",{id:"inputs-378"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-378"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-378"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-378"},"Further Readings"),(0,l.kt)("h2",{id:"map-sum-pairs"},"Map Sum Pairs"),(0,l.kt)("span",{class:"tag-is-success"},"Hash Table"),(0,l.kt)("span",{class:"tag-is-success"},"String"),(0,l.kt)("span",{class:"tag-is-success"},"Design"),(0,l.kt)("span",{class:"tag-is-success"},"Trie"),(0,l.kt)("h3",{id:"inputs-379"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-379"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-379"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-379"},"Further Readings"),(0,l.kt)("h2",{id:"valid-parenthesis-string"},"Valid Parenthesis String"),(0,l.kt)("span",{class:"tag-is-success"},"String"),(0,l.kt)("span",{class:"tag-is-success"},"Dynamic Programming"),(0,l.kt)("span",{class:"tag-is-success"},"Stack"),(0,l.kt)("span",{class:"tag-is-success"},"Greedy"),(0,l.kt)("h3",{id:"inputs-380"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-380"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-380"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-380"},"Further Readings"),(0,l.kt)("h2",{id:"next-closest-time"},"Next Closest Time"),(0,l.kt)("span",{class:"tag-is-success"},"String"),(0,l.kt)("span",{class:"tag-is-success"},"Enumeration"),(0,l.kt)("h3",{id:"inputs-381"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-381"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-381"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-381"},"Further Readings"),(0,l.kt)("h2",{id:"redundant-connection"},"Redundant Connection"),(0,l.kt)("span",{class:"tag-is-success"},"Depth-First Search"),(0,l.kt)("span",{class:"tag-is-success"},"Breadth-First Search"),(0,l.kt)("span",{class:"tag-is-success"},"Union Find"),(0,l.kt)("span",{class:"tag-is-success"},"Graph"),(0,l.kt)("h3",{id:"inputs-382"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-382"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-382"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-382"},"Further Readings"),(0,l.kt)("h2",{id:"repeated-string-match"},"Repeated String Match"),(0,l.kt)("span",{class:"tag-is-success"},"String"),(0,l.kt)("span",{class:"tag-is-success"},"String Matching"),(0,l.kt)("h3",{id:"inputs-383"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-383"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-383"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-383"},"Further Readings"),(0,l.kt)("h2",{id:"longest-univalue-path"},"Longest Univalue Path"),(0,l.kt)("span",{class:"tag-is-success"},"Tree"),(0,l.kt)("span",{class:"tag-is-success"},"Depth-First Search"),(0,l.kt)("span",{class:"tag-is-success"},"Binary Tree"),(0,l.kt)("h3",{id:"inputs-384"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-384"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-384"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-384"},"Further Readings"),(0,l.kt)("h2",{id:"knight-probability-in-chessboard"},"Knight Probability in Chessboard"),(0,l.kt)("span",{class:"tag-is-success"},"Dynamic Programming"),(0,l.kt)("h3",{id:"inputs-385"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-385"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-385"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-385"},"Further Readings"),(0,l.kt)("h2",{id:"employee-importance"},"Employee Importance"),(0,l.kt)("span",{class:"tag-is-success"},"Hash Table"),(0,l.kt)("span",{class:"tag-is-success"},"Depth-First Search"),(0,l.kt)("span",{class:"tag-is-success"},"Breadth-First Search"),(0,l.kt)("h3",{id:"inputs-386"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-386"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-386"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-386"},"Further Readings"),(0,l.kt)("h2",{id:"top-k-frequent-words"},"Top K Frequent Words"),(0,l.kt)("span",{class:"tag-is-success"},"Hash Table"),(0,l.kt)("span",{class:"tag-is-success"},"String"),(0,l.kt)("span",{class:"tag-is-success"},"Trie"),(0,l.kt)("span",{class:"tag-is-success"},"Sorting"),(0,l.kt)("span",{class:"tag-is-success"},"Heap (Priority Queue)"),(0,l.kt)("span",{class:"tag-is-success"},"Bucket Sort"),(0,l.kt)("span",{class:"tag-is-success"},"Counting"),(0,l.kt)("h3",{id:"inputs-387"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-387"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-387"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-387"},"Further Readings"),(0,l.kt)("h2",{id:"number-of-distinct-islands"},"Number of Distinct Islands"),(0,l.kt)("span",{class:"tag-is-success"},"Hash Table"),(0,l.kt)("span",{class:"tag-is-success"},"Depth-First Search"),(0,l.kt)("span",{class:"tag-is-success"},"Breadth-First Search"),(0,l.kt)("span",{class:"tag-is-success"},"Union Find"),(0,l.kt)("span",{class:"tag-is-success"},"Hash Function"),(0,l.kt)("h3",{id:"inputs-388"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-388"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-388"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-388"},"Further Readings"),(0,l.kt)("h2",{id:"max-area-of-island"},"Max Area of Island"),(0,l.kt)("span",{class:"tag-is-success"},"Array"),(0,l.kt)("span",{class:"tag-is-success"},"Depth-First Search"),(0,l.kt)("span",{class:"tag-is-success"},"Breadth-First Search"),(0,l.kt)("span",{class:"tag-is-success"},"Union Find"),(0,l.kt)("span",{class:"tag-is-success"},"Matrix"),(0,l.kt)("h3",{id:"inputs-389"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-389"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-389"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-389"},"Further Readings"),(0,l.kt)("h2",{id:"partition-to-k-equal-sum-subsets"},"Partition to K Equal Sum Subsets"),(0,l.kt)("span",{class:"tag-is-success"},"Array"),(0,l.kt)("span",{class:"tag-is-success"},"Dynamic Programming"),(0,l.kt)("span",{class:"tag-is-success"},"Backtracking"),(0,l.kt)("span",{class:"tag-is-success"},"Bit Manipulation"),(0,l.kt)("span",{class:"tag-is-success"},"Memoization"),(0,l.kt)("span",{class:"tag-is-success"},"Bitmask"),(0,l.kt)("h3",{id:"inputs-390"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-390"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-390"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-390"},"Further Readings"),(0,l.kt)("h2",{id:"insert-into-a-binary-search-tree"},"Insert into a Binary Search Tree"),(0,l.kt)("span",{class:"tag-is-success"},"Tree"),(0,l.kt)("span",{class:"tag-is-success"},"Binary Search Tree"),(0,l.kt)("span",{class:"tag-is-success"},"Binary Tree"),(0,l.kt)("h3",{id:"inputs-391"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-391"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-391"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-391"},"Further Readings"),(0,l.kt)("h2",{id:"search-in-a-sorted-array-of-unknown-size"},"Search in a Sorted Array of Unknown Size"),(0,l.kt)("span",{class:"tag-is-success"},"Array"),(0,l.kt)("span",{class:"tag-is-success"},"Binary Search"),(0,l.kt)("span",{class:"tag-is-success"},"Interactive"),(0,l.kt)("h3",{id:"inputs-392"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-392"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-392"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-392"},"Further Readings"),(0,l.kt)("h2",{id:"design-linked-list"},"Design Linked List"),(0,l.kt)("span",{class:"tag-is-success"},"Linked List"),(0,l.kt)("span",{class:"tag-is-success"},"Design"),(0,l.kt)("h3",{id:"inputs-393"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-393"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-393"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-393"},"Further Readings"),(0,l.kt)("h2",{id:"insert-into-a-sorted-circular-linked-list"},"Insert into a Sorted Circular Linked List"),(0,l.kt)("span",{class:"tag-is-success"},"Linked List"),(0,l.kt)("h3",{id:"inputs-394"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-394"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-394"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-394"},"Further Readings"),(0,l.kt)("h2",{id:"minimum-ascii-delete-sum-for-two-strings"},"Minimum ASCII Delete Sum for Two Strings"),(0,l.kt)("span",{class:"tag-is-success"},"String"),(0,l.kt)("span",{class:"tag-is-success"},"Dynamic Programming"),(0,l.kt)("h3",{id:"inputs-395"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-395"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-395"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-395"},"Further Readings"),(0,l.kt)("h2",{id:"subarray-product-less-than-k"},"Subarray Product Less Than K"),(0,l.kt)("span",{class:"tag-is-success"},"Array"),(0,l.kt)("span",{class:"tag-is-success"},"Sliding Window"),(0,l.kt)("h3",{id:"inputs-396"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-396"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-396"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-396"},"Further Readings"),(0,l.kt)("h2",{id:"best-time-to-buy-and-sell-stock-with-transaction-fee"},"Best Time to Buy and Sell Stock with Transaction Fee"),(0,l.kt)("span",{class:"tag-is-success"},"Array"),(0,l.kt)("span",{class:"tag-is-success"},"Dynamic Programming"),(0,l.kt)("span",{class:"tag-is-success"},"Greedy"),(0,l.kt)("h3",{id:"inputs-397"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-397"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-397"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-397"},"Further Readings"),(0,l.kt)("h2",{id:"maximum-length-of-repeated-subarray"},"Maximum Length of Repeated Subarray"),(0,l.kt)("span",{class:"tag-is-success"},"Array"),(0,l.kt)("span",{class:"tag-is-success"},"Binary Search"),(0,l.kt)("span",{class:"tag-is-success"},"Dynamic Programming"),(0,l.kt)("span",{class:"tag-is-success"},"Sliding Window"),(0,l.kt)("span",{class:"tag-is-success"},"Rolling Hash"),(0,l.kt)("span",{class:"tag-is-success"},"Hash Function"),(0,l.kt)("h3",{id:"inputs-398"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-398"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-398"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-398"},"Further Readings"),(0,l.kt)("h2",{id:"longest-word-in-dictionary"},"Longest Word in Dictionary"),(0,l.kt)("span",{class:"tag-is-success"},"Array"),(0,l.kt)("span",{class:"tag-is-success"},"Hash Table"),(0,l.kt)("span",{class:"tag-is-success"},"String"),(0,l.kt)("span",{class:"tag-is-success"},"Trie"),(0,l.kt)("span",{class:"tag-is-success"},"Sorting"),(0,l.kt)("h3",{id:"inputs-399"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-399"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-399"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-399"},"Further Readings"),(0,l.kt)("h2",{id:"accounts-merge"},"Accounts Merge"),(0,l.kt)("span",{class:"tag-is-success"},"Array"),(0,l.kt)("span",{class:"tag-is-success"},"String"),(0,l.kt)("span",{class:"tag-is-success"},"Depth-First Search"),(0,l.kt)("span",{class:"tag-is-success"},"Breadth-First Search"),(0,l.kt)("span",{class:"tag-is-success"},"Union Find"),(0,l.kt)("h3",{id:"inputs-400"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-400"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-400"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-400"},"Further Readings"),(0,l.kt)("h2",{id:"remove-comments"},"Remove Comments"),(0,l.kt)("span",{class:"tag-is-success"},"Array"),(0,l.kt)("span",{class:"tag-is-success"},"String"),(0,l.kt)("h3",{id:"inputs-401"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-401"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-401"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-401"},"Further Readings"),(0,l.kt)("h2",{id:"candy-crush"},"Candy Crush"),(0,l.kt)("span",{class:"tag-is-success"},"Array"),(0,l.kt)("span",{class:"tag-is-success"},"Two Pointers"),(0,l.kt)("span",{class:"tag-is-success"},"Matrix"),(0,l.kt)("span",{class:"tag-is-success"},"Simulation"),(0,l.kt)("h3",{id:"inputs-402"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-402"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-402"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-402"},"Further Readings"),(0,l.kt)("h2",{id:"split-linked-list-in-parts"},"Split Linked List in Parts"),(0,l.kt)("span",{class:"tag-is-success"},"Linked List"),(0,l.kt)("h3",{id:"inputs-403"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-403"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-403"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-403"},"Further Readings"),(0,l.kt)("h2",{id:"my-calendar-i"},"My Calendar I"),(0,l.kt)("span",{class:"tag-is-success"},"Design"),(0,l.kt)("span",{class:"tag-is-success"},"Segment Tree"),(0,l.kt)("span",{class:"tag-is-success"},"Ordered Set"),(0,l.kt)("h3",{id:"inputs-404"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-404"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-404"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-404"},"Further Readings"),(0,l.kt)("h2",{id:"my-calendar-ii"},"My Calendar II"),(0,l.kt)("span",{class:"tag-is-success"},"Design"),(0,l.kt)("span",{class:"tag-is-success"},"Segment Tree"),(0,l.kt)("span",{class:"tag-is-success"},"Ordered Set"),(0,l.kt)("h3",{id:"inputs-405"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-405"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-405"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-405"},"Further Readings"),(0,l.kt)("h2",{id:"asteroid-collision"},"Asteroid Collision"),(0,l.kt)("span",{class:"tag-is-success"},"Array"),(0,l.kt)("span",{class:"tag-is-success"},"Stack"),(0,l.kt)("h3",{id:"inputs-406"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-406"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-406"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-406"},"Further Readings"),(0,l.kt)("h2",{id:"sentence-similarity-ii"},"Sentence Similarity II"),(0,l.kt)("span",{class:"tag-is-success"},"Array"),(0,l.kt)("span",{class:"tag-is-success"},"Hash Table"),(0,l.kt)("span",{class:"tag-is-success"},"String"),(0,l.kt)("span",{class:"tag-is-success"},"Depth-First Search"),(0,l.kt)("span",{class:"tag-is-success"},"Breadth-First Search"),(0,l.kt)("span",{class:"tag-is-success"},"Union Find"),(0,l.kt)("h3",{id:"inputs-407"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-407"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-407"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-407"},"Further Readings"),(0,l.kt)("h2",{id:"monotone-increasing-digits"},"Monotone Increasing Digits"),(0,l.kt)("span",{class:"tag-is-success"},"Math"),(0,l.kt)("span",{class:"tag-is-success"},"Greedy"),(0,l.kt)("h3",{id:"inputs-408"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-408"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-408"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-408"},"Further Readings"),(0,l.kt)("h2",{id:"daily-temperatures"},"Daily Temperatures"),(0,l.kt)("span",{class:"tag-is-success"},"Array"),(0,l.kt)("span",{class:"tag-is-success"},"Stack"),(0,l.kt)("span",{class:"tag-is-success"},"Monotonic Stack"),(0,l.kt)("h3",{id:"inputs-409"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-409"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-409"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-409"},"Further Readings"),(0,l.kt)("h2",{id:"delete-and-earn"},"Delete and Earn"),(0,l.kt)("span",{class:"tag-is-success"},"Array"),(0,l.kt)("span",{class:"tag-is-success"},"Hash Table"),(0,l.kt)("span",{class:"tag-is-success"},"Dynamic Programming"),(0,l.kt)("h3",{id:"inputs-410"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-410"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-410"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-410"},"Further Readings"),(0,l.kt)("h2",{id:"closest-leaf-in-a-binary-tree"},"Closest Leaf in a Binary Tree"),(0,l.kt)("span",{class:"tag-is-success"},"Tree"),(0,l.kt)("span",{class:"tag-is-success"},"Depth-First Search"),(0,l.kt)("span",{class:"tag-is-success"},"Breadth-First Search"),(0,l.kt)("span",{class:"tag-is-success"},"Binary Tree"),(0,l.kt)("h3",{id:"inputs-411"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-411"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-411"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-411"},"Further Readings"),(0,l.kt)("h2",{id:"network-delay-time"},"Network Delay Time"),(0,l.kt)("span",{class:"tag-is-success"},"Depth-First Search"),(0,l.kt)("span",{class:"tag-is-success"},"Breadth-First Search"),(0,l.kt)("span",{class:"tag-is-success"},"Graph"),(0,l.kt)("span",{class:"tag-is-success"},"Heap (Priority Queue)"),(0,l.kt)("span",{class:"tag-is-success"},"Shortest Path"),(0,l.kt)("h3",{id:"inputs-412"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-412"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-412"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-412"},"Further Readings"),(0,l.kt)("h2",{id:"number-of-corner-rectangles"},"Number Of Corner Rectangles"),(0,l.kt)("span",{class:"tag-is-success"},"Array"),(0,l.kt)("span",{class:"tag-is-success"},"Math"),(0,l.kt)("span",{class:"tag-is-success"},"Dynamic Programming"),(0,l.kt)("span",{class:"tag-is-success"},"Matrix"),(0,l.kt)("h3",{id:"inputs-413"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-413"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-413"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-413"},"Further Readings"),(0,l.kt)("h2",{id:"ip-to-cidr"},"IP to CIDR"),(0,l.kt)("span",{class:"tag-is-success"},"String"),(0,l.kt)("span",{class:"tag-is-success"},"Bit Manipulation"),(0,l.kt)("h3",{id:"inputs-414"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-414"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-414"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-414"},"Further Readings"),(0,l.kt)("h2",{id:"open-the-lock"},"Open the Lock"),(0,l.kt)("span",{class:"tag-is-success"},"Array"),(0,l.kt)("span",{class:"tag-is-success"},"Hash Table"),(0,l.kt)("span",{class:"tag-is-success"},"String"),(0,l.kt)("span",{class:"tag-is-success"},"Breadth-First Search"),(0,l.kt)("h3",{id:"inputs-415"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-415"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-415"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-415"},"Further Readings"),(0,l.kt)("h2",{id:"reach-a-number"},"Reach a Number"),(0,l.kt)("span",{class:"tag-is-success"},"Math"),(0,l.kt)("span",{class:"tag-is-success"},"Binary Search"),(0,l.kt)("h3",{id:"inputs-416"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-416"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-416"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-416"},"Further Readings"),(0,l.kt)("h2",{id:"pour-water"},"Pour Water"),(0,l.kt)("span",{class:"tag-is-success"},"Array"),(0,l.kt)("span",{class:"tag-is-success"},"Simulation"),(0,l.kt)("h3",{id:"inputs-417"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-417"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-417"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-417"},"Further Readings"),(0,l.kt)("h2",{id:"pyramid-transition-matrix"},"Pyramid Transition Matrix"),(0,l.kt)("span",{class:"tag-is-success"},"Bit Manipulation"),(0,l.kt)("span",{class:"tag-is-success"},"Depth-First Search"),(0,l.kt)("span",{class:"tag-is-success"},"Breadth-First Search"),(0,l.kt)("h3",{id:"inputs-418"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-418"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-418"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-418"},"Further Readings"),(0,l.kt)("h2",{id:"bold-words-in-string"},"Bold Words in String"),(0,l.kt)("span",{class:"tag-is-success"},"Array"),(0,l.kt)("span",{class:"tag-is-success"},"Hash Table"),(0,l.kt)("span",{class:"tag-is-success"},"String"),(0,l.kt)("span",{class:"tag-is-success"},"Trie"),(0,l.kt)("span",{class:"tag-is-success"},"String Matching"),(0,l.kt)("h3",{id:"inputs-419"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-419"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-419"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-419"},"Further Readings"),(0,l.kt)("h2",{id:"partition-labels"},"Partition Labels"),(0,l.kt)("span",{class:"tag-is-success"},"Hash Table"),(0,l.kt)("span",{class:"tag-is-success"},"Two Pointers"),(0,l.kt)("span",{class:"tag-is-success"},"String"),(0,l.kt)("span",{class:"tag-is-success"},"Greedy"),(0,l.kt)("h3",{id:"inputs-420"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-420"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-420"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-420"},"Further Readings"),(0,l.kt)("h2",{id:"largest-plus-sign"},"Largest Plus Sign"),(0,l.kt)("span",{class:"tag-is-success"},"Array"),(0,l.kt)("span",{class:"tag-is-success"},"Dynamic Programming"),(0,l.kt)("h3",{id:"inputs-421"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-421"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-421"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-421"},"Further Readings"),(0,l.kt)("h2",{id:"reorganize-string"},"Reorganize String"),(0,l.kt)("span",{class:"tag-is-success"},"Hash Table"),(0,l.kt)("span",{class:"tag-is-success"},"String"),(0,l.kt)("span",{class:"tag-is-success"},"Greedy"),(0,l.kt)("span",{class:"tag-is-success"},"Sorting"),(0,l.kt)("span",{class:"tag-is-success"},"Heap (Priority Queue)"),(0,l.kt)("span",{class:"tag-is-success"},"Counting"),(0,l.kt)("h3",{id:"inputs-422"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-422"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-422"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-422"},"Further Readings"),(0,l.kt)("h2",{id:"max-chunks-to-make-sorted"},"Max Chunks To Make Sorted"),(0,l.kt)("span",{class:"tag-is-success"},"Array"),(0,l.kt)("span",{class:"tag-is-success"},"Stack"),(0,l.kt)("span",{class:"tag-is-success"},"Greedy"),(0,l.kt)("span",{class:"tag-is-success"},"Sorting"),(0,l.kt)("span",{class:"tag-is-success"},"Monotonic Stack"),(0,l.kt)("h3",{id:"inputs-423"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-423"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-423"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-423"},"Further Readings"),(0,l.kt)("h2",{id:"global-and-local-inversions"},"Global and Local Inversions"),(0,l.kt)("span",{class:"tag-is-success"},"Array"),(0,l.kt)("span",{class:"tag-is-success"},"Math"),(0,l.kt)("h3",{id:"inputs-424"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-424"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-424"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-424"},"Further Readings"),(0,l.kt)("h2",{id:"split-bst"},"Split BST"),(0,l.kt)("span",{class:"tag-is-success"},"Tree"),(0,l.kt)("span",{class:"tag-is-success"},"Binary Search Tree"),(0,l.kt)("span",{class:"tag-is-success"},"Recursion"),(0,l.kt)("span",{class:"tag-is-success"},"Binary Tree"),(0,l.kt)("h3",{id:"inputs-425"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-425"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-425"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-425"},"Further Readings"),(0,l.kt)("h2",{id:"swap-adjacent-in-lr-string"},"Swap Adjacent in LR String"),(0,l.kt)("span",{class:"tag-is-success"},"Two Pointers"),(0,l.kt)("span",{class:"tag-is-success"},"String"),(0,l.kt)("h3",{id:"inputs-426"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-426"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-426"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-426"},"Further Readings"),(0,l.kt)("h2",{id:"k-th-symbol-in-grammar"},"K-th Symbol in Grammar"),(0,l.kt)("span",{class:"tag-is-success"},"Math"),(0,l.kt)("span",{class:"tag-is-success"},"Bit Manipulation"),(0,l.kt)("span",{class:"tag-is-success"},"Recursion"),(0,l.kt)("h3",{id:"inputs-427"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-427"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-427"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-427"},"Further Readings"),(0,l.kt)("h2",{id:"rabbits-in-forest"},"Rabbits in Forest"),(0,l.kt)("span",{class:"tag-is-success"},"Array"),(0,l.kt)("span",{class:"tag-is-success"},"Hash Table"),(0,l.kt)("span",{class:"tag-is-success"},"Math"),(0,l.kt)("span",{class:"tag-is-success"},"Greedy"),(0,l.kt)("h3",{id:"inputs-428"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-428"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-428"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-428"},"Further Readings"),(0,l.kt)("h2",{id:"letter-case-permutation"},"Letter Case Permutation"),(0,l.kt)("span",{class:"tag-is-success"},"String"),(0,l.kt)("span",{class:"tag-is-success"},"Backtracking"),(0,l.kt)("span",{class:"tag-is-success"},"Bit Manipulation"),(0,l.kt)("h3",{id:"inputs-429"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-429"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-429"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-429"},"Further Readings"),(0,l.kt)("h2",{id:"is-graph-bipartite"},"Is Graph Bipartite?"),(0,l.kt)("span",{class:"tag-is-success"},"Depth-First Search"),(0,l.kt)("span",{class:"tag-is-success"},"Breadth-First Search"),(0,l.kt)("span",{class:"tag-is-success"},"Union Find"),(0,l.kt)("span",{class:"tag-is-success"},"Graph"),(0,l.kt)("h3",{id:"inputs-430"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-430"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-430"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-430"},"Further Readings"),(0,l.kt)("h2",{id:"cheapest-flights-within-k-stops"},"Cheapest Flights Within K Stops"),(0,l.kt)("span",{class:"tag-is-success"},"Dynamic Programming"),(0,l.kt)("span",{class:"tag-is-success"},"Depth-First Search"),(0,l.kt)("span",{class:"tag-is-success"},"Breadth-First Search"),(0,l.kt)("span",{class:"tag-is-success"},"Graph"),(0,l.kt)("span",{class:"tag-is-success"},"Heap (Priority Queue)"),(0,l.kt)("span",{class:"tag-is-success"},"Shortest Path"),(0,l.kt)("h3",{id:"inputs-431"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-431"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-431"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-431"},"Further Readings"),(0,l.kt)("h2",{id:"rotated-digits"},"Rotated Digits"),(0,l.kt)("span",{class:"tag-is-success"},"Math"),(0,l.kt)("span",{class:"tag-is-success"},"Dynamic Programming"),(0,l.kt)("h3",{id:"inputs-432"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-432"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-432"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-432"},"Further Readings"),(0,l.kt)("h2",{id:"escape-the-ghosts"},"Escape The Ghosts"),(0,l.kt)("span",{class:"tag-is-success"},"Array"),(0,l.kt)("span",{class:"tag-is-success"},"Math"),(0,l.kt)("h3",{id:"inputs-433"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-433"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-433"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-433"},"Further Readings"),(0,l.kt)("h2",{id:"domino-and-tromino-tiling"},"Domino and Tromino Tiling"),(0,l.kt)("span",{class:"tag-is-success"},"Dynamic Programming"),(0,l.kt)("h3",{id:"inputs-434"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-434"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-434"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-434"},"Further Readings"),(0,l.kt)("h2",{id:"custom-sort-string"},"Custom Sort String"),(0,l.kt)("span",{class:"tag-is-success"},"Hash Table"),(0,l.kt)("span",{class:"tag-is-success"},"String"),(0,l.kt)("span",{class:"tag-is-success"},"Sorting"),(0,l.kt)("h3",{id:"inputs-435"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-435"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-435"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-435"},"Further Readings"),(0,l.kt)("h2",{id:"number-of-matching-subsequences"},"Number of Matching Subsequences"),(0,l.kt)("span",{class:"tag-is-success"},"Hash Table"),(0,l.kt)("span",{class:"tag-is-success"},"String"),(0,l.kt)("span",{class:"tag-is-success"},"Trie"),(0,l.kt)("span",{class:"tag-is-success"},"Sorting"),(0,l.kt)("h3",{id:"inputs-436"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-436"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-436"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-436"},"Further Readings"),(0,l.kt)("h2",{id:"valid-tic-tac-toe-state"},"Valid Tic-Tac-Toe State"),(0,l.kt)("span",{class:"tag-is-success"},"Array"),(0,l.kt)("span",{class:"tag-is-success"},"String"),(0,l.kt)("h3",{id:"inputs-437"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-437"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-437"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-437"},"Further Readings"),(0,l.kt)("h2",{id:"number-of-subarrays-with-bounded-maximum"},"Number of Subarrays with Bounded Maximum"),(0,l.kt)("span",{class:"tag-is-success"},"Array"),(0,l.kt)("span",{class:"tag-is-success"},"Two Pointers"),(0,l.kt)("h3",{id:"inputs-438"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-438"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-438"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-438"},"Further Readings"),(0,l.kt)("h2",{id:"all-paths-from-source-to-target"},"All Paths From Source to Target"),(0,l.kt)("span",{class:"tag-is-success"},"Backtracking"),(0,l.kt)("span",{class:"tag-is-success"},"Depth-First Search"),(0,l.kt)("span",{class:"tag-is-success"},"Breadth-First Search"),(0,l.kt)("span",{class:"tag-is-success"},"Graph"),(0,l.kt)("h3",{id:"inputs-439"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-439"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-439"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-439"},"Further Readings"),(0,l.kt)("h2",{id:"champagne-tower"},"Champagne Tower"),(0,l.kt)("span",{class:"tag-is-success"},"Dynamic Programming"),(0,l.kt)("h3",{id:"inputs-440"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-440"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-440"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-440"},"Further Readings"),(0,l.kt)("h2",{id:"find-eventual-safe-states"},"Find Eventual Safe States"),(0,l.kt)("span",{class:"tag-is-success"},"Depth-First Search"),(0,l.kt)("span",{class:"tag-is-success"},"Breadth-First Search"),(0,l.kt)("span",{class:"tag-is-success"},"Graph"),(0,l.kt)("span",{class:"tag-is-success"},"Topological Sort"),(0,l.kt)("h3",{id:"inputs-441"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-441"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-441"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-441"},"Further Readings"),(0,l.kt)("h2",{id:"max-increase-to-keep-city-skyline"},"Max Increase to Keep City Skyline"),(0,l.kt)("span",{class:"tag-is-success"},"Array"),(0,l.kt)("span",{class:"tag-is-success"},"Greedy"),(0,l.kt)("span",{class:"tag-is-success"},"Matrix"),(0,l.kt)("h3",{id:"inputs-442"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-442"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-442"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-442"},"Further Readings"),(0,l.kt)("h2",{id:"soup-servings"},"Soup Servings"),(0,l.kt)("span",{class:"tag-is-success"},"Math"),(0,l.kt)("span",{class:"tag-is-success"},"Dynamic Programming"),(0,l.kt)("span",{class:"tag-is-success"},"Probability and Statistics"),(0,l.kt)("h3",{id:"inputs-443"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-443"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-443"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-443"},"Further Readings"),(0,l.kt)("h2",{id:"expressive-words"},"Expressive Words"),(0,l.kt)("span",{class:"tag-is-success"},"Array"),(0,l.kt)("span",{class:"tag-is-success"},"Two Pointers"),(0,l.kt)("span",{class:"tag-is-success"},"String"),(0,l.kt)("h3",{id:"inputs-444"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-444"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-444"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-444"},"Further Readings"),(0,l.kt)("h2",{id:"subdomain-visit-count"},"Subdomain Visit Count"),(0,l.kt)("span",{class:"tag-is-success"},"Array"),(0,l.kt)("span",{class:"tag-is-success"},"Hash Table"),(0,l.kt)("span",{class:"tag-is-success"},"String"),(0,l.kt)("span",{class:"tag-is-success"},"Counting"),(0,l.kt)("h3",{id:"inputs-445"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-445"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-445"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-445"},"Further Readings"),(0,l.kt)("h2",{id:"largest-sum-of-averages"},"Largest Sum of Averages"),(0,l.kt)("span",{class:"tag-is-success"},"Array"),(0,l.kt)("span",{class:"tag-is-success"},"Dynamic Programming"),(0,l.kt)("h3",{id:"inputs-446"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-446"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-446"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-446"},"Further Readings"),(0,l.kt)("h2",{id:"binary-tree-pruning"},"Binary Tree Pruning"),(0,l.kt)("span",{class:"tag-is-success"},"Tree"),(0,l.kt)("span",{class:"tag-is-success"},"Depth-First Search"),(0,l.kt)("span",{class:"tag-is-success"},"Binary Tree"),(0,l.kt)("h3",{id:"inputs-447"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-447"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-447"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-447"},"Further Readings"),(0,l.kt)("h2",{id:"ambiguous-coordinates"},"Ambiguous Coordinates"),(0,l.kt)("span",{class:"tag-is-success"},"String"),(0,l.kt)("span",{class:"tag-is-success"},"Backtracking"),(0,l.kt)("h3",{id:"inputs-448"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-448"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-448"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-448"},"Further Readings"),(0,l.kt)("h2",{id:"linked-list-components"},"Linked List Components"),(0,l.kt)("span",{class:"tag-is-success"},"Hash Table"),(0,l.kt)("span",{class:"tag-is-success"},"Linked List"),(0,l.kt)("h3",{id:"inputs-449"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-449"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-449"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-449"},"Further Readings"),(0,l.kt)("h2",{id:"short-encoding-of-words"},"Short Encoding of Words"),(0,l.kt)("span",{class:"tag-is-success"},"Array"),(0,l.kt)("span",{class:"tag-is-success"},"Hash Table"),(0,l.kt)("span",{class:"tag-is-success"},"String"),(0,l.kt)("span",{class:"tag-is-success"},"Trie"),(0,l.kt)("h3",{id:"inputs-450"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-450"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-450"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-450"},"Further Readings"),(0,l.kt)("h2",{id:"card-flipping-game"},"Card Flipping Game"),(0,l.kt)("span",{class:"tag-is-success"},"Array"),(0,l.kt)("span",{class:"tag-is-success"},"Hash Table"),(0,l.kt)("h3",{id:"inputs-451"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-451"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-451"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-451"},"Further Readings"),(0,l.kt)("h2",{id:"binary-trees-with-factors"},"Binary Trees With Factors"),(0,l.kt)("span",{class:"tag-is-success"},"Array"),(0,l.kt)("span",{class:"tag-is-success"},"Hash Table"),(0,l.kt)("span",{class:"tag-is-success"},"Dynamic Programming"),(0,l.kt)("h3",{id:"inputs-452"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-452"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-452"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-452"},"Further Readings"),(0,l.kt)("h2",{id:"friends-of-appropriate-ages"},"Friends Of Appropriate Ages"),(0,l.kt)("span",{class:"tag-is-success"},"Array"),(0,l.kt)("span",{class:"tag-is-success"},"Two Pointers"),(0,l.kt)("span",{class:"tag-is-success"},"Binary Search"),(0,l.kt)("span",{class:"tag-is-success"},"Sorting"),(0,l.kt)("h3",{id:"inputs-453"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-453"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-453"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-453"},"Further Readings"),(0,l.kt)("h2",{id:"most-profit-assigning-work"},"Most Profit Assigning Work"),(0,l.kt)("span",{class:"tag-is-success"},"Array"),(0,l.kt)("span",{class:"tag-is-success"},"Two Pointers"),(0,l.kt)("span",{class:"tag-is-success"},"Binary Search"),(0,l.kt)("span",{class:"tag-is-success"},"Greedy"),(0,l.kt)("span",{class:"tag-is-success"},"Sorting"),(0,l.kt)("h3",{id:"inputs-454"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-454"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-454"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-454"},"Further Readings"),(0,l.kt)("h2",{id:"masking-personal-information"},"Masking Personal Information"),(0,l.kt)("span",{class:"tag-is-success"},"String"),(0,l.kt)("h3",{id:"inputs-455"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-455"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-455"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-455"},"Further Readings"),(0,l.kt)("h2",{id:"find-and-replace-in-string"},"Find And Replace in String"),(0,l.kt)("span",{class:"tag-is-success"},"Array"),(0,l.kt)("span",{class:"tag-is-success"},"String"),(0,l.kt)("span",{class:"tag-is-success"},"Sorting"),(0,l.kt)("h3",{id:"inputs-456"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-456"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-456"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-456"},"Further Readings"),(0,l.kt)("h2",{id:"image-overlap"},"Image Overlap"),(0,l.kt)("span",{class:"tag-is-success"},"Array"),(0,l.kt)("span",{class:"tag-is-success"},"Matrix"),(0,l.kt)("h3",{id:"inputs-457"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-457"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-457"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-457"},"Further Readings"),(0,l.kt)("h2",{id:"new-21-game"},"New 21 Game"),(0,l.kt)("span",{class:"tag-is-success"},"Math"),(0,l.kt)("span",{class:"tag-is-success"},"Dynamic Programming"),(0,l.kt)("span",{class:"tag-is-success"},"Sliding Window"),(0,l.kt)("span",{class:"tag-is-success"},"Probability and Statistics"),(0,l.kt)("h3",{id:"inputs-458"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-458"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-458"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-458"},"Further Readings"),(0,l.kt)("h2",{id:"push-dominoes"},"Push Dominoes"),(0,l.kt)("span",{class:"tag-is-success"},"Two Pointers"),(0,l.kt)("span",{class:"tag-is-success"},"String"),(0,l.kt)("span",{class:"tag-is-success"},"Dynamic Programming"),(0,l.kt)("h3",{id:"inputs-459"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-459"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-459"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-459"},"Further Readings"),(0,l.kt)("h2",{id:"magic-squares-in-grid"},"Magic Squares In Grid"),(0,l.kt)("span",{class:"tag-is-success"},"Array"),(0,l.kt)("span",{class:"tag-is-success"},"Math"),(0,l.kt)("span",{class:"tag-is-success"},"Matrix"),(0,l.kt)("h3",{id:"inputs-460"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-460"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-460"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-460"},"Further Readings"),(0,l.kt)("h2",{id:"keys-and-rooms"},"Keys and Rooms"),(0,l.kt)("span",{class:"tag-is-success"},"Depth-First Search"),(0,l.kt)("span",{class:"tag-is-success"},"Breadth-First Search"),(0,l.kt)("span",{class:"tag-is-success"},"Graph"),(0,l.kt)("h3",{id:"inputs-461"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-461"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-461"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-461"},"Further Readings"),(0,l.kt)("h2",{id:"split-array-into-fibonacci-sequence"},"Split Array into Fibonacci Sequence"),(0,l.kt)("span",{class:"tag-is-success"},"String"),(0,l.kt)("span",{class:"tag-is-success"},"Backtracking"),(0,l.kt)("h3",{id:"inputs-462"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-462"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-462"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-462"},"Further Readings"),(0,l.kt)("h2",{id:"longest-mountain-in-array"},"Longest Mountain in Array"),(0,l.kt)("span",{class:"tag-is-success"},"Array"),(0,l.kt)("span",{class:"tag-is-success"},"Two Pointers"),(0,l.kt)("span",{class:"tag-is-success"},"Dynamic Programming"),(0,l.kt)("span",{class:"tag-is-success"},"Enumeration"),(0,l.kt)("h3",{id:"inputs-463"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-463"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-463"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-463"},"Further Readings"),(0,l.kt)("h2",{id:"hand-of-straights"},"Hand of Straights"),(0,l.kt)("span",{class:"tag-is-success"},"Array"),(0,l.kt)("span",{class:"tag-is-success"},"Hash Table"),(0,l.kt)("span",{class:"tag-is-success"},"Greedy"),(0,l.kt)("span",{class:"tag-is-success"},"Sorting"),(0,l.kt)("h3",{id:"inputs-464"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-464"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-464"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-464"},"Further Readings"),(0,l.kt)("h2",{id:"shifting-letters"},"Shifting Letters"),(0,l.kt)("span",{class:"tag-is-success"},"Array"),(0,l.kt)("span",{class:"tag-is-success"},"String"),(0,l.kt)("h3",{id:"inputs-465"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-465"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-465"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-465"},"Further Readings"),(0,l.kt)("h2",{id:"maximize-distance-to-closest-person"},"Maximize Distance to Closest Person"),(0,l.kt)("span",{class:"tag-is-success"},"Array"),(0,l.kt)("h3",{id:"inputs-466"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-466"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-466"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-466"},"Further Readings"),(0,l.kt)("h2",{id:"loud-and-rich"},"Loud and Rich"),(0,l.kt)("span",{class:"tag-is-success"},"Array"),(0,l.kt)("span",{class:"tag-is-success"},"Depth-First Search"),(0,l.kt)("span",{class:"tag-is-success"},"Graph"),(0,l.kt)("span",{class:"tag-is-success"},"Topological Sort"),(0,l.kt)("h3",{id:"inputs-467"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-467"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-467"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-467"},"Further Readings"),(0,l.kt)("h2",{id:"car-fleet"},"Car Fleet"),(0,l.kt)("span",{class:"tag-is-success"},"Array"),(0,l.kt)("span",{class:"tag-is-success"},"Stack"),(0,l.kt)("span",{class:"tag-is-success"},"Sorting"),(0,l.kt)("span",{class:"tag-is-success"},"Monotonic Stack"),(0,l.kt)("h3",{id:"inputs-468"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-468"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-468"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-468"},"Further Readings"),(0,l.kt)("h2",{id:"exam-room"},"Exam Room"),(0,l.kt)("span",{class:"tag-is-success"},"Design"),(0,l.kt)("span",{class:"tag-is-success"},"Ordered Set"),(0,l.kt)("h3",{id:"inputs-469"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-469"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-469"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-469"},"Further Readings"),(0,l.kt)("h2",{id:"score-of-parentheses"},"Score of Parentheses"),(0,l.kt)("span",{class:"tag-is-success"},"String"),(0,l.kt)("span",{class:"tag-is-success"},"Stack"),(0,l.kt)("h3",{id:"inputs-470"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-470"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-470"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-470"},"Further Readings"),(0,l.kt)("h2",{id:"mirror-reflection"},"Mirror Reflection"),(0,l.kt)("span",{class:"tag-is-success"},"Math"),(0,l.kt)("span",{class:"tag-is-success"},"Geometry"),(0,l.kt)("h3",{id:"inputs-471"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-471"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-471"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-471"},"Further Readings"),(0,l.kt)("h2",{id:"score-after-flipping-matrix"},"Score After Flipping Matrix"),(0,l.kt)("span",{class:"tag-is-success"},"Array"),(0,l.kt)("span",{class:"tag-is-success"},"Greedy"),(0,l.kt)("span",{class:"tag-is-success"},"Bit Manipulation"),(0,l.kt)("span",{class:"tag-is-success"},"Matrix"),(0,l.kt)("h3",{id:"inputs-472"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-472"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-472"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-472"},"Further Readings"),(0,l.kt)("h2",{id:"all-nodes-distance-k-in-binary-tree"},"All Nodes Distance K in Binary Tree"),(0,l.kt)("span",{class:"tag-is-success"},"Tree"),(0,l.kt)("span",{class:"tag-is-success"},"Depth-First Search"),(0,l.kt)("span",{class:"tag-is-success"},"Breadth-First Search"),(0,l.kt)("span",{class:"tag-is-success"},"Binary Tree"),(0,l.kt)("h3",{id:"inputs-473"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-473"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-473"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-473"},"Further Readings"),(0,l.kt)("h2",{id:"smallest-subtree-with-all-the-deepest-nodes"},"Smallest Subtree with all the Deepest Nodes"),(0,l.kt)("span",{class:"tag-is-success"},"Hash Table"),(0,l.kt)("span",{class:"tag-is-success"},"Tree"),(0,l.kt)("span",{class:"tag-is-success"},"Depth-First Search"),(0,l.kt)("span",{class:"tag-is-success"},"Breadth-First Search"),(0,l.kt)("span",{class:"tag-is-success"},"Binary Tree"),(0,l.kt)("h3",{id:"inputs-474"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-474"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-474"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-474"},"Further Readings"),(0,l.kt)("h2",{id:"prime-palindrome"},"Prime Palindrome"),(0,l.kt)("span",{class:"tag-is-success"},"Math"),(0,l.kt)("h3",{id:"inputs-475"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-475"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-475"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-475"},"Further Readings"),(0,l.kt)("h2",{id:"reordered-power-of-2"},"Reordered Power of 2"),(0,l.kt)("span",{class:"tag-is-success"},"Math"),(0,l.kt)("span",{class:"tag-is-success"},"Sorting"),(0,l.kt)("span",{class:"tag-is-success"},"Counting"),(0,l.kt)("span",{class:"tag-is-success"},"Enumeration"),(0,l.kt)("h3",{id:"inputs-476"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-476"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-476"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-476"},"Further Readings"),(0,l.kt)("h2",{id:"advantage-shuffle"},"Advantage Shuffle"),(0,l.kt)("span",{class:"tag-is-success"},"Array"),(0,l.kt)("span",{class:"tag-is-success"},"Greedy"),(0,l.kt)("span",{class:"tag-is-success"},"Sorting"),(0,l.kt)("h3",{id:"inputs-477"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-477"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-477"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-477"},"Further Readings"),(0,l.kt)("h2",{id:"length-of-longest-fibonacci-subsequence"},"Length of Longest Fibonacci Subsequence"),(0,l.kt)("span",{class:"tag-is-success"},"Array"),(0,l.kt)("span",{class:"tag-is-success"},"Hash Table"),(0,l.kt)("span",{class:"tag-is-success"},"Dynamic Programming"),(0,l.kt)("h3",{id:"inputs-478"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-478"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-478"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-478"},"Further Readings"),(0,l.kt)("h2",{id:"walking-robot-simulation"},"Walking Robot Simulation"),(0,l.kt)("span",{class:"tag-is-success"},"Array"),(0,l.kt)("span",{class:"tag-is-success"},"Simulation"),(0,l.kt)("h3",{id:"inputs-479"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-479"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-479"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-479"},"Further Readings"),(0,l.kt)("h2",{id:"koko-eating-bananas"},"Koko Eating Bananas"),(0,l.kt)("span",{class:"tag-is-success"},"Array"),(0,l.kt)("span",{class:"tag-is-success"},"Binary Search"),(0,l.kt)("h3",{id:"inputs-480"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-480"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-480"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-480"},"Further Readings"),(0,l.kt)("h2",{id:"stone-game"},"Stone Game"),(0,l.kt)("span",{class:"tag-is-success"},"Array"),(0,l.kt)("span",{class:"tag-is-success"},"Math"),(0,l.kt)("span",{class:"tag-is-success"},"Dynamic Programming"),(0,l.kt)("span",{class:"tag-is-success"},"Game Theory"),(0,l.kt)("h3",{id:"inputs-481"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-481"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-481"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-481"},"Further Readings"),(0,l.kt)("h2",{id:"decoded-string-at-index"},"Decoded String at Index"),(0,l.kt)("span",{class:"tag-is-success"},"String"),(0,l.kt)("span",{class:"tag-is-success"},"Stack"),(0,l.kt)("h3",{id:"inputs-482"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-482"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-482"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-482"},"Further Readings"),(0,l.kt)("h2",{id:"boats-to-save-people"},"Boats to Save People"),(0,l.kt)("span",{class:"tag-is-success"},"Array"),(0,l.kt)("span",{class:"tag-is-success"},"Two Pointers"),(0,l.kt)("span",{class:"tag-is-success"},"Greedy"),(0,l.kt)("span",{class:"tag-is-success"},"Sorting"),(0,l.kt)("h3",{id:"inputs-483"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-483"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-483"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-483"},"Further Readings"),(0,l.kt)("h2",{id:"spiral-matrix-iii"},"Spiral Matrix III"),(0,l.kt)("span",{class:"tag-is-success"},"Array"),(0,l.kt)("span",{class:"tag-is-success"},"Matrix"),(0,l.kt)("span",{class:"tag-is-success"},"Simulation"),(0,l.kt)("h3",{id:"inputs-484"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-484"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-484"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-484"},"Further Readings"),(0,l.kt)("h2",{id:"possible-bipartition"},"Possible Bipartition"),(0,l.kt)("span",{class:"tag-is-success"},"Depth-First Search"),(0,l.kt)("span",{class:"tag-is-success"},"Breadth-First Search"),(0,l.kt)("span",{class:"tag-is-success"},"Union Find"),(0,l.kt)("span",{class:"tag-is-success"},"Graph"),(0,l.kt)("h3",{id:"inputs-485"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-485"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-485"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-485"},"Further Readings"),(0,l.kt)("h2",{id:"construct-binary-tree-from-preorder-and-postorder-traversal"},"Construct Binary Tree from Preorder and Postorder Traversal"),(0,l.kt)("span",{class:"tag-is-success"},"Array"),(0,l.kt)("span",{class:"tag-is-success"},"Hash Table"),(0,l.kt)("span",{class:"tag-is-success"},"Divide and Conquer"),(0,l.kt)("span",{class:"tag-is-success"},"Tree"),(0,l.kt)("span",{class:"tag-is-success"},"Binary Tree"),(0,l.kt)("h3",{id:"inputs-486"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-486"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-486"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-486"},"Further Readings"),(0,l.kt)("h2",{id:"find-and-replace-pattern"},"Find and Replace Pattern"),(0,l.kt)("span",{class:"tag-is-success"},"Array"),(0,l.kt)("span",{class:"tag-is-success"},"Hash Table"),(0,l.kt)("span",{class:"tag-is-success"},"String"),(0,l.kt)("h3",{id:"inputs-487"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-487"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-487"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-487"},"Further Readings"),(0,l.kt)("h2",{id:"groups-of-special-equivalent-strings"},"Groups of Special-Equivalent Strings"),(0,l.kt)("span",{class:"tag-is-success"},"Array"),(0,l.kt)("span",{class:"tag-is-success"},"Hash Table"),(0,l.kt)("span",{class:"tag-is-success"},"String"),(0,l.kt)("h3",{id:"inputs-488"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-488"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-488"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-488"},"Further Readings"),(0,l.kt)("h2",{id:"all-possible-full-binary-trees"},"All Possible Full Binary Trees"),(0,l.kt)("span",{class:"tag-is-success"},"Dynamic Programming"),(0,l.kt)("span",{class:"tag-is-success"},"Tree"),(0,l.kt)("span",{class:"tag-is-success"},"Recursion"),(0,l.kt)("span",{class:"tag-is-success"},"Memoization"),(0,l.kt)("span",{class:"tag-is-success"},"Binary Tree"),(0,l.kt)("h3",{id:"inputs-489"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-489"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-489"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-489"},"Further Readings"),(0,l.kt)("h2",{id:"bitwise-ors-of-subarrays"},"Bitwise ORs of Subarrays"),(0,l.kt)("span",{class:"tag-is-success"},"Array"),(0,l.kt)("span",{class:"tag-is-success"},"Dynamic Programming"),(0,l.kt)("span",{class:"tag-is-success"},"Bit Manipulation"),(0,l.kt)("h3",{id:"inputs-490"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-490"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-490"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-490"},"Further Readings"),(0,l.kt)("h2",{id:"rle-iterator"},"RLE Iterator"),(0,l.kt)("span",{class:"tag-is-success"},"Array"),(0,l.kt)("span",{class:"tag-is-success"},"Design"),(0,l.kt)("span",{class:"tag-is-success"},"Counting"),(0,l.kt)("span",{class:"tag-is-success"},"Iterator"),(0,l.kt)("h3",{id:"inputs-491"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-491"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-491"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-491"},"Further Readings"),(0,l.kt)("h2",{id:"online-stock-span"},"Online Stock Span"),(0,l.kt)("span",{class:"tag-is-success"},"Stack"),(0,l.kt)("span",{class:"tag-is-success"},"Design"),(0,l.kt)("span",{class:"tag-is-success"},"Monotonic Stack"),(0,l.kt)("span",{class:"tag-is-success"},"Data Stream"),(0,l.kt)("h3",{id:"inputs-492"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-492"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-492"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-492"},"Further Readings"),(0,l.kt)("h2",{id:"fruit-into-baskets"},"Fruit Into Baskets"),(0,l.kt)("span",{class:"tag-is-success"},"Array"),(0,l.kt)("span",{class:"tag-is-success"},"Hash Table"),(0,l.kt)("span",{class:"tag-is-success"},"Sliding Window"),(0,l.kt)("h3",{id:"inputs-493"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-493"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-493"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-493"},"Further Readings"),(0,l.kt)("h2",{id:"sum-of-subarray-minimums"},"Sum of Subarray Minimums"),(0,l.kt)("span",{class:"tag-is-success"},"Array"),(0,l.kt)("span",{class:"tag-is-success"},"Dynamic Programming"),(0,l.kt)("span",{class:"tag-is-success"},"Stack"),(0,l.kt)("span",{class:"tag-is-success"},"Monotonic Stack"),(0,l.kt)("h3",{id:"inputs-494"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-494"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-494"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-494"},"Further Readings"),(0,l.kt)("h2",{id:"snakes-and-ladders"},"Snakes and Ladders"),(0,l.kt)("span",{class:"tag-is-success"},"Array"),(0,l.kt)("span",{class:"tag-is-success"},"Breadth-First Search"),(0,l.kt)("span",{class:"tag-is-success"},"Matrix"),(0,l.kt)("h3",{id:"inputs-495"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-495"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-495"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-495"},"Further Readings"),(0,l.kt)("h2",{id:"smallest-range-ii"},"Smallest Range II"),(0,l.kt)("span",{class:"tag-is-success"},"Array"),(0,l.kt)("span",{class:"tag-is-success"},"Math"),(0,l.kt)("span",{class:"tag-is-success"},"Greedy"),(0,l.kt)("span",{class:"tag-is-success"},"Sorting"),(0,l.kt)("h3",{id:"inputs-496"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-496"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-496"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-496"},"Further Readings"),(0,l.kt)("h2",{id:"online-election"},"Online Election"),(0,l.kt)("span",{class:"tag-is-success"},"Array"),(0,l.kt)("span",{class:"tag-is-success"},"Hash Table"),(0,l.kt)("span",{class:"tag-is-success"},"Binary Search"),(0,l.kt)("span",{class:"tag-is-success"},"Design"),(0,l.kt)("h3",{id:"inputs-497"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-497"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-497"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-497"},"Further Readings"),(0,l.kt)("h2",{id:"sort-an-array"},"Sort an Array"),(0,l.kt)("span",{class:"tag-is-success"},"Array"),(0,l.kt)("span",{class:"tag-is-success"},"Divide and Conquer"),(0,l.kt)("span",{class:"tag-is-success"},"Sorting"),(0,l.kt)("span",{class:"tag-is-success"},"Heap (Priority Queue)"),(0,l.kt)("span",{class:"tag-is-success"},"Merge Sort"),(0,l.kt)("span",{class:"tag-is-success"},"Bucket Sort"),(0,l.kt)("span",{class:"tag-is-success"},"Radix Sort"),(0,l.kt)("span",{class:"tag-is-success"},"Counting Sort"),(0,l.kt)("h3",{id:"inputs-498"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-498"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-498"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-498"},"Further Readings"),(0,l.kt)("h2",{id:"partition-array-into-disjoint-intervals"},"Partition Array into Disjoint Intervals"),(0,l.kt)("span",{class:"tag-is-success"},"Array"),(0,l.kt)("h3",{id:"inputs-499"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-499"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-499"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-499"},"Further Readings"),(0,l.kt)("h2",{id:"word-subsets"},"Word Subsets"),(0,l.kt)("span",{class:"tag-is-success"},"Array"),(0,l.kt)("span",{class:"tag-is-success"},"Hash Table"),(0,l.kt)("span",{class:"tag-is-success"},"String"),(0,l.kt)("h3",{id:"inputs-500"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-500"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-500"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-500"},"Further Readings"),(0,l.kt)("h2",{id:"maximum-sum-circular-subarray"},"Maximum Sum Circular Subarray"),(0,l.kt)("span",{class:"tag-is-success"},"Array"),(0,l.kt)("span",{class:"tag-is-success"},"Divide and Conquer"),(0,l.kt)("span",{class:"tag-is-success"},"Dynamic Programming"),(0,l.kt)("span",{class:"tag-is-success"},"Queue"),(0,l.kt)("span",{class:"tag-is-success"},"Monotonic Queue"),(0,l.kt)("h3",{id:"inputs-501"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-501"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-501"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-501"},"Further Readings"),(0,l.kt)("h2",{id:"complete-binary-tree-inserter"},"Complete Binary Tree Inserter"),(0,l.kt)("span",{class:"tag-is-success"},"Tree"),(0,l.kt)("span",{class:"tag-is-success"},"Breadth-First Search"),(0,l.kt)("span",{class:"tag-is-success"},"Design"),(0,l.kt)("span",{class:"tag-is-success"},"Binary Tree"),(0,l.kt)("h3",{id:"inputs-502"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-502"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-502"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-502"},"Further Readings"),(0,l.kt)("h2",{id:"minimum-add-to-make-parentheses-valid"},"Minimum Add to Make Parentheses Valid"),(0,l.kt)("span",{class:"tag-is-success"},"String"),(0,l.kt)("span",{class:"tag-is-success"},"Stack"),(0,l.kt)("span",{class:"tag-is-success"},"Greedy"),(0,l.kt)("h3",{id:"inputs-503"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-503"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-503"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-503"},"Further Readings"),(0,l.kt)("h2",{id:"3sum-with-multiplicity"},"3Sum With Multiplicity"),(0,l.kt)("span",{class:"tag-is-success"},"Array"),(0,l.kt)("span",{class:"tag-is-success"},"Hash Table"),(0,l.kt)("span",{class:"tag-is-success"},"Two Pointers"),(0,l.kt)("span",{class:"tag-is-success"},"Sorting"),(0,l.kt)("span",{class:"tag-is-success"},"Counting"),(0,l.kt)("h3",{id:"inputs-504"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-504"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-504"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-504"},"Further Readings"),(0,l.kt)("h2",{id:"flip-string-to-monotone-increasing"},"Flip String to Monotone Increasing"),(0,l.kt)("span",{class:"tag-is-success"},"String"),(0,l.kt)("span",{class:"tag-is-success"},"Dynamic Programming"),(0,l.kt)("h3",{id:"inputs-505"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-505"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-505"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-505"},"Further Readings"),(0,l.kt)("h2",{id:"binary-subarrays-with-sum"},"Binary Subarrays With Sum"),(0,l.kt)("span",{class:"tag-is-success"},"Array"),(0,l.kt)("span",{class:"tag-is-success"},"Hash Table"),(0,l.kt)("span",{class:"tag-is-success"},"Sliding Window"),(0,l.kt)("span",{class:"tag-is-success"},"Prefix Sum"),(0,l.kt)("h3",{id:"inputs-506"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-506"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-506"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-506"},"Further Readings"),(0,l.kt)("h2",{id:"minimum-falling-path-sum"},"Minimum Falling Path Sum"),(0,l.kt)("span",{class:"tag-is-success"},"Array"),(0,l.kt)("span",{class:"tag-is-success"},"Dynamic Programming"),(0,l.kt)("span",{class:"tag-is-success"},"Matrix"),(0,l.kt)("h3",{id:"inputs-507"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-507"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-507"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-507"},"Further Readings"),(0,l.kt)("h2",{id:"beautiful-array"},"Beautiful Array"),(0,l.kt)("span",{class:"tag-is-success"},"Array"),(0,l.kt)("span",{class:"tag-is-success"},"Math"),(0,l.kt)("span",{class:"tag-is-success"},"Divide and Conquer"),(0,l.kt)("h3",{id:"inputs-508"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-508"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-508"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-508"},"Further Readings"),(0,l.kt)("h2",{id:"shortest-bridge"},"Shortest Bridge"),(0,l.kt)("span",{class:"tag-is-success"},"Array"),(0,l.kt)("span",{class:"tag-is-success"},"Depth-First Search"),(0,l.kt)("span",{class:"tag-is-success"},"Breadth-First Search"),(0,l.kt)("span",{class:"tag-is-success"},"Matrix"),(0,l.kt)("h3",{id:"inputs-509"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-509"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-509"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-509"},"Further Readings"),(0,l.kt)("h2",{id:"knight-dialer"},"Knight Dialer"),(0,l.kt)("span",{class:"tag-is-success"},"Dynamic Programming"),(0,l.kt)("h3",{id:"inputs-510"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-510"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-510"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-510"},"Further Readings"),(0,l.kt)("h2",{id:"minimum-area-rectangle"},"Minimum Area Rectangle"),(0,l.kt)("span",{class:"tag-is-success"},"Array"),(0,l.kt)("span",{class:"tag-is-success"},"Hash Table"),(0,l.kt)("span",{class:"tag-is-success"},"Math"),(0,l.kt)("span",{class:"tag-is-success"},"Geometry"),(0,l.kt)("span",{class:"tag-is-success"},"Sorting"),(0,l.kt)("h3",{id:"inputs-511"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-511"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-511"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-511"},"Further Readings"),(0,l.kt)("h2",{id:"minimum-increment-to-make-array-unique"},"Minimum Increment to Make Array Unique"),(0,l.kt)("span",{class:"tag-is-success"},"Array"),(0,l.kt)("span",{class:"tag-is-success"},"Greedy"),(0,l.kt)("span",{class:"tag-is-success"},"Sorting"),(0,l.kt)("span",{class:"tag-is-success"},"Counting"),(0,l.kt)("h3",{id:"inputs-512"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-512"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-512"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-512"},"Further Readings"),(0,l.kt)("h2",{id:"validate-stack-sequences"},"Validate Stack Sequences"),(0,l.kt)("span",{class:"tag-is-success"},"Array"),(0,l.kt)("span",{class:"tag-is-success"},"Stack"),(0,l.kt)("span",{class:"tag-is-success"},"Simulation"),(0,l.kt)("h3",{id:"inputs-513"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-513"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-513"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-513"},"Further Readings"),(0,l.kt)("h2",{id:"most-stones-removed-with-same-row-or-column"},"Most Stones Removed with Same Row or Column"),(0,l.kt)("span",{class:"tag-is-success"},"Depth-First Search"),(0,l.kt)("span",{class:"tag-is-success"},"Union Find"),(0,l.kt)("span",{class:"tag-is-success"},"Graph"),(0,l.kt)("h3",{id:"inputs-514"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-514"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-514"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-514"},"Further Readings"),(0,l.kt)("h2",{id:"bag-of-tokens"},"Bag of Tokens"),(0,l.kt)("span",{class:"tag-is-success"},"Array"),(0,l.kt)("span",{class:"tag-is-success"},"Two Pointers"),(0,l.kt)("span",{class:"tag-is-success"},"Greedy"),(0,l.kt)("span",{class:"tag-is-success"},"Sorting"),(0,l.kt)("h3",{id:"inputs-515"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-515"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-515"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-515"},"Further Readings"),(0,l.kt)("h2",{id:"largest-time-for-given-digits"},"Largest Time for Given Digits"),(0,l.kt)("span",{class:"tag-is-success"},"String"),(0,l.kt)("span",{class:"tag-is-success"},"Enumeration"),(0,l.kt)("h3",{id:"inputs-516"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-516"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-516"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-516"},"Further Readings"),(0,l.kt)("h2",{id:"reveal-cards-in-increasing-order"},"Reveal Cards In Increasing Order"),(0,l.kt)("span",{class:"tag-is-success"},"Array"),(0,l.kt)("span",{class:"tag-is-success"},"Queue"),(0,l.kt)("span",{class:"tag-is-success"},"Sorting"),(0,l.kt)("span",{class:"tag-is-success"},"Simulation"),(0,l.kt)("h3",{id:"inputs-517"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-517"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-517"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-517"},"Further Readings"),(0,l.kt)("h2",{id:"flip-equivalent-binary-trees"},"Flip Equivalent Binary Trees"),(0,l.kt)("span",{class:"tag-is-success"},"Tree"),(0,l.kt)("span",{class:"tag-is-success"},"Depth-First Search"),(0,l.kt)("span",{class:"tag-is-success"},"Binary Tree"),(0,l.kt)("h3",{id:"inputs-518"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-518"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-518"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-518"},"Further Readings"),(0,l.kt)("h2",{id:"array-of-doubled-pairs"},"Array of Doubled Pairs"),(0,l.kt)("span",{class:"tag-is-success"},"Array"),(0,l.kt)("span",{class:"tag-is-success"},"Hash Table"),(0,l.kt)("span",{class:"tag-is-success"},"Greedy"),(0,l.kt)("span",{class:"tag-is-success"},"Sorting"),(0,l.kt)("h3",{id:"inputs-519"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-519"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-519"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-519"},"Further Readings"),(0,l.kt)("h2",{id:"delete-columns-to-make-sorted-ii"},"Delete Columns to Make Sorted II"),(0,l.kt)("span",{class:"tag-is-success"},"Array"),(0,l.kt)("span",{class:"tag-is-success"},"String"),(0,l.kt)("span",{class:"tag-is-success"},"Greedy"),(0,l.kt)("h3",{id:"inputs-520"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-520"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-520"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-520"},"Further Readings"),(0,l.kt)("h2",{id:"prison-cells-after-n-days"},"Prison Cells After N Days"),(0,l.kt)("span",{class:"tag-is-success"},"Array"),(0,l.kt)("span",{class:"tag-is-success"},"Hash Table"),(0,l.kt)("span",{class:"tag-is-success"},"Math"),(0,l.kt)("span",{class:"tag-is-success"},"Bit Manipulation"),(0,l.kt)("h3",{id:"inputs-521"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-521"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-521"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-521"},"Further Readings"),(0,l.kt)("h2",{id:"check-completeness-of-a-binary-tree"},"Check Completeness of a Binary Tree"),(0,l.kt)("span",{class:"tag-is-success"},"Tree"),(0,l.kt)("span",{class:"tag-is-success"},"Breadth-First Search"),(0,l.kt)("span",{class:"tag-is-success"},"Binary Tree"),(0,l.kt)("h3",{id:"inputs-522"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-522"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-522"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-522"},"Further Readings"),(0,l.kt)("h2",{id:"regions-cut-by-slashes"},"Regions Cut By Slashes"),(0,l.kt)("span",{class:"tag-is-success"},"Depth-First Search"),(0,l.kt)("span",{class:"tag-is-success"},"Breadth-First Search"),(0,l.kt)("span",{class:"tag-is-success"},"Union Find"),(0,l.kt)("span",{class:"tag-is-success"},"Graph"),(0,l.kt)("h3",{id:"inputs-523"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-523"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-523"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-523"},"Further Readings"),(0,l.kt)("h2",{id:"maximum-width-ramp"},"Maximum Width Ramp"),(0,l.kt)("span",{class:"tag-is-success"},"Array"),(0,l.kt)("span",{class:"tag-is-success"},"Stack"),(0,l.kt)("span",{class:"tag-is-success"},"Monotonic Stack"),(0,l.kt)("h3",{id:"inputs-524"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-524"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-524"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-524"},"Further Readings"),(0,l.kt)("h2",{id:"minimum-area-rectangle-ii"},"Minimum Area Rectangle II"),(0,l.kt)("span",{class:"tag-is-success"},"Array"),(0,l.kt)("span",{class:"tag-is-success"},"Math"),(0,l.kt)("span",{class:"tag-is-success"},"Geometry"),(0,l.kt)("h3",{id:"inputs-525"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-525"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-525"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-525"},"Further Readings"),(0,l.kt)("h2",{id:"vowel-spellchecker"},"Vowel Spellchecker"),(0,l.kt)("span",{class:"tag-is-success"},"Array"),(0,l.kt)("span",{class:"tag-is-success"},"Hash Table"),(0,l.kt)("span",{class:"tag-is-success"},"String"),(0,l.kt)("h3",{id:"inputs-526"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-526"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-526"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-526"},"Further Readings"),(0,l.kt)("h2",{id:"numbers-with-same-consecutive-differences"},"Numbers With Same Consecutive Differences"),(0,l.kt)("span",{class:"tag-is-success"},"Backtracking"),(0,l.kt)("span",{class:"tag-is-success"},"Breadth-First Search"),(0,l.kt)("h3",{id:"inputs-527"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-527"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-527"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-527"},"Further Readings"),(0,l.kt)("h2",{id:"pancake-sorting"},"Pancake Sorting"),(0,l.kt)("span",{class:"tag-is-success"},"Array"),(0,l.kt)("span",{class:"tag-is-success"},"Two Pointers"),(0,l.kt)("span",{class:"tag-is-success"},"Greedy"),(0,l.kt)("span",{class:"tag-is-success"},"Sorting"),(0,l.kt)("h3",{id:"inputs-528"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-528"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-528"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-528"},"Further Readings"),(0,l.kt)("h2",{id:"powerful-integers"},"Powerful Integers"),(0,l.kt)("span",{class:"tag-is-success"},"Hash Table"),(0,l.kt)("span",{class:"tag-is-success"},"Math"),(0,l.kt)("h3",{id:"inputs-529"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-529"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-529"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-529"},"Further Readings"),(0,l.kt)("h2",{id:"flip-binary-tree-to-match-preorder-traversal"},"Flip Binary Tree To Match Preorder Traversal"),(0,l.kt)("span",{class:"tag-is-success"},"Tree"),(0,l.kt)("span",{class:"tag-is-success"},"Depth-First Search"),(0,l.kt)("span",{class:"tag-is-success"},"Binary Tree"),(0,l.kt)("h3",{id:"inputs-530"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-530"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-530"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-530"},"Further Readings"),(0,l.kt)("h2",{id:"k-closest-points-to-origin"},"K Closest Points to Origin"),(0,l.kt)("span",{class:"tag-is-success"},"Array"),(0,l.kt)("span",{class:"tag-is-success"},"Math"),(0,l.kt)("span",{class:"tag-is-success"},"Divide and Conquer"),(0,l.kt)("span",{class:"tag-is-success"},"Geometry"),(0,l.kt)("span",{class:"tag-is-success"},"Sorting"),(0,l.kt)("span",{class:"tag-is-success"},"Heap (Priority Queue)"),(0,l.kt)("span",{class:"tag-is-success"},"Quickselect"),(0,l.kt)("h3",{id:"inputs-531"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-531"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-531"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-531"},"Further Readings"),(0,l.kt)("h2",{id:"subarray-sums-divisible-by-k"},"Subarray Sums Divisible by K"),(0,l.kt)("span",{class:"tag-is-success"},"Array"),(0,l.kt)("span",{class:"tag-is-success"},"Hash Table"),(0,l.kt)("span",{class:"tag-is-success"},"Prefix Sum"),(0,l.kt)("h3",{id:"inputs-532"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-532"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-532"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-532"},"Further Readings"),(0,l.kt)("h2",{id:"longest-turbulent-subarray"},"Longest Turbulent Subarray"),(0,l.kt)("span",{class:"tag-is-success"},"Array"),(0,l.kt)("span",{class:"tag-is-success"},"Dynamic Programming"),(0,l.kt)("span",{class:"tag-is-success"},"Sliding Window"),(0,l.kt)("h3",{id:"inputs-533"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-533"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-533"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-533"},"Further Readings"),(0,l.kt)("h2",{id:"distribute-coins-in-binary-tree"},"Distribute Coins in Binary Tree"),(0,l.kt)("span",{class:"tag-is-success"},"Tree"),(0,l.kt)("span",{class:"tag-is-success"},"Depth-First Search"),(0,l.kt)("span",{class:"tag-is-success"},"Binary Tree"),(0,l.kt)("h3",{id:"inputs-534"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-534"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-534"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-534"},"Further Readings"),(0,l.kt)("h2",{id:"time-based-key-value-store"},"Time Based Key-Value Store"),(0,l.kt)("span",{class:"tag-is-success"},"Hash Table"),(0,l.kt)("span",{class:"tag-is-success"},"String"),(0,l.kt)("span",{class:"tag-is-success"},"Binary Search"),(0,l.kt)("span",{class:"tag-is-success"},"Design"),(0,l.kt)("h3",{id:"inputs-535"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-535"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-535"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-535"},"Further Readings"),(0,l.kt)("h2",{id:"minimum-cost-for-tickets"},"Minimum Cost For Tickets"),(0,l.kt)("span",{class:"tag-is-success"},"Array"),(0,l.kt)("span",{class:"tag-is-success"},"Dynamic Programming"),(0,l.kt)("h3",{id:"inputs-536"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-536"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-536"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-536"},"Further Readings"),(0,l.kt)("h2",{id:"string-without-aaa-or-bbb"},"String Without AAA or BBB"),(0,l.kt)("span",{class:"tag-is-success"},"String"),(0,l.kt)("span",{class:"tag-is-success"},"Greedy"),(0,l.kt)("h3",{id:"inputs-537"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-537"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-537"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-537"},"Further Readings"),(0,l.kt)("h2",{id:"sum-of-even-numbers-after-queries"},"Sum of Even Numbers After Queries"),(0,l.kt)("span",{class:"tag-is-success"},"Array"),(0,l.kt)("span",{class:"tag-is-success"},"Simulation"),(0,l.kt)("h3",{id:"inputs-538"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-538"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-538"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-538"},"Further Readings"),(0,l.kt)("h2",{id:"interval-list-intersections"},"Interval List Intersections"),(0,l.kt)("span",{class:"tag-is-success"},"Array"),(0,l.kt)("span",{class:"tag-is-success"},"Two Pointers"),(0,l.kt)("h3",{id:"inputs-539"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-539"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-539"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-539"},"Further Readings"),(0,l.kt)("h2",{id:"smallest-string-starting-from-leaf"},"Smallest String Starting From Leaf"),(0,l.kt)("span",{class:"tag-is-success"},"String"),(0,l.kt)("span",{class:"tag-is-success"},"Tree"),(0,l.kt)("span",{class:"tag-is-success"},"Depth-First Search"),(0,l.kt)("span",{class:"tag-is-success"},"Binary Tree"),(0,l.kt)("h3",{id:"inputs-540"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-540"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-540"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-540"},"Further Readings"),(0,l.kt)("h2",{id:"satisfiability-of-equality-equations"},"Satisfiability of Equality Equations"),(0,l.kt)("span",{class:"tag-is-success"},"Array"),(0,l.kt)("span",{class:"tag-is-success"},"String"),(0,l.kt)("span",{class:"tag-is-success"},"Union Find"),(0,l.kt)("span",{class:"tag-is-success"},"Graph"),(0,l.kt)("h3",{id:"inputs-541"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-541"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-541"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-541"},"Further Readings"),(0,l.kt)("h2",{id:"broken-calculator"},"Broken Calculator"),(0,l.kt)("span",{class:"tag-is-success"},"Math"),(0,l.kt)("span",{class:"tag-is-success"},"Greedy"),(0,l.kt)("h3",{id:"inputs-542"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-542"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-542"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-542"},"Further Readings"),(0,l.kt)("h2",{id:"rotting-oranges"},"Rotting Oranges"),(0,l.kt)("span",{class:"tag-is-success"},"Array"),(0,l.kt)("span",{class:"tag-is-success"},"Breadth-First Search"),(0,l.kt)("span",{class:"tag-is-success"},"Matrix"),(0,l.kt)("h3",{id:"inputs-543"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-543"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-543"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-543"},"Further Readings"),(0,l.kt)("h2",{id:"maximum-binary-tree-ii"},"Maximum Binary Tree II"),(0,l.kt)("span",{class:"tag-is-success"},"Tree"),(0,l.kt)("span",{class:"tag-is-success"},"Binary Tree"),(0,l.kt)("h3",{id:"inputs-544"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-544"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-544"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-544"},"Further Readings"),(0,l.kt)("h2",{id:"check-if-word-is-valid-after-substitutions"},"Check If Word Is Valid After Substitutions"),(0,l.kt)("span",{class:"tag-is-success"},"String"),(0,l.kt)("span",{class:"tag-is-success"},"Stack"),(0,l.kt)("h3",{id:"inputs-545"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-545"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-545"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-545"},"Further Readings"),(0,l.kt)("h2",{id:"max-consecutive-ones-iii"},"Max Consecutive Ones III"),(0,l.kt)("span",{class:"tag-is-success"},"Array"),(0,l.kt)("span",{class:"tag-is-success"},"Binary Search"),(0,l.kt)("span",{class:"tag-is-success"},"Sliding Window"),(0,l.kt)("span",{class:"tag-is-success"},"Prefix Sum"),(0,l.kt)("h3",{id:"inputs-546"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-546"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-546"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-546"},"Further Readings"),(0,l.kt)("h2",{id:"clumsy-factorial"},"Clumsy Factorial"),(0,l.kt)("span",{class:"tag-is-success"},"Math"),(0,l.kt)("span",{class:"tag-is-success"},"Stack"),(0,l.kt)("span",{class:"tag-is-success"},"Simulation"),(0,l.kt)("h3",{id:"inputs-547"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-547"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-547"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-547"},"Further Readings"),(0,l.kt)("h2",{id:"minimum-domino-rotations-for-equal-row"},"Minimum Domino Rotations For Equal Row"),(0,l.kt)("span",{class:"tag-is-success"},"Array"),(0,l.kt)("span",{class:"tag-is-success"},"Greedy"),(0,l.kt)("h3",{id:"inputs-548"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-548"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-548"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-548"},"Further Readings"),(0,l.kt)("h2",{id:"construct-binary-search-tree-from-preorder-traversal"},"Construct Binary Search Tree from Preorder Traversal"),(0,l.kt)("span",{class:"tag-is-success"},"Array"),(0,l.kt)("span",{class:"tag-is-success"},"Stack"),(0,l.kt)("span",{class:"tag-is-success"},"Tree"),(0,l.kt)("span",{class:"tag-is-success"},"Binary Search Tree"),(0,l.kt)("span",{class:"tag-is-success"},"Monotonic Stack"),(0,l.kt)("span",{class:"tag-is-success"},"Binary Tree"),(0,l.kt)("h3",{id:"inputs-549"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-549"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-549"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-549"},"Further Readings"),(0,l.kt)("h2",{id:"pairs-of-songs-with-total-durations-divisible-by-60"},"Pairs of Songs With Total Durations Divisible by 60"),(0,l.kt)("span",{class:"tag-is-success"},"Array"),(0,l.kt)("span",{class:"tag-is-success"},"Hash Table"),(0,l.kt)("span",{class:"tag-is-success"},"Counting"),(0,l.kt)("h3",{id:"inputs-550"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-550"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-550"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-550"},"Further Readings"),(0,l.kt)("h2",{id:"capacity-to-ship-packages-within-d-days"},"Capacity To Ship Packages Within D Days"),(0,l.kt)("span",{class:"tag-is-success"},"Array"),(0,l.kt)("span",{class:"tag-is-success"},"Binary Search"),(0,l.kt)("span",{class:"tag-is-success"},"Greedy"),(0,l.kt)("h3",{id:"inputs-551"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-551"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-551"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-551"},"Further Readings"),(0,l.kt)("h2",{id:"best-sightseeing-pair"},"Best Sightseeing Pair"),(0,l.kt)("span",{class:"tag-is-success"},"Array"),(0,l.kt)("span",{class:"tag-is-success"},"Dynamic Programming"),(0,l.kt)("h3",{id:"inputs-552"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-552"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-552"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-552"},"Further Readings"),(0,l.kt)("h2",{id:"smallest-integer-divisible-by-k"},"Smallest Integer Divisible by K"),(0,l.kt)("span",{class:"tag-is-success"},"Hash Table"),(0,l.kt)("span",{class:"tag-is-success"},"Math"),(0,l.kt)("h3",{id:"inputs-553"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-553"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-553"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-553"},"Further Readings"),(0,l.kt)("h2",{id:"binary-string-with-substrings-representing-1-to-n"},"Binary String With Substrings Representing 1 To N"),(0,l.kt)("span",{class:"tag-is-success"},"String"),(0,l.kt)("h3",{id:"inputs-554"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-554"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-554"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-554"},"Further Readings"),(0,l.kt)("h2",{id:"convert-to-base--2"},"Convert to Base -2"),(0,l.kt)("span",{class:"tag-is-success"},"Math"),(0,l.kt)("h3",{id:"inputs-555"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-555"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-555"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-555"},"Further Readings"),(0,l.kt)("h2",{id:"next-greater-node-in-linked-list"},"Next Greater Node In Linked List"),(0,l.kt)("span",{class:"tag-is-success"},"Array"),(0,l.kt)("span",{class:"tag-is-success"},"Linked List"),(0,l.kt)("span",{class:"tag-is-success"},"Stack"),(0,l.kt)("span",{class:"tag-is-success"},"Monotonic Stack"),(0,l.kt)("h3",{id:"inputs-556"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-556"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-556"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-556"},"Further Readings"),(0,l.kt)("h2",{id:"number-of-enclaves"},"Number of Enclaves"),(0,l.kt)("span",{class:"tag-is-success"},"Array"),(0,l.kt)("span",{class:"tag-is-success"},"Depth-First Search"),(0,l.kt)("span",{class:"tag-is-success"},"Breadth-First Search"),(0,l.kt)("span",{class:"tag-is-success"},"Union Find"),(0,l.kt)("span",{class:"tag-is-success"},"Matrix"),(0,l.kt)("h3",{id:"inputs-557"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-557"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-557"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-557"},"Further Readings"),(0,l.kt)("h2",{id:"camelcase-matching"},"Camelcase Matching"),(0,l.kt)("span",{class:"tag-is-success"},"Two Pointers"),(0,l.kt)("span",{class:"tag-is-success"},"String"),(0,l.kt)("span",{class:"tag-is-success"},"Trie"),(0,l.kt)("span",{class:"tag-is-success"},"String Matching"),(0,l.kt)("h3",{id:"inputs-558"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-558"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-558"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-558"},"Further Readings"),(0,l.kt)("h2",{id:"video-stitching"},"Video Stitching"),(0,l.kt)("span",{class:"tag-is-success"},"Array"),(0,l.kt)("span",{class:"tag-is-success"},"Dynamic Programming"),(0,l.kt)("span",{class:"tag-is-success"},"Greedy"),(0,l.kt)("h3",{id:"inputs-559"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-559"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-559"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-559"},"Further Readings"),(0,l.kt)("h2",{id:"maximum-difference-between-node-and-ancestor"},"Maximum Difference Between Node and Ancestor"),(0,l.kt)("span",{class:"tag-is-success"},"Tree"),(0,l.kt)("span",{class:"tag-is-success"},"Depth-First Search"),(0,l.kt)("span",{class:"tag-is-success"},"Binary Tree"),(0,l.kt)("h3",{id:"inputs-560"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-560"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-560"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-560"},"Further Readings"),(0,l.kt)("h2",{id:"longest-arithmetic-subsequence"},"Longest Arithmetic Subsequence"),(0,l.kt)("span",{class:"tag-is-success"},"Array"),(0,l.kt)("span",{class:"tag-is-success"},"Hash Table"),(0,l.kt)("span",{class:"tag-is-success"},"Binary Search"),(0,l.kt)("span",{class:"tag-is-success"},"Dynamic Programming"),(0,l.kt)("h3",{id:"inputs-561"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-561"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-561"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-561"},"Further Readings"),(0,l.kt)("h2",{id:"two-city-scheduling"},"Two City Scheduling"),(0,l.kt)("span",{class:"tag-is-success"},"Array"),(0,l.kt)("span",{class:"tag-is-success"},"Greedy"),(0,l.kt)("span",{class:"tag-is-success"},"Sorting"),(0,l.kt)("h3",{id:"inputs-562"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-562"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-562"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-562"},"Further Readings"),(0,l.kt)("h2",{id:"maximum-sum-of-two-non-overlapping-subarrays"},"Maximum Sum of Two Non-Overlapping Subarrays"),(0,l.kt)("span",{class:"tag-is-success"},"Array"),(0,l.kt)("span",{class:"tag-is-success"},"Dynamic Programming"),(0,l.kt)("span",{class:"tag-is-success"},"Sliding Window"),(0,l.kt)("h3",{id:"inputs-563"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-563"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-563"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-563"},"Further Readings"),(0,l.kt)("h2",{id:"moving-stones-until-consecutive"},"Moving Stones Until Consecutive"),(0,l.kt)("span",{class:"tag-is-success"},"Math"),(0,l.kt)("span",{class:"tag-is-success"},"Brainteaser"),(0,l.kt)("h3",{id:"inputs-564"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-564"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-564"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-564"},"Further Readings"),(0,l.kt)("h2",{id:"coloring-a-border"},"Coloring A Border"),(0,l.kt)("span",{class:"tag-is-success"},"Array"),(0,l.kt)("span",{class:"tag-is-success"},"Depth-First Search"),(0,l.kt)("span",{class:"tag-is-success"},"Breadth-First Search"),(0,l.kt)("span",{class:"tag-is-success"},"Matrix"),(0,l.kt)("h3",{id:"inputs-565"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-565"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-565"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-565"},"Further Readings"),(0,l.kt)("h2",{id:"uncrossed-lines"},"Uncrossed Lines"),(0,l.kt)("span",{class:"tag-is-success"},"Array"),(0,l.kt)("span",{class:"tag-is-success"},"Dynamic Programming"),(0,l.kt)("h3",{id:"inputs-566"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-566"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-566"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-566"},"Further Readings"),(0,l.kt)("h2",{id:"binary-search-tree-to-greater-sum-tree"},"Binary Search Tree to Greater Sum Tree"),(0,l.kt)("span",{class:"tag-is-success"},"Tree"),(0,l.kt)("span",{class:"tag-is-success"},"Depth-First Search"),(0,l.kt)("span",{class:"tag-is-success"},"Binary Search Tree"),(0,l.kt)("span",{class:"tag-is-success"},"Binary Tree"),(0,l.kt)("h3",{id:"inputs-567"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-567"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-567"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-567"},"Further Readings"),(0,l.kt)("h2",{id:"minimum-score-triangulation-of-polygon"},"Minimum Score Triangulation of Polygon"),(0,l.kt)("span",{class:"tag-is-success"},"Array"),(0,l.kt)("span",{class:"tag-is-success"},"Dynamic Programming"),(0,l.kt)("h3",{id:"inputs-568"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-568"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-568"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-568"},"Further Readings"),(0,l.kt)("h2",{id:"moving-stones-until-consecutive-ii"},"Moving Stones Until Consecutive II"),(0,l.kt)("span",{class:"tag-is-success"},"Array"),(0,l.kt)("span",{class:"tag-is-success"},"Math"),(0,l.kt)("span",{class:"tag-is-success"},"Two Pointers"),(0,l.kt)("span",{class:"tag-is-success"},"Sorting"),(0,l.kt)("h3",{id:"inputs-569"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-569"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-569"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-569"},"Further Readings"),(0,l.kt)("h2",{id:"robot-bounded-in-circle"},"Robot Bounded In Circle"),(0,l.kt)("span",{class:"tag-is-success"},"Math"),(0,l.kt)("span",{class:"tag-is-success"},"String"),(0,l.kt)("span",{class:"tag-is-success"},"Simulation"),(0,l.kt)("h3",{id:"inputs-570"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-570"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-570"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-570"},"Further Readings"),(0,l.kt)("h2",{id:"flower-planting-with-no-adjacent"},"Flower Planting With No Adjacent"),(0,l.kt)("span",{class:"tag-is-success"},"Depth-First Search"),(0,l.kt)("span",{class:"tag-is-success"},"Breadth-First Search"),(0,l.kt)("span",{class:"tag-is-success"},"Graph"),(0,l.kt)("h3",{id:"inputs-571"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-571"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-571"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-571"},"Further Readings"),(0,l.kt)("h2",{id:"partition-array-for-maximum-sum"},"Partition Array for Maximum Sum"),(0,l.kt)("span",{class:"tag-is-success"},"Array"),(0,l.kt)("span",{class:"tag-is-success"},"Dynamic Programming"),(0,l.kt)("h3",{id:"inputs-572"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-572"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-572"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-572"},"Further Readings"),(0,l.kt)("h2",{id:"customers-who-bought-all-products"},"Customers Who Bought All Products"),(0,l.kt)("span",{class:"tag-is-success"},"Database"),(0,l.kt)("h3",{id:"inputs-573"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-573"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-573"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-573"},"Further Readings"),(0,l.kt)("h2",{id:"longest-string-chain"},"Longest String Chain"),(0,l.kt)("span",{class:"tag-is-success"},"Array"),(0,l.kt)("span",{class:"tag-is-success"},"Hash Table"),(0,l.kt)("span",{class:"tag-is-success"},"Two Pointers"),(0,l.kt)("span",{class:"tag-is-success"},"String"),(0,l.kt)("span",{class:"tag-is-success"},"Dynamic Programming"),(0,l.kt)("h3",{id:"inputs-574"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-574"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-574"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-574"},"Further Readings"),(0,l.kt)("h2",{id:"last-stone-weight-ii"},"Last Stone Weight II"),(0,l.kt)("span",{class:"tag-is-success"},"Array"),(0,l.kt)("span",{class:"tag-is-success"},"Dynamic Programming"),(0,l.kt)("h3",{id:"inputs-575"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-575"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-575"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-575"},"Further Readings"),(0,l.kt)("h2",{id:"grumpy-bookstore-owner"},"Grumpy Bookstore Owner"),(0,l.kt)("span",{class:"tag-is-success"},"Array"),(0,l.kt)("span",{class:"tag-is-success"},"Sliding Window"),(0,l.kt)("h3",{id:"inputs-576"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-576"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-576"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-576"},"Further Readings"),(0,l.kt)("h2",{id:"previous-permutation-with-one-swap"},"Previous Permutation With One Swap"),(0,l.kt)("span",{class:"tag-is-success"},"Array"),(0,l.kt)("span",{class:"tag-is-success"},"Greedy"),(0,l.kt)("h3",{id:"inputs-577"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-577"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-577"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-577"},"Further Readings"),(0,l.kt)("h2",{id:"distant-barcodes"},"Distant Barcodes"),(0,l.kt)("span",{class:"tag-is-success"},"Array"),(0,l.kt)("span",{class:"tag-is-success"},"Hash Table"),(0,l.kt)("span",{class:"tag-is-success"},"Greedy"),(0,l.kt)("span",{class:"tag-is-success"},"Sorting"),(0,l.kt)("span",{class:"tag-is-success"},"Heap (Priority Queue)"),(0,l.kt)("span",{class:"tag-is-success"},"Counting"),(0,l.kt)("h3",{id:"inputs-578"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-578"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-578"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-578"},"Further Readings"),(0,l.kt)("h2",{id:"shortest-way-to-form-string"},"Shortest Way to Form String"),(0,l.kt)("span",{class:"tag-is-success"},"String"),(0,l.kt)("span",{class:"tag-is-success"},"Dynamic Programming"),(0,l.kt)("span",{class:"tag-is-success"},"Greedy"),(0,l.kt)("h3",{id:"inputs-579"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-579"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-579"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-579"},"Further Readings"),(0,l.kt)("h2",{id:"campus-bikes"},"Campus Bikes"),(0,l.kt)("span",{class:"tag-is-success"},"Array"),(0,l.kt)("span",{class:"tag-is-success"},"Greedy"),(0,l.kt)("span",{class:"tag-is-success"},"Sorting"),(0,l.kt)("h3",{id:"inputs-580"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-580"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-580"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-580"},"Further Readings"),(0,l.kt)("h2",{id:"minimize-rounding-error-to-meet-target"},"Minimize Rounding Error to Meet Target"),(0,l.kt)("span",{class:"tag-is-success"},"Array"),(0,l.kt)("span",{class:"tag-is-success"},"Math"),(0,l.kt)("span",{class:"tag-is-success"},"String"),(0,l.kt)("span",{class:"tag-is-success"},"Greedy"),(0,l.kt)("h3",{id:"inputs-581"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-581"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-581"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-581"},"Further Readings"),(0,l.kt)("h2",{id:"all-paths-from-source-lead-to-destination"},"All Paths from Source Lead to Destination"),(0,l.kt)("span",{class:"tag-is-success"},"Depth-First Search"),(0,l.kt)("span",{class:"tag-is-success"},"Graph"),(0,l.kt)("h3",{id:"inputs-582"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-582"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-582"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-582"},"Further Readings"),(0,l.kt)("h2",{id:"missing-element-in-sorted-array"},"Missing Element in Sorted Array"),(0,l.kt)("span",{class:"tag-is-success"},"Array"),(0,l.kt)("span",{class:"tag-is-success"},"Binary Search"),(0,l.kt)("h3",{id:"inputs-583"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-583"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-583"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-583"},"Further Readings"),(0,l.kt)("h2",{id:"lexicographically-smallest-equivalent-string"},"Lexicographically Smallest Equivalent String"),(0,l.kt)("span",{class:"tag-is-success"},"String"),(0,l.kt)("span",{class:"tag-is-success"},"Union Find"),(0,l.kt)("h3",{id:"inputs-584"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-584"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-584"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-584"},"Further Readings"),(0,l.kt)("h2",{id:"longest-repeating-substring"},"Longest Repeating Substring"),(0,l.kt)("span",{class:"tag-is-success"},"String"),(0,l.kt)("span",{class:"tag-is-success"},"Binary Search"),(0,l.kt)("span",{class:"tag-is-success"},"Dynamic Programming"),(0,l.kt)("span",{class:"tag-is-success"},"Rolling Hash"),(0,l.kt)("span",{class:"tag-is-success"},"Suffix Array"),(0,l.kt)("span",{class:"tag-is-success"},"Hash Function"),(0,l.kt)("h3",{id:"inputs-585"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-585"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-585"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-585"},"Further Readings"),(0,l.kt)("h2",{id:"campus-bikes-ii"},"Campus Bikes II"),(0,l.kt)("span",{class:"tag-is-success"},"Array"),(0,l.kt)("span",{class:"tag-is-success"},"Dynamic Programming"),(0,l.kt)("span",{class:"tag-is-success"},"Backtracking"),(0,l.kt)("span",{class:"tag-is-success"},"Bit Manipulation"),(0,l.kt)("span",{class:"tag-is-success"},"Bitmask"),(0,l.kt)("h3",{id:"inputs-586"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-586"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-586"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-586"},"Further Readings"),(0,l.kt)("h2",{id:"product-sales-analysis-iii"},"Product Sales Analysis III"),(0,l.kt)("span",{class:"tag-is-success"},"Database"),(0,l.kt)("h3",{id:"inputs-587"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-587"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-587"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-587"},"Further Readings"),(0,l.kt)("h2",{id:"flip-columns-for-maximum-number-of-equal-rows"},"Flip Columns For Maximum Number of Equal Rows"),(0,l.kt)("span",{class:"tag-is-success"},"Array"),(0,l.kt)("span",{class:"tag-is-success"},"Hash Table"),(0,l.kt)("span",{class:"tag-is-success"},"Matrix"),(0,l.kt)("h3",{id:"inputs-588"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-588"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-588"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-588"},"Further Readings"),(0,l.kt)("h2",{id:"adding-two-negabinary-numbers"},"Adding Two Negabinary Numbers"),(0,l.kt)("span",{class:"tag-is-success"},"Array"),(0,l.kt)("span",{class:"tag-is-success"},"Math"),(0,l.kt)("h3",{id:"inputs-589"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-589"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-589"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-589"},"Further Readings"),(0,l.kt)("h2",{id:"project-employees-iii"},"Project Employees III"),(0,l.kt)("span",{class:"tag-is-success"},"Database"),(0,l.kt)("h3",{id:"inputs-590"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-590"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-590"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-590"},"Further Readings"),(0,l.kt)("h2",{id:"letter-tile-possibilities"},"Letter Tile Possibilities"),(0,l.kt)("span",{class:"tag-is-success"},"String"),(0,l.kt)("span",{class:"tag-is-success"},"Backtracking"),(0,l.kt)("h3",{id:"inputs-591"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-591"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-591"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-591"},"Further Readings"),(0,l.kt)("h2",{id:"insufficient-nodes-in-root-to-leaf-paths"},"Insufficient Nodes in Root to Leaf Paths"),(0,l.kt)("span",{class:"tag-is-success"},"Tree"),(0,l.kt)("span",{class:"tag-is-success"},"Depth-First Search"),(0,l.kt)("span",{class:"tag-is-success"},"Binary Tree"),(0,l.kt)("h3",{id:"inputs-592"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-592"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-592"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-592"},"Further Readings"),(0,l.kt)("h2",{id:"smallest-subsequence-of-distinct-characters"},"Smallest Subsequence of Distinct Characters"),(0,l.kt)("span",{class:"tag-is-success"},"String"),(0,l.kt)("span",{class:"tag-is-success"},"Stack"),(0,l.kt)("span",{class:"tag-is-success"},"Greedy"),(0,l.kt)("span",{class:"tag-is-success"},"Monotonic Stack"),(0,l.kt)("h3",{id:"inputs-593"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-593"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-593"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-593"},"Further Readings"),(0,l.kt)("h2",{id:"brace-expansion"},"Brace Expansion"),(0,l.kt)("span",{class:"tag-is-success"},"String"),(0,l.kt)("span",{class:"tag-is-success"},"Backtracking"),(0,l.kt)("span",{class:"tag-is-success"},"Breadth-First Search"),(0,l.kt)("h3",{id:"inputs-594"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-594"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-594"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-594"},"Further Readings"),(0,l.kt)("h2",{id:"largest-values-from-labels"},"Largest Values From Labels"),(0,l.kt)("span",{class:"tag-is-success"},"Array"),(0,l.kt)("span",{class:"tag-is-success"},"Hash Table"),(0,l.kt)("span",{class:"tag-is-success"},"Greedy"),(0,l.kt)("span",{class:"tag-is-success"},"Sorting"),(0,l.kt)("span",{class:"tag-is-success"},"Counting"),(0,l.kt)("h3",{id:"inputs-595"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-595"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-595"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-595"},"Further Readings"),(0,l.kt)("h2",{id:"shortest-path-in-binary-matrix"},"Shortest Path in Binary Matrix"),(0,l.kt)("span",{class:"tag-is-success"},"Array"),(0,l.kt)("span",{class:"tag-is-success"},"Breadth-First Search"),(0,l.kt)("span",{class:"tag-is-success"},"Matrix"),(0,l.kt)("h3",{id:"inputs-596"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-596"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-596"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-596"},"Further Readings"),(0,l.kt)("h2",{id:"statistics-from-a-large-sample"},"Statistics from a Large Sample"),(0,l.kt)("span",{class:"tag-is-success"},"Math"),(0,l.kt)("span",{class:"tag-is-success"},"Two Pointers"),(0,l.kt)("span",{class:"tag-is-success"},"Probability and Statistics"),(0,l.kt)("h3",{id:"inputs-597"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-597"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-597"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-597"},"Further Readings"),(0,l.kt)("h2",{id:"car-pooling"},"Car Pooling"),(0,l.kt)("span",{class:"tag-is-success"},"Array"),(0,l.kt)("span",{class:"tag-is-success"},"Sorting"),(0,l.kt)("span",{class:"tag-is-success"},"Heap (Priority Queue)"),(0,l.kt)("span",{class:"tag-is-success"},"Simulation"),(0,l.kt)("span",{class:"tag-is-success"},"Prefix Sum"),(0,l.kt)("h3",{id:"inputs-598"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-598"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-598"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-598"},"Further Readings"),(0,l.kt)("h2",{id:"unpopular-books"},"Unpopular Books"),(0,l.kt)("span",{class:"tag-is-success"},"Database"),(0,l.kt)("h3",{id:"inputs-599"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-599"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-599"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-599"},"Further Readings"),(0,l.kt)("h2",{id:"find-k-length-substrings-with-no-repeated-characters"},"Find K-Length Substrings With No Repeated Characters"),(0,l.kt)("span",{class:"tag-is-success"},"Hash Table"),(0,l.kt)("span",{class:"tag-is-success"},"String"),(0,l.kt)("span",{class:"tag-is-success"},"Sliding Window"),(0,l.kt)("h3",{id:"inputs-600"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-600"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-600"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-600"},"Further Readings"),(0,l.kt)("h2",{id:"the-earliest-moment-when-everyone-become-friends"},"The Earliest Moment When Everyone Become Friends"),(0,l.kt)("span",{class:"tag-is-success"},"Array"),(0,l.kt)("span",{class:"tag-is-success"},"Union Find"),(0,l.kt)("h3",{id:"inputs-601"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-601"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-601"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-601"},"Further Readings"),(0,l.kt)("h2",{id:"path-with-maximum-minimum-value"},"Path With Maximum Minimum Value"),(0,l.kt)("span",{class:"tag-is-success"},"Array"),(0,l.kt)("span",{class:"tag-is-success"},"Depth-First Search"),(0,l.kt)("span",{class:"tag-is-success"},"Breadth-First Search"),(0,l.kt)("span",{class:"tag-is-success"},"Union Find"),(0,l.kt)("span",{class:"tag-is-success"},"Heap (Priority Queue)"),(0,l.kt)("span",{class:"tag-is-success"},"Matrix"),(0,l.kt)("h3",{id:"inputs-602"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-602"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-602"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-602"},"Further Readings"),(0,l.kt)("h2",{id:"path-in-zigzag-labelled-binary-tree"},"Path In Zigzag Labelled Binary Tree"),(0,l.kt)("span",{class:"tag-is-success"},"Math"),(0,l.kt)("span",{class:"tag-is-success"},"Tree"),(0,l.kt)("span",{class:"tag-is-success"},"Binary Tree"),(0,l.kt)("h3",{id:"inputs-603"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-603"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-603"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-603"},"Further Readings"),(0,l.kt)("h2",{id:"filling-bookcase-shelves"},"Filling Bookcase Shelves"),(0,l.kt)("span",{class:"tag-is-success"},"Array"),(0,l.kt)("span",{class:"tag-is-success"},"Dynamic Programming"),(0,l.kt)("h3",{id:"inputs-604"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-604"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-604"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-604"},"Further Readings"),(0,l.kt)("h2",{id:"new-users-daily-count"},"New Users Daily Count"),(0,l.kt)("span",{class:"tag-is-success"},"Database"),(0,l.kt)("h3",{id:"inputs-605"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-605"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-605"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-605"},"Further Readings"),(0,l.kt)("h2",{id:"corporate-flight-bookings"},"Corporate Flight Bookings"),(0,l.kt)("span",{class:"tag-is-success"},"Array"),(0,l.kt)("span",{class:"tag-is-success"},"Prefix Sum"),(0,l.kt)("h3",{id:"inputs-606"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-606"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-606"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-606"},"Further Readings"),(0,l.kt)("h2",{id:"delete-nodes-and-return-forest"},"Delete Nodes And Return Forest"),(0,l.kt)("span",{class:"tag-is-success"},"Tree"),(0,l.kt)("span",{class:"tag-is-success"},"Depth-First Search"),(0,l.kt)("span",{class:"tag-is-success"},"Binary Tree"),(0,l.kt)("h3",{id:"inputs-607"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-607"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-607"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-607"},"Further Readings"),(0,l.kt)("h2",{id:"maximum-nesting-depth-of-two-valid-parentheses-strings"},"Maximum Nesting Depth of Two Valid Parentheses Strings"),(0,l.kt)("span",{class:"tag-is-success"},"String"),(0,l.kt)("span",{class:"tag-is-success"},"Stack"),(0,l.kt)("h3",{id:"inputs-608"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-608"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-608"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-608"},"Further Readings"),(0,l.kt)("h2",{id:"highest-grade-for-each-student"},"Highest Grade For Each Student"),(0,l.kt)("span",{class:"tag-is-success"},"Database"),(0,l.kt)("h3",{id:"inputs-609"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-609"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-609"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-609"},"Further Readings"),(0,l.kt)("h2",{id:"print-foobar-alternately"},"Print FooBar Alternately"),(0,l.kt)("span",{class:"tag-is-success"},"Concurrency"),(0,l.kt)("h3",{id:"inputs-610"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-610"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-610"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-610"},"Further Readings"),(0,l.kt)("h2",{id:"print-zero-even-odd"},"Print Zero Even Odd"),(0,l.kt)("span",{class:"tag-is-success"},"Concurrency"),(0,l.kt)("h3",{id:"inputs-611"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-611"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-611"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-611"},"Further Readings"),(0,l.kt)("h2",{id:"building-h2o"},"Building H2O"),(0,l.kt)("span",{class:"tag-is-success"},"Concurrency"),(0,l.kt)("h3",{id:"inputs-612"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-612"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-612"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-612"},"Further Readings"),(0,l.kt)("h2",{id:"maximum-average-subtree"},"Maximum Average Subtree"),(0,l.kt)("span",{class:"tag-is-success"},"Tree"),(0,l.kt)("span",{class:"tag-is-success"},"Depth-First Search"),(0,l.kt)("span",{class:"tag-is-success"},"Binary Tree"),(0,l.kt)("h3",{id:"inputs-613"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-613"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-613"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-613"},"Further Readings"),(0,l.kt)("h2",{id:"lowest-common-ancestor-of-deepest-leaves"},"Lowest Common Ancestor of Deepest Leaves"),(0,l.kt)("span",{class:"tag-is-success"},"Hash Table"),(0,l.kt)("span",{class:"tag-is-success"},"Tree"),(0,l.kt)("span",{class:"tag-is-success"},"Depth-First Search"),(0,l.kt)("span",{class:"tag-is-success"},"Breadth-First Search"),(0,l.kt)("span",{class:"tag-is-success"},"Binary Tree"),(0,l.kt)("h3",{id:"inputs-614"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-614"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-614"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-614"},"Further Readings"),(0,l.kt)("h2",{id:"longest-well-performing-interval"},"Longest Well-Performing Interval"),(0,l.kt)("span",{class:"tag-is-success"},"Array"),(0,l.kt)("span",{class:"tag-is-success"},"Hash Table"),(0,l.kt)("span",{class:"tag-is-success"},"Stack"),(0,l.kt)("span",{class:"tag-is-success"},"Monotonic Stack"),(0,l.kt)("span",{class:"tag-is-success"},"Prefix Sum"),(0,l.kt)("h3",{id:"inputs-615"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-615"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-615"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-615"},"Further Readings"),(0,l.kt)("h2",{id:"active-businesses"},"Active Businesses"),(0,l.kt)("span",{class:"tag-is-success"},"Database"),(0,l.kt)("h3",{id:"inputs-616"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-616"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-616"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-616"},"Further Readings"),(0,l.kt)("h2",{id:"shortest-path-with-alternating-colors"},"Shortest Path with Alternating Colors"),(0,l.kt)("span",{class:"tag-is-success"},"Breadth-First Search"),(0,l.kt)("span",{class:"tag-is-success"},"Graph"),(0,l.kt)("h3",{id:"inputs-617"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-617"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-617"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-617"},"Further Readings"),(0,l.kt)("h2",{id:"minimum-cost-tree-from-leaf-values"},"Minimum Cost Tree From Leaf Values"),(0,l.kt)("span",{class:"tag-is-success"},"Dynamic Programming"),(0,l.kt)("span",{class:"tag-is-success"},"Stack"),(0,l.kt)("span",{class:"tag-is-success"},"Greedy"),(0,l.kt)("span",{class:"tag-is-success"},"Monotonic Stack"),(0,l.kt)("h3",{id:"inputs-618"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-618"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-618"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-618"},"Further Readings"),(0,l.kt)("h2",{id:"maximum-of-absolute-value-expression"},"Maximum of Absolute Value Expression"),(0,l.kt)("span",{class:"tag-is-success"},"Array"),(0,l.kt)("span",{class:"tag-is-success"},"Math"),(0,l.kt)("h3",{id:"inputs-619"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-619"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-619"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-619"},"Further Readings"),(0,l.kt)("h2",{id:"reported-posts-ii"},"Reported Posts II"),(0,l.kt)("span",{class:"tag-is-success"},"Database"),(0,l.kt)("h3",{id:"inputs-620"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-620"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-620"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-620"},"Further Readings"),(0,l.kt)("h2",{id:"connecting-cities-with-minimum-cost"},"Connecting Cities With Minimum Cost"),(0,l.kt)("span",{class:"tag-is-success"},"Union Find"),(0,l.kt)("span",{class:"tag-is-success"},"Graph"),(0,l.kt)("span",{class:"tag-is-success"},"Heap (Priority Queue)"),(0,l.kt)("span",{class:"tag-is-success"},"Minimum Spanning Tree"),(0,l.kt)("h3",{id:"inputs-621"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-621"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-621"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-621"},"Further Readings"),(0,l.kt)("h2",{id:"parallel-courses"},"Parallel Courses"),(0,l.kt)("span",{class:"tag-is-success"},"Graph"),(0,l.kt)("span",{class:"tag-is-success"},"Topological Sort"),(0,l.kt)("h3",{id:"inputs-622"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-622"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-622"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-622"},"Further Readings"),(0,l.kt)("h2",{id:"alphabet-board-path"},"Alphabet Board Path"),(0,l.kt)("span",{class:"tag-is-success"},"Hash Table"),(0,l.kt)("span",{class:"tag-is-success"},"String"),(0,l.kt)("h3",{id:"inputs-623"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-623"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-623"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-623"},"Further Readings"),(0,l.kt)("h2",{id:"largest-1-bordered-square"},"Largest 1-Bordered Square"),(0,l.kt)("span",{class:"tag-is-success"},"Array"),(0,l.kt)("span",{class:"tag-is-success"},"Dynamic Programming"),(0,l.kt)("span",{class:"tag-is-success"},"Matrix"),(0,l.kt)("h3",{id:"inputs-624"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-624"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-624"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-624"},"Further Readings"),(0,l.kt)("h2",{id:"stone-game-ii"},"Stone Game II"),(0,l.kt)("span",{class:"tag-is-success"},"Array"),(0,l.kt)("span",{class:"tag-is-success"},"Math"),(0,l.kt)("span",{class:"tag-is-success"},"Dynamic Programming"),(0,l.kt)("span",{class:"tag-is-success"},"Game Theory"),(0,l.kt)("h3",{id:"inputs-625"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-625"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-625"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-625"},"Further Readings"),(0,l.kt)("h2",{id:"longest-common-subsequence"},"Longest Common Subsequence"),(0,l.kt)("span",{class:"tag-is-success"},"String"),(0,l.kt)("span",{class:"tag-is-success"},"Dynamic Programming"),(0,l.kt)("h3",{id:"inputs-626"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-626"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-626"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-626"},"Further Readings"),(0,l.kt)("h2",{id:"decrease-elements-to-make-array-zigzag"},"Decrease Elements To Make Array Zigzag"),(0,l.kt)("span",{class:"tag-is-success"},"Array"),(0,l.kt)("span",{class:"tag-is-success"},"Greedy"),(0,l.kt)("h3",{id:"inputs-627"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-627"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-627"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-627"},"Further Readings"),(0,l.kt)("h2",{id:"binary-tree-coloring-game"},"Binary Tree Coloring Game"),(0,l.kt)("span",{class:"tag-is-success"},"Tree"),(0,l.kt)("span",{class:"tag-is-success"},"Depth-First Search"),(0,l.kt)("span",{class:"tag-is-success"},"Binary Tree"),(0,l.kt)("h3",{id:"inputs-628"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-628"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-628"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-628"},"Further Readings"),(0,l.kt)("h2",{id:"snapshot-array"},"Snapshot Array"),(0,l.kt)("span",{class:"tag-is-success"},"Array"),(0,l.kt)("span",{class:"tag-is-success"},"Hash Table"),(0,l.kt)("span",{class:"tag-is-success"},"Binary Search"),(0,l.kt)("span",{class:"tag-is-success"},"Design"),(0,l.kt)("h3",{id:"inputs-629"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-629"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-629"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-629"},"Further Readings"),(0,l.kt)("h2",{id:"article-views-ii"},"Article Views II"),(0,l.kt)("span",{class:"tag-is-success"},"Database"),(0,l.kt)("h3",{id:"inputs-630"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-630"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-630"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-630"},"Further Readings"),(0,l.kt)("h2",{id:"minimum-swaps-to-group-all-1s-together"},"Minimum Swaps to Group All 1's Together"),(0,l.kt)("span",{class:"tag-is-success"},"Array"),(0,l.kt)("span",{class:"tag-is-success"},"Sliding Window"),(0,l.kt)("h3",{id:"inputs-631"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-631"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-631"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-631"},"Further Readings"),(0,l.kt)("h2",{id:"analyze-user-website-visit-pattern"},"Analyze User Website Visit Pattern"),(0,l.kt)("span",{class:"tag-is-success"},"Array"),(0,l.kt)("span",{class:"tag-is-success"},"Hash Table"),(0,l.kt)("span",{class:"tag-is-success"},"Sorting"),(0,l.kt)("h3",{id:"inputs-632"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-632"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-632"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-632"},"Further Readings"),(0,l.kt)("h2",{id:"number-of-dice-rolls-with-target-sum"},"Number of Dice Rolls With Target Sum"),(0,l.kt)("span",{class:"tag-is-success"},"Dynamic Programming"),(0,l.kt)("h3",{id:"inputs-633"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-633"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-633"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-633"},"Further Readings"),(0,l.kt)("h2",{id:"swap-for-longest-repeated-character-substring"},"Swap For Longest Repeated Character Substring"),(0,l.kt)("span",{class:"tag-is-success"},"String"),(0,l.kt)("span",{class:"tag-is-success"},"Sliding Window"),(0,l.kt)("h3",{id:"inputs-634"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-634"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-634"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-634"},"Further Readings"),(0,l.kt)("h2",{id:"market-analysis-i"},"Market Analysis I"),(0,l.kt)("span",{class:"tag-is-success"},"Database"),(0,l.kt)("h3",{id:"inputs-635"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-635"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-635"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-635"},"Further Readings"),(0,l.kt)("h2",{id:"maximum-level-sum-of-a-binary-tree"},"Maximum Level Sum of a Binary Tree"),(0,l.kt)("span",{class:"tag-is-success"},"Tree"),(0,l.kt)("span",{class:"tag-is-success"},"Depth-First Search"),(0,l.kt)("span",{class:"tag-is-success"},"Breadth-First Search"),(0,l.kt)("span",{class:"tag-is-success"},"Binary Tree"),(0,l.kt)("h3",{id:"inputs-636"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-636"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-636"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-636"},"Further Readings"),(0,l.kt)("h2",{id:"as-far-from-land-as-possible"},"As Far from Land as Possible"),(0,l.kt)("span",{class:"tag-is-success"},"Array"),(0,l.kt)("span",{class:"tag-is-success"},"Dynamic Programming"),(0,l.kt)("span",{class:"tag-is-success"},"Breadth-First Search"),(0,l.kt)("span",{class:"tag-is-success"},"Matrix"),(0,l.kt)("h3",{id:"inputs-637"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-637"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-637"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-637"},"Further Readings"),(0,l.kt)("h2",{id:"product-price-at-a-given-date"},"Product Price at a Given Date"),(0,l.kt)("span",{class:"tag-is-success"},"Database"),(0,l.kt)("h3",{id:"inputs-638"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-638"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-638"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-638"},"Further Readings"),(0,l.kt)("h2",{id:"design-file-system"},"Design File System"),(0,l.kt)("span",{class:"tag-is-success"},"Hash Table"),(0,l.kt)("span",{class:"tag-is-success"},"String"),(0,l.kt)("span",{class:"tag-is-success"},"Design"),(0,l.kt)("span",{class:"tag-is-success"},"Trie"),(0,l.kt)("h3",{id:"inputs-639"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-639"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-639"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-639"},"Further Readings"),(0,l.kt)("h2",{id:"minimum-cost-to-connect-sticks"},"Minimum Cost to Connect Sticks"),(0,l.kt)("span",{class:"tag-is-success"},"Array"),(0,l.kt)("span",{class:"tag-is-success"},"Greedy"),(0,l.kt)("span",{class:"tag-is-success"},"Heap (Priority Queue)"),(0,l.kt)("h3",{id:"inputs-640"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-640"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-640"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-640"},"Further Readings"),(0,l.kt)("h2",{id:"invalid-transactions"},"Invalid Transactions"),(0,l.kt)("span",{class:"tag-is-success"},"Array"),(0,l.kt)("span",{class:"tag-is-success"},"Hash Table"),(0,l.kt)("span",{class:"tag-is-success"},"String"),(0,l.kt)("span",{class:"tag-is-success"},"Sorting"),(0,l.kt)("h3",{id:"inputs-641"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-641"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-641"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-641"},"Further Readings"),(0,l.kt)("h2",{id:"compare-strings-by-frequency-of-the-smallest-character"},"Compare Strings by Frequency of the Smallest Character"),(0,l.kt)("span",{class:"tag-is-success"},"Array"),(0,l.kt)("span",{class:"tag-is-success"},"Hash Table"),(0,l.kt)("span",{class:"tag-is-success"},"String"),(0,l.kt)("span",{class:"tag-is-success"},"Binary Search"),(0,l.kt)("span",{class:"tag-is-success"},"Sorting"),(0,l.kt)("h3",{id:"inputs-642"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-642"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-642"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-642"},"Further Readings"),(0,l.kt)("h2",{id:"remove-zero-sum-consecutive-nodes-from-linked-list"},"Remove Zero Sum Consecutive Nodes from Linked List"),(0,l.kt)("span",{class:"tag-is-success"},"Hash Table"),(0,l.kt)("span",{class:"tag-is-success"},"Linked List"),(0,l.kt)("h3",{id:"inputs-643"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-643"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-643"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-643"},"Further Readings"),(0,l.kt)("h2",{id:"immediate-food-delivery-ii"},"Immediate Food Delivery II"),(0,l.kt)("span",{class:"tag-is-success"},"Database"),(0,l.kt)("h3",{id:"inputs-644"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-644"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-644"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-644"},"Further Readings"),(0,l.kt)("h2",{id:"can-make-palindrome-from-substring"},"Can Make Palindrome from Substring"),(0,l.kt)("span",{class:"tag-is-success"},"Hash Table"),(0,l.kt)("span",{class:"tag-is-success"},"String"),(0,l.kt)("span",{class:"tag-is-success"},"Bit Manipulation"),(0,l.kt)("span",{class:"tag-is-success"},"Prefix Sum"),(0,l.kt)("h3",{id:"inputs-645"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-645"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-645"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-645"},"Further Readings"),(0,l.kt)("h2",{id:"before-and-after-puzzle"},"Before and After Puzzle"),(0,l.kt)("span",{class:"tag-is-success"},"Array"),(0,l.kt)("span",{class:"tag-is-success"},"Hash Table"),(0,l.kt)("span",{class:"tag-is-success"},"String"),(0,l.kt)("span",{class:"tag-is-success"},"Sorting"),(0,l.kt)("h3",{id:"inputs-646"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-646"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-646"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-646"},"Further Readings"),(0,l.kt)("h2",{id:"shortest-distance-to-target-color"},"Shortest Distance to Target Color"),(0,l.kt)("span",{class:"tag-is-success"},"Array"),(0,l.kt)("span",{class:"tag-is-success"},"Binary Search"),(0,l.kt)("span",{class:"tag-is-success"},"Dynamic Programming"),(0,l.kt)("h3",{id:"inputs-647"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-647"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-647"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-647"},"Further Readings"),(0,l.kt)("h2",{id:"maximum-subarray-sum-with-one-deletion"},"Maximum Subarray Sum with One Deletion"),(0,l.kt)("span",{class:"tag-is-success"},"Array"),(0,l.kt)("span",{class:"tag-is-success"},"Dynamic Programming"),(0,l.kt)("h3",{id:"inputs-648"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-648"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-648"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-648"},"Further Readings"),(0,l.kt)("h2",{id:"design-bounded-blocking-queue"},"Design Bounded Blocking Queue"),(0,l.kt)("span",{class:"tag-is-success"},"Concurrency"),(0,l.kt)("h3",{id:"inputs-649"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-649"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-649"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-649"},"Further Readings"),(0,l.kt)("h2",{id:"reverse-substrings-between-each-pair-of-parentheses"},"Reverse Substrings Between Each Pair of Parentheses"),(0,l.kt)("span",{class:"tag-is-success"},"String"),(0,l.kt)("span",{class:"tag-is-success"},"Stack"),(0,l.kt)("h3",{id:"inputs-650"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-650"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-650"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-650"},"Further Readings"),(0,l.kt)("h2",{id:"k-concatenation-maximum-sum"},"K-Concatenation Maximum Sum"),(0,l.kt)("span",{class:"tag-is-success"},"Array"),(0,l.kt)("span",{class:"tag-is-success"},"Dynamic Programming"),(0,l.kt)("h3",{id:"inputs-651"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-651"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-651"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-651"},"Further Readings"),(0,l.kt)("h2",{id:"monthly-transactions-i"},"Monthly Transactions I"),(0,l.kt)("span",{class:"tag-is-success"},"Database"),(0,l.kt)("h3",{id:"inputs-652"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-652"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-652"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-652"},"Further Readings"),(0,l.kt)("h2",{id:"fizz-buzz-multithreaded"},"Fizz Buzz Multithreaded"),(0,l.kt)("span",{class:"tag-is-success"},"Concurrency"),(0,l.kt)("h3",{id:"inputs-653"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-653"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-653"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-653"},"Further Readings"),(0,l.kt)("h2",{id:"minimum-knight-moves"},"Minimum Knight Moves"),(0,l.kt)("span",{class:"tag-is-success"},"Breadth-First Search"),(0,l.kt)("h3",{id:"inputs-654"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-654"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-654"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-654"},"Further Readings"),(0,l.kt)("h2",{id:"find-smallest-common-element-in-all-rows"},"Find Smallest Common Element in All Rows"),(0,l.kt)("span",{class:"tag-is-success"},"Array"),(0,l.kt)("span",{class:"tag-is-success"},"Hash Table"),(0,l.kt)("span",{class:"tag-is-success"},"Binary Search"),(0,l.kt)("span",{class:"tag-is-success"},"Matrix"),(0,l.kt)("span",{class:"tag-is-success"},"Counting"),(0,l.kt)("h3",{id:"inputs-655"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-655"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-655"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-655"},"Further Readings"),(0,l.kt)("h2",{id:"ugly-number-iii"},"Ugly Number III"),(0,l.kt)("span",{class:"tag-is-success"},"Math"),(0,l.kt)("span",{class:"tag-is-success"},"Binary Search"),(0,l.kt)("span",{class:"tag-is-success"},"Number Theory"),(0,l.kt)("h3",{id:"inputs-656"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-656"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-656"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-656"},"Further Readings"),(0,l.kt)("h2",{id:"smallest-string-with-swaps"},"Smallest String With Swaps"),(0,l.kt)("span",{class:"tag-is-success"},"Hash Table"),(0,l.kt)("span",{class:"tag-is-success"},"String"),(0,l.kt)("span",{class:"tag-is-success"},"Depth-First Search"),(0,l.kt)("span",{class:"tag-is-success"},"Breadth-First Search"),(0,l.kt)("span",{class:"tag-is-success"},"Union Find"),(0,l.kt)("h3",{id:"inputs-657"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-657"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-657"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-657"},"Further Readings"),(0,l.kt)("h2",{id:"last-person-to-fit-in-the-bus"},"Last Person to Fit in the Bus"),(0,l.kt)("span",{class:"tag-is-success"},"Database"),(0,l.kt)("h3",{id:"inputs-658"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-658"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-658"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-658"},"Further Readings"),(0,l.kt)("h2",{id:"monthly-transactions-ii"},"Monthly Transactions II"),(0,l.kt)("span",{class:"tag-is-success"},"Database"),(0,l.kt)("h3",{id:"inputs-659"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-659"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-659"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-659"},"Further Readings"),(0,l.kt)("h2",{id:"get-equal-substrings-within-budget"},"Get Equal Substrings Within Budget"),(0,l.kt)("span",{class:"tag-is-success"},"String"),(0,l.kt)("span",{class:"tag-is-success"},"Binary Search"),(0,l.kt)("span",{class:"tag-is-success"},"Sliding Window"),(0,l.kt)("span",{class:"tag-is-success"},"Prefix Sum"),(0,l.kt)("h3",{id:"inputs-660"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-660"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-660"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-660"},"Further Readings"),(0,l.kt)("h2",{id:"remove-all-adjacent-duplicates-in-string-ii"},"Remove All Adjacent Duplicates in String II"),(0,l.kt)("span",{class:"tag-is-success"},"String"),(0,l.kt)("span",{class:"tag-is-success"},"Stack"),(0,l.kt)("h3",{id:"inputs-661"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-661"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-661"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-661"},"Further Readings"),(0,l.kt)("h2",{id:"team-scores-in-football-tournament"},"Team Scores in Football Tournament"),(0,l.kt)("span",{class:"tag-is-success"},"Database"),(0,l.kt)("h3",{id:"inputs-662"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-662"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-662"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-662"},"Further Readings"),(0,l.kt)("h2",{id:"two-sum-bsts"},"Two Sum BSTs"),(0,l.kt)("span",{class:"tag-is-success"},"Two Pointers"),(0,l.kt)("span",{class:"tag-is-success"},"Binary Search"),(0,l.kt)("span",{class:"tag-is-success"},"Stack"),(0,l.kt)("span",{class:"tag-is-success"},"Tree"),(0,l.kt)("span",{class:"tag-is-success"},"Depth-First Search"),(0,l.kt)("span",{class:"tag-is-success"},"Binary Search Tree"),(0,l.kt)("span",{class:"tag-is-success"},"Binary Tree"),(0,l.kt)("h3",{id:"inputs-663"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-663"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-663"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-663"},"Further Readings"),(0,l.kt)("h2",{id:"stepping-numbers"},"Stepping Numbers"),(0,l.kt)("span",{class:"tag-is-success"},"Backtracking"),(0,l.kt)("span",{class:"tag-is-success"},"Breadth-First Search"),(0,l.kt)("h3",{id:"inputs-664"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-664"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-664"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-664"},"Further Readings"),(0,l.kt)("h2",{id:"longest-arithmetic-subsequence-of-given-difference"},"Longest Arithmetic Subsequence of Given Difference"),(0,l.kt)("span",{class:"tag-is-success"},"Array"),(0,l.kt)("span",{class:"tag-is-success"},"Hash Table"),(0,l.kt)("span",{class:"tag-is-success"},"Dynamic Programming"),(0,l.kt)("h3",{id:"inputs-665"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-665"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-665"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-665"},"Further Readings"),(0,l.kt)("h2",{id:"path-with-maximum-gold"},"Path with Maximum Gold"),(0,l.kt)("span",{class:"tag-is-success"},"Array"),(0,l.kt)("span",{class:"tag-is-success"},"Backtracking"),(0,l.kt)("span",{class:"tag-is-success"},"Matrix"),(0,l.kt)("h3",{id:"inputs-666"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-666"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-666"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-666"},"Further Readings"),(0,l.kt)("h2",{id:"queens-that-can-attack-the-king"},"Queens That Can Attack the King"),(0,l.kt)("span",{class:"tag-is-success"},"Array"),(0,l.kt)("span",{class:"tag-is-success"},"Matrix"),(0,l.kt)("span",{class:"tag-is-success"},"Simulation"),(0,l.kt)("h3",{id:"inputs-667"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-667"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-667"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-667"},"Further Readings"),(0,l.kt)("h2",{id:"the-dining-philosophers"},"The Dining Philosophers"),(0,l.kt)("span",{class:"tag-is-success"},"Concurrency"),(0,l.kt)("h3",{id:"inputs-668"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-668"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-668"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-668"},"Further Readings"),(0,l.kt)("h2",{id:"airplane-seat-assignment-probability"},"Airplane Seat Assignment Probability"),(0,l.kt)("span",{class:"tag-is-success"},"Math"),(0,l.kt)("span",{class:"tag-is-success"},"Dynamic Programming"),(0,l.kt)("span",{class:"tag-is-success"},"Brainteaser"),(0,l.kt)("span",{class:"tag-is-success"},"Probability and Statistics"),(0,l.kt)("h3",{id:"inputs-669"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-669"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-669"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-669"},"Further Readings"),(0,l.kt)("h2",{id:"meeting-scheduler"},"Meeting Scheduler"),(0,l.kt)("span",{class:"tag-is-success"},"Array"),(0,l.kt)("span",{class:"tag-is-success"},"Two Pointers"),(0,l.kt)("span",{class:"tag-is-success"},"Sorting"),(0,l.kt)("h3",{id:"inputs-670"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-670"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-670"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-670"},"Further Readings"),(0,l.kt)("h2",{id:"toss-strange-coins"},"Toss Strange Coins"),(0,l.kt)("span",{class:"tag-is-success"},"Math"),(0,l.kt)("span",{class:"tag-is-success"},"Dynamic Programming"),(0,l.kt)("span",{class:"tag-is-success"},"Probability and Statistics"),(0,l.kt)("h3",{id:"inputs-671"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-671"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-671"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-671"},"Further Readings"),(0,l.kt)("h2",{id:"remove-sub-folders-from-the-filesystem"},"Remove Sub-Folders from the Filesystem"),(0,l.kt)("span",{class:"tag-is-success"},"Array"),(0,l.kt)("span",{class:"tag-is-success"},"String"),(0,l.kt)("span",{class:"tag-is-success"},"Trie"),(0,l.kt)("h3",{id:"inputs-672"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-672"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-672"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-672"},"Further Readings"),(0,l.kt)("h2",{id:"replace-the-substring-for-balanced-string"},"Replace the Substring for Balanced String"),(0,l.kt)("span",{class:"tag-is-success"},"String"),(0,l.kt)("span",{class:"tag-is-success"},"Sliding Window"),(0,l.kt)("h3",{id:"inputs-673"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-673"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-673"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-673"},"Further Readings"),(0,l.kt)("h2",{id:"web-crawler"},"Web Crawler"),(0,l.kt)("span",{class:"tag-is-success"},"String"),(0,l.kt)("span",{class:"tag-is-success"},"Depth-First Search"),(0,l.kt)("span",{class:"tag-is-success"},"Breadth-First Search"),(0,l.kt)("span",{class:"tag-is-success"},"Interactive"),(0,l.kt)("h3",{id:"inputs-674"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-674"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-674"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-674"},"Further Readings"),(0,l.kt)("h2",{id:"find-positive-integer-solution-for-a-given-equation"},"Find Positive Integer Solution for a Given Equation"),(0,l.kt)("span",{class:"tag-is-success"},"Math"),(0,l.kt)("span",{class:"tag-is-success"},"Two Pointers"),(0,l.kt)("span",{class:"tag-is-success"},"Binary Search"),(0,l.kt)("span",{class:"tag-is-success"},"Interactive"),(0,l.kt)("h3",{id:"inputs-675"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-675"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-675"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-675"},"Further Readings"),(0,l.kt)("h2",{id:"circular-permutation-in-binary-representation"},"Circular Permutation in Binary Representation"),(0,l.kt)("span",{class:"tag-is-success"},"Math"),(0,l.kt)("span",{class:"tag-is-success"},"Backtracking"),(0,l.kt)("span",{class:"tag-is-success"},"Bit Manipulation"),(0,l.kt)("h3",{id:"inputs-676"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-676"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-676"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-676"},"Further Readings"),(0,l.kt)("h2",{id:"maximum-length-of-a-concatenated-string-with-unique-characters"},"Maximum Length of a Concatenated String with Unique Characters"),(0,l.kt)("span",{class:"tag-is-success"},"Array"),(0,l.kt)("span",{class:"tag-is-success"},"String"),(0,l.kt)("span",{class:"tag-is-success"},"Backtracking"),(0,l.kt)("span",{class:"tag-is-success"},"Bit Manipulation"),(0,l.kt)("h3",{id:"inputs-677"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-677"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-677"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-677"},"Further Readings"),(0,l.kt)("h2",{id:"web-crawler-multithreaded"},"Web Crawler Multithreaded"),(0,l.kt)("span",{class:"tag-is-success"},"Depth-First Search"),(0,l.kt)("span",{class:"tag-is-success"},"Breadth-First Search"),(0,l.kt)("span",{class:"tag-is-success"},"Concurrency"),(0,l.kt)("h3",{id:"inputs-678"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-678"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-678"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-678"},"Further Readings"),(0,l.kt)("h2",{id:"design-a-leaderboard"},"Design A Leaderboard"),(0,l.kt)("span",{class:"tag-is-success"},"Hash Table"),(0,l.kt)("span",{class:"tag-is-success"},"Design"),(0,l.kt)("span",{class:"tag-is-success"},"Sorting"),(0,l.kt)("h3",{id:"inputs-679"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-679"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-679"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-679"},"Further Readings"),(0,l.kt)("h2",{id:"tree-diameter"},"Tree Diameter"),(0,l.kt)("span",{class:"tag-is-success"},"Tree"),(0,l.kt)("span",{class:"tag-is-success"},"Depth-First Search"),(0,l.kt)("span",{class:"tag-is-success"},"Breadth-First Search"),(0,l.kt)("span",{class:"tag-is-success"},"Graph"),(0,l.kt)("span",{class:"tag-is-success"},"Topological Sort"),(0,l.kt)("h3",{id:"inputs-680"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-680"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-680"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-680"},"Further Readings"),(0,l.kt)("h2",{id:"minimum-swaps-to-make-strings-equal"},"Minimum Swaps to Make Strings Equal"),(0,l.kt)("span",{class:"tag-is-success"},"Math"),(0,l.kt)("span",{class:"tag-is-success"},"String"),(0,l.kt)("span",{class:"tag-is-success"},"Greedy"),(0,l.kt)("h3",{id:"inputs-681"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-681"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-681"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-681"},"Further Readings"),(0,l.kt)("h2",{id:"count-number-of-nice-subarrays"},"Count Number of Nice Subarrays"),(0,l.kt)("span",{class:"tag-is-success"},"Array"),(0,l.kt)("span",{class:"tag-is-success"},"Hash Table"),(0,l.kt)("span",{class:"tag-is-success"},"Math"),(0,l.kt)("span",{class:"tag-is-success"},"Sliding Window"),(0,l.kt)("h3",{id:"inputs-682"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-682"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-682"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-682"},"Further Readings"),(0,l.kt)("h2",{id:"minimum-remove-to-make-valid-parentheses"},"Minimum Remove to Make Valid Parentheses"),(0,l.kt)("span",{class:"tag-is-success"},"String"),(0,l.kt)("span",{class:"tag-is-success"},"Stack"),(0,l.kt)("h3",{id:"inputs-683"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-683"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-683"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-683"},"Further Readings"),(0,l.kt)("h2",{id:"reconstruct-a-2-row-binary-matrix"},"Reconstruct a 2-Row Binary Matrix"),(0,l.kt)("span",{class:"tag-is-success"},"Array"),(0,l.kt)("span",{class:"tag-is-success"},"Greedy"),(0,l.kt)("span",{class:"tag-is-success"},"Matrix"),(0,l.kt)("h3",{id:"inputs-684"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-684"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-684"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-684"},"Further Readings"),(0,l.kt)("h2",{id:"number-of-closed-islands"},"Number of Closed Islands"),(0,l.kt)("span",{class:"tag-is-success"},"Array"),(0,l.kt)("span",{class:"tag-is-success"},"Depth-First Search"),(0,l.kt)("span",{class:"tag-is-success"},"Breadth-First Search"),(0,l.kt)("span",{class:"tag-is-success"},"Union Find"),(0,l.kt)("span",{class:"tag-is-success"},"Matrix"),(0,l.kt)("h3",{id:"inputs-685"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-685"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-685"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-685"},"Further Readings"),(0,l.kt)("h2",{id:"encode-number"},"Encode Number"),(0,l.kt)("span",{class:"tag-is-success"},"Math"),(0,l.kt)("span",{class:"tag-is-success"},"String"),(0,l.kt)("span",{class:"tag-is-success"},"Bit Manipulation"),(0,l.kt)("h3",{id:"inputs-686"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-686"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-686"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-686"},"Further Readings"),(0,l.kt)("h2",{id:"smallest-common-region"},"Smallest Common Region"),(0,l.kt)("span",{class:"tag-is-success"},"Array"),(0,l.kt)("span",{class:"tag-is-success"},"Hash Table"),(0,l.kt)("span",{class:"tag-is-success"},"String"),(0,l.kt)("span",{class:"tag-is-success"},"Tree"),(0,l.kt)("span",{class:"tag-is-success"},"Depth-First Search"),(0,l.kt)("span",{class:"tag-is-success"},"Breadth-First Search"),(0,l.kt)("h3",{id:"inputs-687"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-687"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-687"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-687"},"Further Readings"),(0,l.kt)("h2",{id:"synonymous-sentences"},"Synonymous Sentences"),(0,l.kt)("span",{class:"tag-is-success"},"Array"),(0,l.kt)("span",{class:"tag-is-success"},"Hash Table"),(0,l.kt)("span",{class:"tag-is-success"},"String"),(0,l.kt)("span",{class:"tag-is-success"},"Backtracking"),(0,l.kt)("span",{class:"tag-is-success"},"Union Find"),(0,l.kt)("h3",{id:"inputs-688"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-688"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-688"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-688"},"Further Readings"),(0,l.kt)("h2",{id:"find-elements-in-a-contaminated-binary-tree"},"Find Elements in a Contaminated Binary Tree"),(0,l.kt)("span",{class:"tag-is-success"},"Hash Table"),(0,l.kt)("span",{class:"tag-is-success"},"Tree"),(0,l.kt)("span",{class:"tag-is-success"},"Depth-First Search"),(0,l.kt)("span",{class:"tag-is-success"},"Breadth-First Search"),(0,l.kt)("span",{class:"tag-is-success"},"Design"),(0,l.kt)("span",{class:"tag-is-success"},"Binary Tree"),(0,l.kt)("h3",{id:"inputs-689"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-689"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-689"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-689"},"Further Readings"),(0,l.kt)("h2",{id:"greatest-sum-divisible-by-three"},"Greatest Sum Divisible by Three"),(0,l.kt)("span",{class:"tag-is-success"},"Array"),(0,l.kt)("span",{class:"tag-is-success"},"Dynamic Programming"),(0,l.kt)("span",{class:"tag-is-success"},"Greedy"),(0,l.kt)("h3",{id:"inputs-690"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-690"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-690"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-690"},"Further Readings"),(0,l.kt)("h2",{id:"page-recommendations"},"Page Recommendations"),(0,l.kt)("span",{class:"tag-is-success"},"Database"),(0,l.kt)("h3",{id:"inputs-691"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-691"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-691"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-691"},"Further Readings"),(0,l.kt)("h2",{id:"print-immutable-linked-list-in-reverse"},"Print Immutable Linked List in Reverse"),(0,l.kt)("span",{class:"tag-is-success"},"Linked List"),(0,l.kt)("span",{class:"tag-is-success"},"Two Pointers"),(0,l.kt)("span",{class:"tag-is-success"},"Stack"),(0,l.kt)("span",{class:"tag-is-success"},"Recursion"),(0,l.kt)("h3",{id:"inputs-692"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-692"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-692"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-692"},"Further Readings"),(0,l.kt)("h2",{id:"count-servers-that-communicate"},"Count Servers that Communicate"),(0,l.kt)("span",{class:"tag-is-success"},"Array"),(0,l.kt)("span",{class:"tag-is-success"},"Depth-First Search"),(0,l.kt)("span",{class:"tag-is-success"},"Breadth-First Search"),(0,l.kt)("span",{class:"tag-is-success"},"Union Find"),(0,l.kt)("span",{class:"tag-is-success"},"Matrix"),(0,l.kt)("span",{class:"tag-is-success"},"Counting"),(0,l.kt)("h3",{id:"inputs-693"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-693"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-693"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-693"},"Further Readings"),(0,l.kt)("h2",{id:"search-suggestions-system"},"Search Suggestions System"),(0,l.kt)("span",{class:"tag-is-success"},"Array"),(0,l.kt)("span",{class:"tag-is-success"},"String"),(0,l.kt)("span",{class:"tag-is-success"},"Trie"),(0,l.kt)("h3",{id:"inputs-694"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-694"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-694"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-694"},"Further Readings"),(0,l.kt)("h2",{id:"all-people-report-to-the-given-manager"},"All People Report to the Given Manager"),(0,l.kt)("span",{class:"tag-is-success"},"Database"),(0,l.kt)("h3",{id:"inputs-695"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-695"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-695"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-695"},"Further Readings"),(0,l.kt)("h2",{id:"remove-interval"},"Remove Interval"),(0,l.kt)("span",{class:"tag-is-success"},"Array"),(0,l.kt)("h3",{id:"inputs-696"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-696"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-696"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-696"},"Further Readings"),(0,l.kt)("h2",{id:"delete-tree-nodes"},"Delete Tree Nodes"),(0,l.kt)("span",{class:"tag-is-success"},"Tree"),(0,l.kt)("span",{class:"tag-is-success"},"Depth-First Search"),(0,l.kt)("span",{class:"tag-is-success"},"Breadth-First Search"),(0,l.kt)("h3",{id:"inputs-697"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-697"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-697"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-697"},"Further Readings"),(0,l.kt)("h2",{id:"number-of-burgers-with-no-waste-of-ingredients"},"Number of Burgers with No Waste of Ingredients"),(0,l.kt)("span",{class:"tag-is-success"},"Math"),(0,l.kt)("h3",{id:"inputs-698"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-698"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-698"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-698"},"Further Readings"),(0,l.kt)("h2",{id:"count-square-submatrices-with-all-ones"},"Count Square Submatrices with All Ones"),(0,l.kt)("span",{class:"tag-is-success"},"Array"),(0,l.kt)("span",{class:"tag-is-success"},"Dynamic Programming"),(0,l.kt)("span",{class:"tag-is-success"},"Matrix"),(0,l.kt)("h3",{id:"inputs-699"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-699"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-699"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-699"},"Further Readings"),(0,l.kt)("h2",{id:"group-the-people-given-the-group-size-they-belong-to"},"Group the People Given the Group Size They Belong To"),(0,l.kt)("span",{class:"tag-is-success"},"Array"),(0,l.kt)("span",{class:"tag-is-success"},"Hash Table"),(0,l.kt)("h3",{id:"inputs-700"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-700"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-700"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-700"},"Further Readings"),(0,l.kt)("h2",{id:"find-the-smallest-divisor-given-a-threshold"},"Find the Smallest Divisor Given a Threshold"),(0,l.kt)("span",{class:"tag-is-success"},"Array"),(0,l.kt)("span",{class:"tag-is-success"},"Binary Search"),(0,l.kt)("h3",{id:"inputs-701"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-701"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-701"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-701"},"Further Readings"),(0,l.kt)("h2",{id:"find-the-start-and-end-number-of-continuous-ranges"},"Find the Start and End Number of Continuous Ranges"),(0,l.kt)("span",{class:"tag-is-success"},"Database"),(0,l.kt)("h3",{id:"inputs-702"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-702"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-702"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-702"},"Further Readings"),(0,l.kt)("h2",{id:"iterator-for-combination"},"Iterator for Combination"),(0,l.kt)("span",{class:"tag-is-success"},"String"),(0,l.kt)("span",{class:"tag-is-success"},"Backtracking"),(0,l.kt)("span",{class:"tag-is-success"},"Design"),(0,l.kt)("span",{class:"tag-is-success"},"Iterator"),(0,l.kt)("h3",{id:"inputs-703"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-703"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-703"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-703"},"Further Readings"),(0,l.kt)("h2",{id:"remove-covered-intervals"},"Remove Covered Intervals"),(0,l.kt)("span",{class:"tag-is-success"},"Array"),(0,l.kt)("span",{class:"tag-is-success"},"Sorting"),(0,l.kt)("h3",{id:"inputs-704"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-704"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-704"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-704"},"Further Readings"),(0,l.kt)("h2",{id:"sequential-digits"},"Sequential Digits"),(0,l.kt)("span",{class:"tag-is-success"},"Enumeration"),(0,l.kt)("h3",{id:"inputs-705"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-705"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-705"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-705"},"Further Readings"),(0,l.kt)("h2",{id:"maximum-side-length-of-a-square-with-sum-less-than-or-equal-to-threshold"},"Maximum Side Length of a Square with Sum Less than or Equal to Threshold"),(0,l.kt)("span",{class:"tag-is-success"},"Array"),(0,l.kt)("span",{class:"tag-is-success"},"Binary Search"),(0,l.kt)("span",{class:"tag-is-success"},"Matrix"),(0,l.kt)("span",{class:"tag-is-success"},"Prefix Sum"),(0,l.kt)("h3",{id:"inputs-706"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-706"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-706"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-706"},"Further Readings"),(0,l.kt)("h2",{id:"divide-array-in-sets-of-k-consecutive-numbers"},"Divide Array in Sets of K Consecutive Numbers"),(0,l.kt)("span",{class:"tag-is-success"},"Array"),(0,l.kt)("span",{class:"tag-is-success"},"Hash Table"),(0,l.kt)("span",{class:"tag-is-success"},"Greedy"),(0,l.kt)("span",{class:"tag-is-success"},"Sorting"),(0,l.kt)("h3",{id:"inputs-707"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-707"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-707"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-707"},"Further Readings"),(0,l.kt)("h2",{id:"maximum-number-of-occurrences-of-a-substring"},"Maximum Number of Occurrences of a Substring"),(0,l.kt)("span",{class:"tag-is-success"},"Hash Table"),(0,l.kt)("span",{class:"tag-is-success"},"String"),(0,l.kt)("span",{class:"tag-is-success"},"Sliding Window"),(0,l.kt)("h3",{id:"inputs-708"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-708"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-708"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-708"},"Further Readings"),(0,l.kt)("h2",{id:"sum-of-mutated-array-closest-to-target"},"Sum of Mutated Array Closest to Target"),(0,l.kt)("span",{class:"tag-is-success"},"Array"),(0,l.kt)("span",{class:"tag-is-success"},"Binary Search"),(0,l.kt)("span",{class:"tag-is-success"},"Sorting"),(0,l.kt)("h3",{id:"inputs-709"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-709"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-709"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-709"},"Further Readings"),(0,l.kt)("h2",{id:"deepest-leaves-sum"},"Deepest Leaves Sum"),(0,l.kt)("span",{class:"tag-is-success"},"Tree"),(0,l.kt)("span",{class:"tag-is-success"},"Depth-First Search"),(0,l.kt)("span",{class:"tag-is-success"},"Breadth-First Search"),(0,l.kt)("span",{class:"tag-is-success"},"Binary Tree"),(0,l.kt)("h3",{id:"inputs-710"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-710"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-710"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-710"},"Further Readings"),(0,l.kt)("h2",{id:"all-elements-in-two-binary-search-trees"},"All Elements in Two Binary Search Trees"),(0,l.kt)("span",{class:"tag-is-success"},"Tree"),(0,l.kt)("span",{class:"tag-is-success"},"Depth-First Search"),(0,l.kt)("span",{class:"tag-is-success"},"Binary Search Tree"),(0,l.kt)("span",{class:"tag-is-success"},"Sorting"),(0,l.kt)("span",{class:"tag-is-success"},"Binary Tree"),(0,l.kt)("h3",{id:"inputs-711"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-711"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-711"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-711"},"Further Readings"),(0,l.kt)("h2",{id:"jump-game-iii"},"Jump Game III"),(0,l.kt)("span",{class:"tag-is-success"},"Array"),(0,l.kt)("span",{class:"tag-is-success"},"Depth-First Search"),(0,l.kt)("span",{class:"tag-is-success"},"Breadth-First Search"),(0,l.kt)("h3",{id:"inputs-712"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-712"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-712"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-712"},"Further Readings"),(0,l.kt)("h2",{id:"running-total-for-different-genders"},"Running Total for Different Genders"),(0,l.kt)("span",{class:"tag-is-success"},"Database"),(0,l.kt)("h3",{id:"inputs-713"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-713"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-713"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-713"},"Further Readings"),(0,l.kt)("h2",{id:"xor-queries-of-a-subarray"},"XOR Queries of a Subarray"),(0,l.kt)("span",{class:"tag-is-success"},"Array"),(0,l.kt)("span",{class:"tag-is-success"},"Bit Manipulation"),(0,l.kt)("span",{class:"tag-is-success"},"Prefix Sum"),(0,l.kt)("h3",{id:"inputs-714"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-714"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-714"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-714"},"Further Readings"),(0,l.kt)("h2",{id:"get-watched-videos-by-your-friends"},"Get Watched Videos by Your Friends"),(0,l.kt)("span",{class:"tag-is-success"},"Array"),(0,l.kt)("span",{class:"tag-is-success"},"Hash Table"),(0,l.kt)("span",{class:"tag-is-success"},"Breadth-First Search"),(0,l.kt)("span",{class:"tag-is-success"},"Sorting"),(0,l.kt)("h3",{id:"inputs-715"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-715"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-715"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-715"},"Further Readings"),(0,l.kt)("h2",{id:"matrix-block-sum"},"Matrix Block Sum"),(0,l.kt)("span",{class:"tag-is-success"},"Array"),(0,l.kt)("span",{class:"tag-is-success"},"Matrix"),(0,l.kt)("span",{class:"tag-is-success"},"Prefix Sum"),(0,l.kt)("h3",{id:"inputs-716"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-716"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-716"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-716"},"Further Readings"),(0,l.kt)("h2",{id:"sum-of-nodes-with-even-valued-grandparent"},"Sum of Nodes with Even-Valued Grandparent"),(0,l.kt)("span",{class:"tag-is-success"},"Tree"),(0,l.kt)("span",{class:"tag-is-success"},"Depth-First Search"),(0,l.kt)("span",{class:"tag-is-success"},"Breadth-First Search"),(0,l.kt)("span",{class:"tag-is-success"},"Binary Tree"),(0,l.kt)("h3",{id:"inputs-717"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-717"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-717"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-717"},"Further Readings"),(0,l.kt)("h2",{id:"minimum-flips-to-make-a-or-b-equal-to-c"},"Minimum Flips to Make a OR b Equal to c"),(0,l.kt)("span",{class:"tag-is-success"},"Bit Manipulation"),(0,l.kt)("h3",{id:"inputs-718"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-718"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-718"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-718"},"Further Readings"),(0,l.kt)("h2",{id:"number-of-operations-to-make-network-connected"},"Number of Operations to Make Network Connected"),(0,l.kt)("span",{class:"tag-is-success"},"Depth-First Search"),(0,l.kt)("span",{class:"tag-is-success"},"Breadth-First Search"),(0,l.kt)("span",{class:"tag-is-success"},"Union Find"),(0,l.kt)("span",{class:"tag-is-success"},"Graph"),(0,l.kt)("h3",{id:"inputs-719"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-719"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-719"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-719"},"Further Readings"),(0,l.kt)("h2",{id:"restaurant-growth"},"Restaurant Growth"),(0,l.kt)("span",{class:"tag-is-success"},"Database"),(0,l.kt)("h3",{id:"inputs-720"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-720"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-720"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-720"},"Further Readings"),(0,l.kt)("h2",{id:"print-words-vertically"},"Print Words Vertically"),(0,l.kt)("span",{class:"tag-is-success"},"Array"),(0,l.kt)("span",{class:"tag-is-success"},"String"),(0,l.kt)("span",{class:"tag-is-success"},"Simulation"),(0,l.kt)("h3",{id:"inputs-721"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-721"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-721"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-721"},"Further Readings"),(0,l.kt)("h2",{id:"delete-leaves-with-a-given-value"},"Delete Leaves With a Given Value"),(0,l.kt)("span",{class:"tag-is-success"},"Tree"),(0,l.kt)("span",{class:"tag-is-success"},"Depth-First Search"),(0,l.kt)("span",{class:"tag-is-success"},"Binary Tree"),(0,l.kt)("h3",{id:"inputs-722"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-722"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-722"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-722"},"Further Readings"),(0,l.kt)("h2",{id:"break-a-palindrome"},"Break a Palindrome"),(0,l.kt)("span",{class:"tag-is-success"},"String"),(0,l.kt)("span",{class:"tag-is-success"},"Greedy"),(0,l.kt)("h3",{id:"inputs-723"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-723"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-723"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-723"},"Further Readings"),(0,l.kt)("h2",{id:"sort-the-matrix-diagonally"},"Sort the Matrix Diagonally"),(0,l.kt)("span",{class:"tag-is-success"},"Array"),(0,l.kt)("span",{class:"tag-is-success"},"Sorting"),(0,l.kt)("span",{class:"tag-is-success"},"Matrix"),(0,l.kt)("h3",{id:"inputs-724"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-724"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-724"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-724"},"Further Readings"),(0,l.kt)("h2",{id:"filter-restaurants-by-vegan-friendly-price-and-distance"},"Filter Restaurants by Vegan-Friendly, Price and Distance"),(0,l.kt)("span",{class:"tag-is-success"},"Array"),(0,l.kt)("span",{class:"tag-is-success"},"Sorting"),(0,l.kt)("h3",{id:"inputs-725"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-725"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-725"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-725"},"Further Readings"),(0,l.kt)("h2",{id:"find-the-city-with-the-smallest-number-of-neighbors-at-a-threshold-distance"},"Find the City With the Smallest Number of Neighbors at a Threshold Distance"),(0,l.kt)("span",{class:"tag-is-success"},"Dynamic Programming"),(0,l.kt)("span",{class:"tag-is-success"},"Graph"),(0,l.kt)("span",{class:"tag-is-success"},"Shortest Path"),(0,l.kt)("h3",{id:"inputs-726"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-726"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-726"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-726"},"Further Readings"),(0,l.kt)("h2",{id:"reduce-array-size-to-the-half"},"Reduce Array Size to The Half"),(0,l.kt)("span",{class:"tag-is-success"},"Array"),(0,l.kt)("span",{class:"tag-is-success"},"Hash Table"),(0,l.kt)("span",{class:"tag-is-success"},"Greedy"),(0,l.kt)("span",{class:"tag-is-success"},"Sorting"),(0,l.kt)("span",{class:"tag-is-success"},"Heap (Priority Queue)"),(0,l.kt)("h3",{id:"inputs-727"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-727"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-727"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-727"},"Further Readings"),(0,l.kt)("h2",{id:"maximum-product-of-splitted-binary-tree"},"Maximum Product of Splitted Binary Tree"),(0,l.kt)("span",{class:"tag-is-success"},"Tree"),(0,l.kt)("span",{class:"tag-is-success"},"Depth-First Search"),(0,l.kt)("span",{class:"tag-is-success"},"Binary Tree"),(0,l.kt)("h3",{id:"inputs-728"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-728"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-728"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-728"},"Further Readings"),(0,l.kt)("h2",{id:"movie-rating"},"Movie Rating"),(0,l.kt)("span",{class:"tag-is-success"},"Database"),(0,l.kt)("h3",{id:"inputs-729"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-729"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-729"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-729"},"Further Readings"),(0,l.kt)("h2",{id:"number-of-sub-arrays-of-size-k-and-average-greater-than-or-equal-to-threshold"},"Number of Sub-arrays of Size K and Average Greater than or Equal to Threshold"),(0,l.kt)("span",{class:"tag-is-success"},"Array"),(0,l.kt)("span",{class:"tag-is-success"},"Sliding Window"),(0,l.kt)("h3",{id:"inputs-730"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-730"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-730"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-730"},"Further Readings"),(0,l.kt)("h2",{id:"angle-between-hands-of-a-clock"},"Angle Between Hands of a Clock"),(0,l.kt)("span",{class:"tag-is-success"},"Math"),(0,l.kt)("h3",{id:"inputs-731"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-731"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-731"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-731"},"Further Readings"),(0,l.kt)("h2",{id:"minimum-number-of-steps-to-make-two-strings-anagram"},"Minimum Number of Steps to Make Two Strings Anagram"),(0,l.kt)("span",{class:"tag-is-success"},"Hash Table"),(0,l.kt)("span",{class:"tag-is-success"},"String"),(0,l.kt)("span",{class:"tag-is-success"},"Counting"),(0,l.kt)("h3",{id:"inputs-732"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-732"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-732"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-732"},"Further Readings"),(0,l.kt)("h2",{id:"tweet-counts-per-frequency"},"Tweet Counts Per Frequency"),(0,l.kt)("span",{class:"tag-is-success"},"Hash Table"),(0,l.kt)("span",{class:"tag-is-success"},"Binary Search"),(0,l.kt)("span",{class:"tag-is-success"},"Design"),(0,l.kt)("span",{class:"tag-is-success"},"Sorting"),(0,l.kt)("span",{class:"tag-is-success"},"Ordered Set"),(0,l.kt)("h3",{id:"inputs-733"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-733"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-733"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-733"},"Further Readings"),(0,l.kt)("h2",{id:"product-of-the-last-k-numbers"},"Product of the Last K Numbers"),(0,l.kt)("span",{class:"tag-is-success"},"Array"),(0,l.kt)("span",{class:"tag-is-success"},"Math"),(0,l.kt)("span",{class:"tag-is-success"},"Design"),(0,l.kt)("span",{class:"tag-is-success"},"Queue"),(0,l.kt)("span",{class:"tag-is-success"},"Data Stream"),(0,l.kt)("h3",{id:"inputs-734"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-734"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-734"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-734"},"Further Readings"),(0,l.kt)("h2",{id:"maximum-number-of-events-that-can-be-attended"},"Maximum Number of Events That Can Be Attended"),(0,l.kt)("span",{class:"tag-is-success"},"Array"),(0,l.kt)("span",{class:"tag-is-success"},"Greedy"),(0,l.kt)("span",{class:"tag-is-success"},"Heap (Priority Queue)"),(0,l.kt)("h3",{id:"inputs-735"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-735"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-735"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-735"},"Further Readings"),(0,l.kt)("h2",{id:"activity-participants"},"Activity Participants"),(0,l.kt)("span",{class:"tag-is-success"},"Database"),(0,l.kt)("h3",{id:"inputs-736"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-736"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-736"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-736"},"Further Readings"),(0,l.kt)("h2",{id:"apply-discount-every-n-orders"},"Apply Discount Every n Orders"),(0,l.kt)("span",{class:"tag-is-success"},"Array"),(0,l.kt)("span",{class:"tag-is-success"},"Hash Table"),(0,l.kt)("span",{class:"tag-is-success"},"Design"),(0,l.kt)("h3",{id:"inputs-737"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-737"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-737"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-737"},"Further Readings"),(0,l.kt)("h2",{id:"number-of-substrings-containing-all-three-characters"},"Number of Substrings Containing All Three Characters"),(0,l.kt)("span",{class:"tag-is-success"},"Hash Table"),(0,l.kt)("span",{class:"tag-is-success"},"String"),(0,l.kt)("span",{class:"tag-is-success"},"Sliding Window"),(0,l.kt)("h3",{id:"inputs-738"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-738"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-738"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-738"},"Further Readings"),(0,l.kt)("h2",{id:"validate-binary-tree-nodes"},"Validate Binary Tree Nodes"),(0,l.kt)("span",{class:"tag-is-success"},"Tree"),(0,l.kt)("span",{class:"tag-is-success"},"Depth-First Search"),(0,l.kt)("span",{class:"tag-is-success"},"Breadth-First Search"),(0,l.kt)("span",{class:"tag-is-success"},"Union Find"),(0,l.kt)("span",{class:"tag-is-success"},"Graph"),(0,l.kt)("span",{class:"tag-is-success"},"Binary Tree"),(0,l.kt)("h3",{id:"inputs-739"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-739"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-739"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-739"},"Further Readings"),(0,l.kt)("h2",{id:"closest-divisors"},"Closest Divisors"),(0,l.kt)("span",{class:"tag-is-success"},"Math"),(0,l.kt)("h3",{id:"inputs-740"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-740"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-740"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-740"},"Further Readings"),(0,l.kt)("h2",{id:"number-of-trusted-contacts-of-a-customer"},"Number of Trusted Contacts of a Customer"),(0,l.kt)("span",{class:"tag-is-success"},"Database"),(0,l.kt)("h3",{id:"inputs-741"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-741"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-741"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-741"},"Further Readings"),(0,l.kt)("h2",{id:"rank-teams-by-votes"},"Rank Teams by Votes"),(0,l.kt)("span",{class:"tag-is-success"},"Array"),(0,l.kt)("span",{class:"tag-is-success"},"Hash Table"),(0,l.kt)("span",{class:"tag-is-success"},"String"),(0,l.kt)("span",{class:"tag-is-success"},"Sorting"),(0,l.kt)("span",{class:"tag-is-success"},"Counting"),(0,l.kt)("h3",{id:"inputs-742"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-742"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-742"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-742"},"Further Readings"),(0,l.kt)("h2",{id:"linked-list-in-binary-tree"},"Linked List in Binary Tree"),(0,l.kt)("span",{class:"tag-is-success"},"Linked List"),(0,l.kt)("span",{class:"tag-is-success"},"Tree"),(0,l.kt)("span",{class:"tag-is-success"},"Depth-First Search"),(0,l.kt)("span",{class:"tag-is-success"},"Breadth-First Search"),(0,l.kt)("span",{class:"tag-is-success"},"Binary Tree"),(0,l.kt)("h3",{id:"inputs-743"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-743"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-743"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-743"},"Further Readings"),(0,l.kt)("h2",{id:"find-the-longest-substring-containing-vowels-in-even-counts"},"Find the Longest Substring Containing Vowels in Even Counts"),(0,l.kt)("span",{class:"tag-is-success"},"Hash Table"),(0,l.kt)("span",{class:"tag-is-success"},"String"),(0,l.kt)("span",{class:"tag-is-success"},"Bit Manipulation"),(0,l.kt)("span",{class:"tag-is-success"},"Prefix Sum"),(0,l.kt)("h3",{id:"inputs-744"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-744"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-744"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-744"},"Further Readings"),(0,l.kt)("h2",{id:"longest-zigzag-path-in-a-binary-tree"},"Longest ZigZag Path in a Binary Tree"),(0,l.kt)("span",{class:"tag-is-success"},"Dynamic Programming"),(0,l.kt)("span",{class:"tag-is-success"},"Tree"),(0,l.kt)("span",{class:"tag-is-success"},"Depth-First Search"),(0,l.kt)("span",{class:"tag-is-success"},"Binary Tree"),(0,l.kt)("h3",{id:"inputs-745"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-745"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-745"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-745"},"Further Readings"),(0,l.kt)("h2",{id:"number-of-times-binary-string-is-prefix-aligned"},"Number of Times Binary String Is Prefix-Aligned"),(0,l.kt)("span",{class:"tag-is-success"},"Array"),(0,l.kt)("h3",{id:"inputs-746"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-746"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-746"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-746"},"Further Readings"),(0,l.kt)("h2",{id:"time-needed-to-inform-all-employees"},"Time Needed to Inform All Employees"),(0,l.kt)("span",{class:"tag-is-success"},"Tree"),(0,l.kt)("span",{class:"tag-is-success"},"Depth-First Search"),(0,l.kt)("span",{class:"tag-is-success"},"Breadth-First Search"),(0,l.kt)("h3",{id:"inputs-747"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-747"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-747"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-747"},"Further Readings"),(0,l.kt)("h2",{id:"design-a-stack-with-increment-operation"},"Design a Stack With Increment Operation"),(0,l.kt)("span",{class:"tag-is-success"},"Array"),(0,l.kt)("span",{class:"tag-is-success"},"Stack"),(0,l.kt)("span",{class:"tag-is-success"},"Design"),(0,l.kt)("h3",{id:"inputs-748"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-748"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-748"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-748"},"Further Readings"),(0,l.kt)("h2",{id:"balance-a-binary-search-tree"},"Balance a Binary Search Tree"),(0,l.kt)("span",{class:"tag-is-success"},"Divide and Conquer"),(0,l.kt)("span",{class:"tag-is-success"},"Greedy"),(0,l.kt)("span",{class:"tag-is-success"},"Tree"),(0,l.kt)("span",{class:"tag-is-success"},"Depth-First Search"),(0,l.kt)("span",{class:"tag-is-success"},"Binary Search Tree"),(0,l.kt)("span",{class:"tag-is-success"},"Binary Tree"),(0,l.kt)("h3",{id:"inputs-749"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-749"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-749"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-749"},"Further Readings"),(0,l.kt)("h2",{id:"cinema-seat-allocation"},"Cinema Seat Allocation"),(0,l.kt)("span",{class:"tag-is-success"},"Array"),(0,l.kt)("span",{class:"tag-is-success"},"Hash Table"),(0,l.kt)("span",{class:"tag-is-success"},"Greedy"),(0,l.kt)("span",{class:"tag-is-success"},"Bit Manipulation"),(0,l.kt)("h3",{id:"inputs-750"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-750"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-750"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-750"},"Further Readings"),(0,l.kt)("h2",{id:"sort-integers-by-the-power-value"},"Sort Integers by The Power Value"),(0,l.kt)("span",{class:"tag-is-success"},"Dynamic Programming"),(0,l.kt)("span",{class:"tag-is-success"},"Memoization"),(0,l.kt)("span",{class:"tag-is-success"},"Sorting"),(0,l.kt)("h3",{id:"inputs-751"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-751"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-751"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-751"},"Further Readings"),(0,l.kt)("h2",{id:"four-divisors"},"Four Divisors"),(0,l.kt)("span",{class:"tag-is-success"},"Array"),(0,l.kt)("span",{class:"tag-is-success"},"Math"),(0,l.kt)("h3",{id:"inputs-752"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-752"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-752"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-752"},"Further Readings"),(0,l.kt)("h2",{id:"check-if-there-is-a-valid-path-in-a-grid"},"Check if There is a Valid Path in a Grid"),(0,l.kt)("span",{class:"tag-is-success"},"Array"),(0,l.kt)("span",{class:"tag-is-success"},"Depth-First Search"),(0,l.kt)("span",{class:"tag-is-success"},"Breadth-First Search"),(0,l.kt)("span",{class:"tag-is-success"},"Union Find"),(0,l.kt)("span",{class:"tag-is-success"},"Matrix"),(0,l.kt)("h3",{id:"inputs-753"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-753"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-753"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-753"},"Further Readings"),(0,l.kt)("h2",{id:"capital-gainloss"},"Capital Gain/Loss"),(0,l.kt)("span",{class:"tag-is-success"},"Database"),(0,l.kt)("h3",{id:"inputs-754"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-754"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-754"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-754"},"Further Readings"),(0,l.kt)("h2",{id:"count-number-of-teams"},"Count Number of Teams"),(0,l.kt)("span",{class:"tag-is-success"},"Array"),(0,l.kt)("span",{class:"tag-is-success"},"Dynamic Programming"),(0,l.kt)("span",{class:"tag-is-success"},"Binary Indexed Tree"),(0,l.kt)("h3",{id:"inputs-755"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-755"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-755"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-755"},"Further Readings"),(0,l.kt)("h2",{id:"design-underground-system"},"Design Underground System"),(0,l.kt)("span",{class:"tag-is-success"},"Hash Table"),(0,l.kt)("span",{class:"tag-is-success"},"String"),(0,l.kt)("span",{class:"tag-is-success"},"Design"),(0,l.kt)("h3",{id:"inputs-756"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-756"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-756"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-756"},"Further Readings"),(0,l.kt)("h2",{id:"customers-who-bought-products-a-and-b-but-not-c"},"Customers Who Bought Products A and B but Not C"),(0,l.kt)("span",{class:"tag-is-success"},"Database"),(0,l.kt)("h3",{id:"inputs-757"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-757"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-757"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-757"},"Further Readings"),(0,l.kt)("h2",{id:"construct-k-palindrome-strings"},"Construct K Palindrome Strings"),(0,l.kt)("span",{class:"tag-is-success"},"Hash Table"),(0,l.kt)("span",{class:"tag-is-success"},"String"),(0,l.kt)("span",{class:"tag-is-success"},"Greedy"),(0,l.kt)("span",{class:"tag-is-success"},"Counting"),(0,l.kt)("h3",{id:"inputs-758"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-758"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-758"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-758"},"Further Readings"),(0,l.kt)("h2",{id:"circle-and-rectangle-overlapping"},"Circle and Rectangle Overlapping"),(0,l.kt)("span",{class:"tag-is-success"},"Math"),(0,l.kt)("span",{class:"tag-is-success"},"Geometry"),(0,l.kt)("h3",{id:"inputs-759"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-759"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-759"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-759"},"Further Readings"),(0,l.kt)("h2",{id:"number-of-steps-to-reduce-a-number-in-binary-representation-to-one"},"Number of Steps to Reduce a Number in Binary Representation to One"),(0,l.kt)("span",{class:"tag-is-success"},"String"),(0,l.kt)("span",{class:"tag-is-success"},"Bit Manipulation"),(0,l.kt)("h3",{id:"inputs-760"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-760"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-760"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-760"},"Further Readings"),(0,l.kt)("h2",{id:"longest-happy-string"},"Longest Happy String"),(0,l.kt)("span",{class:"tag-is-success"},"String"),(0,l.kt)("span",{class:"tag-is-success"},"Greedy"),(0,l.kt)("span",{class:"tag-is-success"},"Heap (Priority Queue)"),(0,l.kt)("h3",{id:"inputs-761"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-761"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-761"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-761"},"Further Readings"),(0,l.kt)("h2",{id:"queries-on-a-permutation-with-key"},"Queries on a Permutation With Key"),(0,l.kt)("span",{class:"tag-is-success"},"Array"),(0,l.kt)("span",{class:"tag-is-success"},"Binary Indexed Tree"),(0,l.kt)("span",{class:"tag-is-success"},"Simulation"),(0,l.kt)("h3",{id:"inputs-762"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-762"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-762"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-762"},"Further Readings"),(0,l.kt)("h2",{id:"html-entity-parser"},"HTML Entity Parser"),(0,l.kt)("span",{class:"tag-is-success"},"Hash Table"),(0,l.kt)("span",{class:"tag-is-success"},"String"),(0,l.kt)("h3",{id:"inputs-763"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-763"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-763"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-763"},"Further Readings"),(0,l.kt)("h2",{id:"find-the-minimum-number-of-fibonacci-numbers-whose-sum-is-k"},"Find the Minimum Number of Fibonacci Numbers Whose Sum Is K"),(0,l.kt)("span",{class:"tag-is-success"},"Greedy"),(0,l.kt)("h3",{id:"inputs-764"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-764"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-764"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-764"},"Further Readings"),(0,l.kt)("h2",{id:"the-k-th-lexicographical-string-of-all-happy-strings-of-length-n"},"The k-th Lexicographical String of All Happy Strings of Length n"),(0,l.kt)("span",{class:"tag-is-success"},"String"),(0,l.kt)("span",{class:"tag-is-success"},"Backtracking"),(0,l.kt)("h3",{id:"inputs-765"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-765"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-765"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-765"},"Further Readings"),(0,l.kt)("h2",{id:"display-table-of-food-orders-in-a-restaurant"},"Display Table of Food Orders in a Restaurant"),(0,l.kt)("span",{class:"tag-is-success"},"Array"),(0,l.kt)("span",{class:"tag-is-success"},"Hash Table"),(0,l.kt)("span",{class:"tag-is-success"},"String"),(0,l.kt)("span",{class:"tag-is-success"},"Sorting"),(0,l.kt)("span",{class:"tag-is-success"},"Ordered Set"),(0,l.kt)("h3",{id:"inputs-766"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-766"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-766"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-766"},"Further Readings"),(0,l.kt)("h2",{id:"minimum-number-of-frogs-croaking"},"Minimum Number of Frogs Croaking"),(0,l.kt)("span",{class:"tag-is-success"},"String"),(0,l.kt)("span",{class:"tag-is-success"},"Counting"),(0,l.kt)("h3",{id:"inputs-767"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-767"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-767"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-767"},"Further Readings"),(0,l.kt)("h2",{id:"maximum-points-you-can-obtain-from-cards"},"Maximum Points You Can Obtain from Cards"),(0,l.kt)("span",{class:"tag-is-success"},"Array"),(0,l.kt)("span",{class:"tag-is-success"},"Sliding Window"),(0,l.kt)("span",{class:"tag-is-success"},"Prefix Sum"),(0,l.kt)("h3",{id:"inputs-768"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-768"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-768"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-768"},"Further Readings"),(0,l.kt)("h2",{id:"diagonal-traverse-ii"},"Diagonal Traverse II"),(0,l.kt)("span",{class:"tag-is-success"},"Array"),(0,l.kt)("span",{class:"tag-is-success"},"Sorting"),(0,l.kt)("span",{class:"tag-is-success"},"Heap (Priority Queue)"),(0,l.kt)("h3",{id:"inputs-769"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-769"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-769"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-769"},"Further Readings"),(0,l.kt)("h2",{id:"leftmost-column-with-at-least-a-one"},"Leftmost Column with at Least a One"),(0,l.kt)("span",{class:"tag-is-success"},"Array"),(0,l.kt)("span",{class:"tag-is-success"},"Binary Search"),(0,l.kt)("span",{class:"tag-is-success"},"Matrix"),(0,l.kt)("span",{class:"tag-is-success"},"Interactive"),(0,l.kt)("h3",{id:"inputs-770"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-770"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-770"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-770"},"Further Readings"),(0,l.kt)("h2",{id:"first-unique-number"},"First Unique Number"),(0,l.kt)("span",{class:"tag-is-success"},"Array"),(0,l.kt)("span",{class:"tag-is-success"},"Hash Table"),(0,l.kt)("span",{class:"tag-is-success"},"Design"),(0,l.kt)("span",{class:"tag-is-success"},"Queue"),(0,l.kt)("span",{class:"tag-is-success"},"Data Stream"),(0,l.kt)("h3",{id:"inputs-771"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-771"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-771"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-771"},"Further Readings"),(0,l.kt)("h2",{id:"check-if-a-string-is-a-valid-sequence-from-root-to-leaves-path-in-a-binary-tree"},"Check If a String Is a Valid Sequence from Root to Leaves Path in a Binary Tree"),(0,l.kt)("span",{class:"tag-is-success"},"Tree"),(0,l.kt)("span",{class:"tag-is-success"},"Depth-First Search"),(0,l.kt)("span",{class:"tag-is-success"},"Breadth-First Search"),(0,l.kt)("span",{class:"tag-is-success"},"Binary Tree"),(0,l.kt)("h3",{id:"inputs-772"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-772"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-772"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-772"},"Further Readings"),(0,l.kt)("h2",{id:"max-difference-you-can-get-from-changing-an-integer"},"Max Difference You Can Get From Changing an Integer"),(0,l.kt)("span",{class:"tag-is-success"},"Math"),(0,l.kt)("span",{class:"tag-is-success"},"Greedy"),(0,l.kt)("h3",{id:"inputs-773"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-773"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-773"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-773"},"Further Readings"),(0,l.kt)("h2",{id:"check-if-a-string-can-break-another-string"},"Check If a String Can Break Another String"),(0,l.kt)("span",{class:"tag-is-success"},"String"),(0,l.kt)("span",{class:"tag-is-success"},"Greedy"),(0,l.kt)("span",{class:"tag-is-success"},"Sorting"),(0,l.kt)("h3",{id:"inputs-774"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-774"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-774"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-774"},"Further Readings"),(0,l.kt)("h2",{id:"longest-continuous-subarray-with-absolute-diff-less-than-or-equal-to-limit"},"Longest Continuous Subarray With Absolute Diff Less Than or Equal to Limit"),(0,l.kt)("span",{class:"tag-is-success"},"Array"),(0,l.kt)("span",{class:"tag-is-success"},"Queue"),(0,l.kt)("span",{class:"tag-is-success"},"Sliding Window"),(0,l.kt)("span",{class:"tag-is-success"},"Heap (Priority Queue)"),(0,l.kt)("span",{class:"tag-is-success"},"Ordered Set"),(0,l.kt)("span",{class:"tag-is-success"},"Monotonic Queue"),(0,l.kt)("h3",{id:"inputs-775"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-775"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-775"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-775"},"Further Readings"),(0,l.kt)("h2",{id:"evaluate-boolean-expression"},"Evaluate Boolean Expression"),(0,l.kt)("span",{class:"tag-is-success"},"Database"),(0,l.kt)("h3",{id:"inputs-776"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-776"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-776"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-776"},"Further Readings"),(0,l.kt)("h2",{id:"count-triplets-that-can-form-two-arrays-of-equal-xor"},"Count Triplets That Can Form Two Arrays of Equal XOR"),(0,l.kt)("span",{class:"tag-is-success"},"Array"),(0,l.kt)("span",{class:"tag-is-success"},"Hash Table"),(0,l.kt)("span",{class:"tag-is-success"},"Math"),(0,l.kt)("span",{class:"tag-is-success"},"Bit Manipulation"),(0,l.kt)("span",{class:"tag-is-success"},"Prefix Sum"),(0,l.kt)("h3",{id:"inputs-777"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-777"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-777"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-777"},"Further Readings"),(0,l.kt)("h2",{id:"minimum-time-to-collect-all-apples-in-a-tree"},"Minimum Time to Collect All Apples in a Tree"),(0,l.kt)("span",{class:"tag-is-success"},"Hash Table"),(0,l.kt)("span",{class:"tag-is-success"},"Tree"),(0,l.kt)("span",{class:"tag-is-success"},"Depth-First Search"),(0,l.kt)("span",{class:"tag-is-success"},"Breadth-First Search"),(0,l.kt)("h3",{id:"inputs-778"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-778"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-778"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-778"},"Further Readings"),(0,l.kt)("h2",{id:"apples--oranges"},"Apples & Oranges"),(0,l.kt)("span",{class:"tag-is-success"},"Database"),(0,l.kt)("h3",{id:"inputs-779"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-779"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-779"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-779"},"Further Readings"),(0,l.kt)("h2",{id:"simplified-fractions"},"Simplified Fractions"),(0,l.kt)("span",{class:"tag-is-success"},"Math"),(0,l.kt)("span",{class:"tag-is-success"},"String"),(0,l.kt)("span",{class:"tag-is-success"},"Number Theory"),(0,l.kt)("h3",{id:"inputs-780"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-780"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-780"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-780"},"Further Readings"),(0,l.kt)("h2",{id:"count-good-nodes-in-binary-tree"},"Count Good Nodes in Binary Tree"),(0,l.kt)("span",{class:"tag-is-success"},"Tree"),(0,l.kt)("span",{class:"tag-is-success"},"Depth-First Search"),(0,l.kt)("span",{class:"tag-is-success"},"Breadth-First Search"),(0,l.kt)("span",{class:"tag-is-success"},"Binary Tree"),(0,l.kt)("h3",{id:"inputs-781"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-781"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-781"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-781"},"Further Readings"),(0,l.kt)("h2",{id:"rearrange-words-in-a-sentence"},"Rearrange Words in a Sentence"),(0,l.kt)("span",{class:"tag-is-success"},"String"),(0,l.kt)("span",{class:"tag-is-success"},"Sorting"),(0,l.kt)("h3",{id:"inputs-782"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-782"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-782"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-782"},"Further Readings"),(0,l.kt)("h2",{id:"people-whose-list-of-favorite-companies-is-not-a-subset-of-another-list"},"People Whose List of Favorite Companies Is Not a Subset of Another List"),(0,l.kt)("span",{class:"tag-is-success"},"Array"),(0,l.kt)("span",{class:"tag-is-success"},"Hash Table"),(0,l.kt)("span",{class:"tag-is-success"},"String"),(0,l.kt)("h3",{id:"inputs-783"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-783"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-783"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-783"},"Further Readings"),(0,l.kt)("h2",{id:"active-users"},"Active Users"),(0,l.kt)("span",{class:"tag-is-success"},"Database"),(0,l.kt)("h3",{id:"inputs-784"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-784"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-784"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-784"},"Further Readings"),(0,l.kt)("h2",{id:"maximum-number-of-vowels-in-a-substring-of-given-length"},"Maximum Number of Vowels in a Substring of Given Length"),(0,l.kt)("span",{class:"tag-is-success"},"String"),(0,l.kt)("span",{class:"tag-is-success"},"Sliding Window"),(0,l.kt)("h3",{id:"inputs-785"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-785"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-785"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-785"},"Further Readings"),(0,l.kt)("h2",{id:"pseudo-palindromic-paths-in-a-binary-tree"},"Pseudo-Palindromic Paths in a Binary Tree"),(0,l.kt)("span",{class:"tag-is-success"},"Bit Manipulation"),(0,l.kt)("span",{class:"tag-is-success"},"Tree"),(0,l.kt)("span",{class:"tag-is-success"},"Depth-First Search"),(0,l.kt)("span",{class:"tag-is-success"},"Breadth-First Search"),(0,l.kt)("span",{class:"tag-is-success"},"Binary Tree"),(0,l.kt)("h3",{id:"inputs-786"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-786"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-786"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-786"},"Further Readings"),(0,l.kt)("h2",{id:"rectangles-area"},"Rectangles Area"),(0,l.kt)("span",{class:"tag-is-success"},"Database"),(0,l.kt)("h3",{id:"inputs-787"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-787"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-787"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-787"},"Further Readings"),(0,l.kt)("h2",{id:"check-if-a-string-contains-all-binary-codes-of-size-k"},"Check If a String Contains All Binary Codes of Size K"),(0,l.kt)("span",{class:"tag-is-success"},"Hash Table"),(0,l.kt)("span",{class:"tag-is-success"},"String"),(0,l.kt)("span",{class:"tag-is-success"},"Bit Manipulation"),(0,l.kt)("span",{class:"tag-is-success"},"Rolling Hash"),(0,l.kt)("span",{class:"tag-is-success"},"Hash Function"),(0,l.kt)("h3",{id:"inputs-788"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-788"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-788"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-788"},"Further Readings"),(0,l.kt)("h2",{id:"course-schedule-iv"},"Course Schedule IV"),(0,l.kt)("span",{class:"tag-is-success"},"Depth-First Search"),(0,l.kt)("span",{class:"tag-is-success"},"Breadth-First Search"),(0,l.kt)("span",{class:"tag-is-success"},"Graph"),(0,l.kt)("span",{class:"tag-is-success"},"Topological Sort"),(0,l.kt)("h3",{id:"inputs-789"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-789"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-789"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-789"},"Further Readings"),(0,l.kt)("h2",{id:"maximum-area-of-a-piece-of-cake-after-horizontal-and-vertical-cuts"},"Maximum Area of a Piece of Cake After Horizontal and Vertical Cuts"),(0,l.kt)("span",{class:"tag-is-success"},"Array"),(0,l.kt)("span",{class:"tag-is-success"},"Greedy"),(0,l.kt)("span",{class:"tag-is-success"},"Sorting"),(0,l.kt)("h3",{id:"inputs-790"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-790"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-790"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-790"},"Further Readings"),(0,l.kt)("h2",{id:"reorder-routes-to-make-all-paths-lead-to-the-city-zero"},"Reorder Routes to Make All Paths Lead to the City Zero"),(0,l.kt)("span",{class:"tag-is-success"},"Depth-First Search"),(0,l.kt)("span",{class:"tag-is-success"},"Breadth-First Search"),(0,l.kt)("span",{class:"tag-is-success"},"Graph"),(0,l.kt)("h3",{id:"inputs-791"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-791"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-791"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-791"},"Further Readings"),(0,l.kt)("h2",{id:"calculate-salaries"},"Calculate Salaries"),(0,l.kt)("span",{class:"tag-is-success"},"Database"),(0,l.kt)("h3",{id:"inputs-792"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-792"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-792"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-792"},"Further Readings"),(0,l.kt)("h2",{id:"the-k-strongest-values-in-an-array"},"The k Strongest Values in an Array"),(0,l.kt)("span",{class:"tag-is-success"},"Array"),(0,l.kt)("span",{class:"tag-is-success"},"Two Pointers"),(0,l.kt)("span",{class:"tag-is-success"},"Sorting"),(0,l.kt)("h3",{id:"inputs-793"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-793"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-793"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-793"},"Further Readings"),(0,l.kt)("h2",{id:"design-browser-history"},"Design Browser History"),(0,l.kt)("span",{class:"tag-is-success"},"Array"),(0,l.kt)("span",{class:"tag-is-success"},"Linked List"),(0,l.kt)("span",{class:"tag-is-success"},"Stack"),(0,l.kt)("span",{class:"tag-is-success"},"Design"),(0,l.kt)("span",{class:"tag-is-success"},"Doubly-Linked List"),(0,l.kt)("span",{class:"tag-is-success"},"Data Stream"),(0,l.kt)("h3",{id:"inputs-794"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-794"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-794"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-794"},"Further Readings"),(0,l.kt)("h2",{id:"subrectangle-queries"},"Subrectangle Queries"),(0,l.kt)("span",{class:"tag-is-success"},"Array"),(0,l.kt)("span",{class:"tag-is-success"},"Design"),(0,l.kt)("span",{class:"tag-is-success"},"Matrix"),(0,l.kt)("h3",{id:"inputs-795"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-795"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-795"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-795"},"Further Readings"),(0,l.kt)("h2",{id:"find-two-non-overlapping-sub-arrays-each-with-target-sum"},"Find Two Non-overlapping Sub-arrays Each With Target Sum"),(0,l.kt)("span",{class:"tag-is-success"},"Array"),(0,l.kt)("span",{class:"tag-is-success"},"Hash Table"),(0,l.kt)("span",{class:"tag-is-success"},"Binary Search"),(0,l.kt)("span",{class:"tag-is-success"},"Dynamic Programming"),(0,l.kt)("span",{class:"tag-is-success"},"Sliding Window"),(0,l.kt)("h3",{id:"inputs-796"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-796"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-796"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-796"},"Further Readings"),(0,l.kt)("h2",{id:"least-number-of-unique-integers-after-k-removals"},"Least Number of Unique Integers after K Removals"),(0,l.kt)("span",{class:"tag-is-success"},"Array"),(0,l.kt)("span",{class:"tag-is-success"},"Hash Table"),(0,l.kt)("span",{class:"tag-is-success"},"Greedy"),(0,l.kt)("span",{class:"tag-is-success"},"Sorting"),(0,l.kt)("span",{class:"tag-is-success"},"Counting"),(0,l.kt)("h3",{id:"inputs-797"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-797"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-797"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-797"},"Further Readings"),(0,l.kt)("h2",{id:"minimum-number-of-days-to-make-m-bouquets"},"Minimum Number of Days to Make m Bouquets"),(0,l.kt)("span",{class:"tag-is-success"},"Array"),(0,l.kt)("span",{class:"tag-is-success"},"Binary Search"),(0,l.kt)("h3",{id:"inputs-798"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-798"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-798"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-798"},"Further Readings"),(0,l.kt)("h2",{id:"clone-binary-tree-with-random-pointer"},"Clone Binary Tree With Random Pointer"),(0,l.kt)("span",{class:"tag-is-success"},"Hash Table"),(0,l.kt)("span",{class:"tag-is-success"},"Tree"),(0,l.kt)("span",{class:"tag-is-success"},"Depth-First Search"),(0,l.kt)("span",{class:"tag-is-success"},"Breadth-First Search"),(0,l.kt)("span",{class:"tag-is-success"},"Binary Tree"),(0,l.kt)("h3",{id:"inputs-799"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-799"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-799"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-799"},"Further Readings"),(0,l.kt)("h2",{id:"making-file-names-unique"},"Making File Names Unique"),(0,l.kt)("span",{class:"tag-is-success"},"Array"),(0,l.kt)("span",{class:"tag-is-success"},"Hash Table"),(0,l.kt)("span",{class:"tag-is-success"},"String"),(0,l.kt)("h3",{id:"inputs-800"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-800"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-800"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-800"},"Further Readings"),(0,l.kt)("h2",{id:"avoid-flood-in-the-city"},"Avoid Flood in The City"),(0,l.kt)("span",{class:"tag-is-success"},"Array"),(0,l.kt)("span",{class:"tag-is-success"},"Hash Table"),(0,l.kt)("span",{class:"tag-is-success"},"Binary Search"),(0,l.kt)("span",{class:"tag-is-success"},"Greedy"),(0,l.kt)("span",{class:"tag-is-success"},"Heap (Priority Queue)"),(0,l.kt)("h3",{id:"inputs-801"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-801"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-801"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-801"},"Further Readings"),(0,l.kt)("h2",{id:"clone-n-ary-tree"},"Clone N-ary Tree"),(0,l.kt)("span",{class:"tag-is-success"},"Hash Table"),(0,l.kt)("span",{class:"tag-is-success"},"Tree"),(0,l.kt)("span",{class:"tag-is-success"},"Depth-First Search"),(0,l.kt)("span",{class:"tag-is-success"},"Breadth-First Search"),(0,l.kt)("h3",{id:"inputs-802"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-802"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-802"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-802"},"Further Readings"),(0,l.kt)("h2",{id:"the-kth-factor-of-n"},"The kth Factor of n"),(0,l.kt)("span",{class:"tag-is-success"},"Math"),(0,l.kt)("h3",{id:"inputs-803"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-803"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-803"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-803"},"Further Readings"),(0,l.kt)("h2",{id:"longest-subarray-of-1s-after-deleting-one-element"},"Longest Subarray of 1's After Deleting One Element"),(0,l.kt)("span",{class:"tag-is-success"},"Math"),(0,l.kt)("span",{class:"tag-is-success"},"Dynamic Programming"),(0,l.kt)("span",{class:"tag-is-success"},"Sliding Window"),(0,l.kt)("h3",{id:"inputs-804"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-804"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-804"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-804"},"Further Readings"),(0,l.kt)("h2",{id:"check-if-array-pairs-are-divisible-by-k"},"Check If Array Pairs Are Divisible by k"),(0,l.kt)("span",{class:"tag-is-success"},"Array"),(0,l.kt)("span",{class:"tag-is-success"},"Hash Table"),(0,l.kt)("span",{class:"tag-is-success"},"Counting"),(0,l.kt)("h3",{id:"inputs-805"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-805"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-805"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-805"},"Further Readings"),(0,l.kt)("h2",{id:"number-of-subsequences-that-satisfy-the-given-sum-condition"},"Number of Subsequences That Satisfy the Given Sum Condition"),(0,l.kt)("span",{class:"tag-is-success"},"Array"),(0,l.kt)("span",{class:"tag-is-success"},"Two Pointers"),(0,l.kt)("span",{class:"tag-is-success"},"Binary Search"),(0,l.kt)("span",{class:"tag-is-success"},"Sorting"),(0,l.kt)("h3",{id:"inputs-806"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-806"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-806"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-806"},"Further Readings"),(0,l.kt)("h2",{id:"design-a-file-sharing-system"},"Design a File Sharing System"),(0,l.kt)("span",{class:"tag-is-success"},"Hash Table"),(0,l.kt)("span",{class:"tag-is-success"},"Design"),(0,l.kt)("span",{class:"tag-is-success"},"Heap (Priority Queue)"),(0,l.kt)("span",{class:"tag-is-success"},"Data Stream"),(0,l.kt)("h3",{id:"inputs-807"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-807"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-807"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-807"},"Further Readings"),(0,l.kt)("h2",{id:"countries-you-can-safely-invest-in"},"Countries You Can Safely Invest In"),(0,l.kt)("span",{class:"tag-is-success"},"Database"),(0,l.kt)("h3",{id:"inputs-808"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-808"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-808"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-808"},"Further Readings"),(0,l.kt)("h2",{id:"last-moment-before-all-ants-fall-out-of-a-plank"},"Last Moment Before All Ants Fall Out of a Plank"),(0,l.kt)("span",{class:"tag-is-success"},"Array"),(0,l.kt)("span",{class:"tag-is-success"},"Brainteaser"),(0,l.kt)("span",{class:"tag-is-success"},"Simulation"),(0,l.kt)("h3",{id:"inputs-809"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-809"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-809"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-809"},"Further Readings"),(0,l.kt)("h2",{id:"count-submatrices-with-all-ones"},"Count Submatrices With All Ones"),(0,l.kt)("span",{class:"tag-is-success"},"Array"),(0,l.kt)("span",{class:"tag-is-success"},"Dynamic Programming"),(0,l.kt)("span",{class:"tag-is-success"},"Stack"),(0,l.kt)("span",{class:"tag-is-success"},"Matrix"),(0,l.kt)("span",{class:"tag-is-success"},"Monotonic Stack"),(0,l.kt)("h3",{id:"inputs-810"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-810"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-810"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-810"},"Further Readings"),(0,l.kt)("h2",{id:"find-root-of-n-ary-tree"},"Find Root of N-Ary Tree"),(0,l.kt)("span",{class:"tag-is-success"},"Hash Table"),(0,l.kt)("span",{class:"tag-is-success"},"Bit Manipulation"),(0,l.kt)("span",{class:"tag-is-success"},"Tree"),(0,l.kt)("span",{class:"tag-is-success"},"Depth-First Search"),(0,l.kt)("h3",{id:"inputs-811"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-811"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-811"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-811"},"Further Readings"),(0,l.kt)("h2",{id:"range-sum-of-sorted-subarray-sums"},"Range Sum of Sorted Subarray Sums"),(0,l.kt)("span",{class:"tag-is-success"},"Array"),(0,l.kt)("span",{class:"tag-is-success"},"Two Pointers"),(0,l.kt)("span",{class:"tag-is-success"},"Binary Search"),(0,l.kt)("span",{class:"tag-is-success"},"Sorting"),(0,l.kt)("h3",{id:"inputs-812"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-812"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-812"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-812"},"Further Readings"),(0,l.kt)("h2",{id:"minimum-difference-between-largest-and-smallest-value-in-three-moves"},"Minimum Difference Between Largest and Smallest Value in Three Moves"),(0,l.kt)("span",{class:"tag-is-success"},"Array"),(0,l.kt)("span",{class:"tag-is-success"},"Greedy"),(0,l.kt)("span",{class:"tag-is-success"},"Sorting"),(0,l.kt)("h3",{id:"inputs-813"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-813"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-813"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-813"},"Further Readings"),(0,l.kt)("h2",{id:"number-of-substrings-with-only-1s"},"Number of Substrings With Only 1s"),(0,l.kt)("span",{class:"tag-is-success"},"Math"),(0,l.kt)("span",{class:"tag-is-success"},"String"),(0,l.kt)("h3",{id:"inputs-814"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-814"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-814"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-814"},"Further Readings"),(0,l.kt)("h2",{id:"path-with-maximum-probability"},"Path with Maximum Probability"),(0,l.kt)("span",{class:"tag-is-success"},"Graph"),(0,l.kt)("span",{class:"tag-is-success"},"Heap (Priority Queue)"),(0,l.kt)("span",{class:"tag-is-success"},"Shortest Path"),(0,l.kt)("h3",{id:"inputs-815"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-815"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-815"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-815"},"Further Readings"),(0,l.kt)("h2",{id:"number-of-nodes-in-the-sub-tree-with-the-same-label"},"Number of Nodes in the Sub-Tree With the Same Label"),(0,l.kt)("span",{class:"tag-is-success"},"Hash Table"),(0,l.kt)("span",{class:"tag-is-success"},"Tree"),(0,l.kt)("span",{class:"tag-is-success"},"Depth-First Search"),(0,l.kt)("span",{class:"tag-is-success"},"Breadth-First Search"),(0,l.kt)("span",{class:"tag-is-success"},"Counting"),(0,l.kt)("h3",{id:"inputs-816"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-816"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-816"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-816"},"Further Readings"),(0,l.kt)("h2",{id:"diameter-of-n-ary-tree"},"Diameter of N-Ary Tree"),(0,l.kt)("span",{class:"tag-is-success"},"Tree"),(0,l.kt)("span",{class:"tag-is-success"},"Depth-First Search"),(0,l.kt)("h3",{id:"inputs-817"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-817"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-817"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-817"},"Further Readings"),(0,l.kt)("h2",{id:"number-of-sub-arrays-with-odd-sum"},"Number of Sub-arrays With Odd Sum"),(0,l.kt)("span",{class:"tag-is-success"},"Array"),(0,l.kt)("span",{class:"tag-is-success"},"Math"),(0,l.kt)("span",{class:"tag-is-success"},"Dynamic Programming"),(0,l.kt)("span",{class:"tag-is-success"},"Prefix Sum"),(0,l.kt)("h3",{id:"inputs-818"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-818"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-818"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-818"},"Further Readings"),(0,l.kt)("h2",{id:"number-of-good-ways-to-split-a-string"},"Number of Good Ways to Split a String"),(0,l.kt)("span",{class:"tag-is-success"},"String"),(0,l.kt)("span",{class:"tag-is-success"},"Dynamic Programming"),(0,l.kt)("span",{class:"tag-is-success"},"Bit Manipulation"),(0,l.kt)("h3",{id:"inputs-819"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-819"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-819"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-819"},"Further Readings"),(0,l.kt)("h2",{id:"minimum-suffix-flips"},"Minimum Suffix Flips"),(0,l.kt)("span",{class:"tag-is-success"},"String"),(0,l.kt)("span",{class:"tag-is-success"},"Greedy"),(0,l.kt)("h3",{id:"inputs-820"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-820"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-820"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-820"},"Further Readings"),(0,l.kt)("h2",{id:"number-of-good-leaf-nodes-pairs"},"Number of Good Leaf Nodes Pairs"),(0,l.kt)("span",{class:"tag-is-success"},"Tree"),(0,l.kt)("span",{class:"tag-is-success"},"Depth-First Search"),(0,l.kt)("span",{class:"tag-is-success"},"Binary Tree"),(0,l.kt)("h3",{id:"inputs-821"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-821"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-821"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-821"},"Further Readings"),(0,l.kt)("h2",{id:"the-most-recent-three-orders"},"The Most Recent Three Orders"),(0,l.kt)("span",{class:"tag-is-success"},"Database"),(0,l.kt)("h3",{id:"inputs-822"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-822"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-822"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-822"},"Further Readings"),(0,l.kt)("h2",{id:"find-the-index-of-the-large-integer"},"Find the Index of the Large Integer"),(0,l.kt)("span",{class:"tag-is-success"},"Array"),(0,l.kt)("span",{class:"tag-is-success"},"Binary Search"),(0,l.kt)("span",{class:"tag-is-success"},"Interactive"),(0,l.kt)("h3",{id:"inputs-823"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-823"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-823"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-823"},"Further Readings"),(0,l.kt)("h2",{id:"find-the-winner-of-an-array-game"},"Find the Winner of an Array Game"),(0,l.kt)("span",{class:"tag-is-success"},"Array"),(0,l.kt)("span",{class:"tag-is-success"},"Simulation"),(0,l.kt)("h3",{id:"inputs-824"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-824"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-824"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-824"},"Further Readings"),(0,l.kt)("h2",{id:"minimum-swaps-to-arrange-a-binary-grid"},"Minimum Swaps to Arrange a Binary Grid"),(0,l.kt)("span",{class:"tag-is-success"},"Array"),(0,l.kt)("span",{class:"tag-is-success"},"Greedy"),(0,l.kt)("span",{class:"tag-is-success"},"Matrix"),(0,l.kt)("h3",{id:"inputs-825"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-825"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-825"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-825"},"Further Readings"),(0,l.kt)("h2",{id:"guess-the-majority-in-a-hidden-array"},"Guess the Majority in a Hidden Array"),(0,l.kt)("span",{class:"tag-is-success"},"Array"),(0,l.kt)("span",{class:"tag-is-success"},"Math"),(0,l.kt)("span",{class:"tag-is-success"},"Interactive"),(0,l.kt)("h3",{id:"inputs-826"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-826"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-826"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-826"},"Further Readings"),(0,l.kt)("h2",{id:"can-convert-string-in-k-moves"},"Can Convert String in K Moves"),(0,l.kt)("span",{class:"tag-is-success"},"Hash Table"),(0,l.kt)("span",{class:"tag-is-success"},"String"),(0,l.kt)("h3",{id:"inputs-827"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-827"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-827"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-827"},"Further Readings"),(0,l.kt)("h2",{id:"minimum-insertions-to-balance-a-parentheses-string"},"Minimum Insertions to Balance a Parentheses String"),(0,l.kt)("span",{class:"tag-is-success"},"String"),(0,l.kt)("span",{class:"tag-is-success"},"Stack"),(0,l.kt)("span",{class:"tag-is-success"},"Greedy"),(0,l.kt)("h3",{id:"inputs-828"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-828"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-828"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-828"},"Further Readings"),(0,l.kt)("h2",{id:"find-kth-bit-in-nth-binary-string"},"Find Kth Bit in Nth Binary String"),(0,l.kt)("span",{class:"tag-is-success"},"String"),(0,l.kt)("span",{class:"tag-is-success"},"Recursion"),(0,l.kt)("h3",{id:"inputs-829"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-829"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-829"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-829"},"Further Readings"),(0,l.kt)("h2",{id:"maximum-number-of-non-overlapping-subarrays-with-sum-equals-target"},"Maximum Number of Non-Overlapping Subarrays With Sum Equals Target"),(0,l.kt)("span",{class:"tag-is-success"},"Array"),(0,l.kt)("span",{class:"tag-is-success"},"Hash Table"),(0,l.kt)("span",{class:"tag-is-success"},"Greedy"),(0,l.kt)("span",{class:"tag-is-success"},"Prefix Sum"),(0,l.kt)("h3",{id:"inputs-830"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-830"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-830"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-830"},"Further Readings"),(0,l.kt)("h2",{id:"the-most-recent-orders-for-each-product"},"The Most Recent Orders for Each Product"),(0,l.kt)("span",{class:"tag-is-success"},"Database"),(0,l.kt)("h3",{id:"inputs-831"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-831"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-831"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-831"},"Further Readings"),(0,l.kt)("h2",{id:"minimum-operations-to-make-array-equal"},"Minimum Operations to Make Array Equal"),(0,l.kt)("span",{class:"tag-is-success"},"Math"),(0,l.kt)("h3",{id:"inputs-832"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-832"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-832"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-832"},"Further Readings"),(0,l.kt)("h2",{id:"magnetic-force-between-two-balls"},"Magnetic Force Between Two Balls"),(0,l.kt)("span",{class:"tag-is-success"},"Array"),(0,l.kt)("span",{class:"tag-is-success"},"Binary Search"),(0,l.kt)("span",{class:"tag-is-success"},"Sorting"),(0,l.kt)("h3",{id:"inputs-833"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-833"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-833"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-833"},"Further Readings"),(0,l.kt)("h2",{id:"strings-differ-by-one-character"},"Strings Differ by One Character"),(0,l.kt)("span",{class:"tag-is-success"},"Hash Table"),(0,l.kt)("span",{class:"tag-is-success"},"String"),(0,l.kt)("span",{class:"tag-is-success"},"Rolling Hash"),(0,l.kt)("span",{class:"tag-is-success"},"Hash Function"),(0,l.kt)("h3",{id:"inputs-834"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-834"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-834"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-834"},"Further Readings"),(0,l.kt)("h2",{id:"bank-account-summary"},"Bank Account Summary"),(0,l.kt)("span",{class:"tag-is-success"},"Database"),(0,l.kt)("h3",{id:"inputs-835"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-835"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-835"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-835"},"Further Readings"),(0,l.kt)("h2",{id:"minimum-number-of-vertices-to-reach-all-nodes"},"Minimum Number of Vertices to Reach All Nodes"),(0,l.kt)("span",{class:"tag-is-success"},"Graph"),(0,l.kt)("h3",{id:"inputs-836"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-836"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-836"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-836"},"Further Readings"),(0,l.kt)("h2",{id:"minimum-numbers-of-function-calls-to-make-target-array"},"Minimum Numbers of Function Calls to Make Target Array"),(0,l.kt)("span",{class:"tag-is-success"},"Array"),(0,l.kt)("span",{class:"tag-is-success"},"Greedy"),(0,l.kt)("h3",{id:"inputs-837"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-837"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-837"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-837"},"Further Readings"),(0,l.kt)("h2",{id:"detect-cycles-in-2d-grid"},"Detect Cycles in 2D Grid"),(0,l.kt)("span",{class:"tag-is-success"},"Array"),(0,l.kt)("span",{class:"tag-is-success"},"Depth-First Search"),(0,l.kt)("span",{class:"tag-is-success"},"Breadth-First Search"),(0,l.kt)("span",{class:"tag-is-success"},"Union Find"),(0,l.kt)("span",{class:"tag-is-success"},"Matrix"),(0,l.kt)("h3",{id:"inputs-838"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-838"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-838"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-838"},"Further Readings"),(0,l.kt)("h2",{id:"maximum-number-of-coins-you-can-get"},"Maximum Number of Coins You Can Get"),(0,l.kt)("span",{class:"tag-is-success"},"Array"),(0,l.kt)("span",{class:"tag-is-success"},"Math"),(0,l.kt)("span",{class:"tag-is-success"},"Greedy"),(0,l.kt)("span",{class:"tag-is-success"},"Sorting"),(0,l.kt)("span",{class:"tag-is-success"},"Game Theory"),(0,l.kt)("h3",{id:"inputs-839"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-839"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-839"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-839"},"Further Readings"),(0,l.kt)("h2",{id:"find-latest-group-of-size-m"},"Find Latest Group of Size M"),(0,l.kt)("span",{class:"tag-is-success"},"Array"),(0,l.kt)("span",{class:"tag-is-success"},"Binary Search"),(0,l.kt)("span",{class:"tag-is-success"},"Simulation"),(0,l.kt)("h3",{id:"inputs-840"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-840"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-840"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-840"},"Further Readings"),(0,l.kt)("h2",{id:"put-boxes-into-the-warehouse-i"},"Put Boxes Into the Warehouse I"),(0,l.kt)("span",{class:"tag-is-success"},"Array"),(0,l.kt)("span",{class:"tag-is-success"},"Greedy"),(0,l.kt)("span",{class:"tag-is-success"},"Sorting"),(0,l.kt)("h3",{id:"inputs-841"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-841"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-841"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-841"},"Further Readings"),(0,l.kt)("h2",{id:"maximum-length-of-subarray-with-positive-product"},"Maximum Length of Subarray With Positive Product"),(0,l.kt)("span",{class:"tag-is-success"},"Array"),(0,l.kt)("span",{class:"tag-is-success"},"Dynamic Programming"),(0,l.kt)("span",{class:"tag-is-success"},"Greedy"),(0,l.kt)("h3",{id:"inputs-842"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-842"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-842"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-842"},"Further Readings"),(0,l.kt)("h2",{id:"dot-product-of-two-sparse-vectors"},"Dot Product of Two Sparse Vectors"),(0,l.kt)("span",{class:"tag-is-success"},"Array"),(0,l.kt)("span",{class:"tag-is-success"},"Hash Table"),(0,l.kt)("span",{class:"tag-is-success"},"Two Pointers"),(0,l.kt)("span",{class:"tag-is-success"},"Design"),(0,l.kt)("h3",{id:"inputs-843"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-843"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-843"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-843"},"Further Readings"),(0,l.kt)("h2",{id:"number-of-ways-to-split-a-string"},"Number of Ways to Split a String"),(0,l.kt)("span",{class:"tag-is-success"},"Math"),(0,l.kt)("span",{class:"tag-is-success"},"String"),(0,l.kt)("h3",{id:"inputs-844"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-844"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-844"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-844"},"Further Readings"),(0,l.kt)("h2",{id:"shortest-subarray-to-be-removed-to-make-array-sorted"},"Shortest Subarray to be Removed to Make Array Sorted"),(0,l.kt)("span",{class:"tag-is-success"},"Array"),(0,l.kt)("span",{class:"tag-is-success"},"Two Pointers"),(0,l.kt)("span",{class:"tag-is-success"},"Binary Search"),(0,l.kt)("span",{class:"tag-is-success"},"Stack"),(0,l.kt)("span",{class:"tag-is-success"},"Monotonic Stack"),(0,l.kt)("h3",{id:"inputs-845"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-845"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-845"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-845"},"Further Readings"),(0,l.kt)("h2",{id:"number-of-ways-where-square-of-number-is-equal-to-product-of-two-numbers"},"Number of Ways Where Square of Number Is Equal to Product of Two Numbers"),(0,l.kt)("span",{class:"tag-is-success"},"Array"),(0,l.kt)("span",{class:"tag-is-success"},"Hash Table"),(0,l.kt)("span",{class:"tag-is-success"},"Math"),(0,l.kt)("span",{class:"tag-is-success"},"Two Pointers"),(0,l.kt)("h3",{id:"inputs-846"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-846"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-846"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-846"},"Further Readings"),(0,l.kt)("h2",{id:"minimum-time-to-make-rope-colorful"},"Minimum Time to Make Rope Colorful"),(0,l.kt)("span",{class:"tag-is-success"},"Array"),(0,l.kt)("span",{class:"tag-is-success"},"String"),(0,l.kt)("span",{class:"tag-is-success"},"Dynamic Programming"),(0,l.kt)("span",{class:"tag-is-success"},"Greedy"),(0,l.kt)("h3",{id:"inputs-847"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-847"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-847"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-847"},"Further Readings"),(0,l.kt)("h2",{id:"put-boxes-into-the-warehouse-ii"},"Put Boxes Into the Warehouse II"),(0,l.kt)("span",{class:"tag-is-success"},"Array"),(0,l.kt)("span",{class:"tag-is-success"},"Greedy"),(0,l.kt)("span",{class:"tag-is-success"},"Sorting"),(0,l.kt)("h3",{id:"inputs-848"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-848"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-848"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-848"},"Further Readings"),(0,l.kt)("h2",{id:"count-unhappy-friends"},"Count Unhappy Friends"),(0,l.kt)("span",{class:"tag-is-success"},"Array"),(0,l.kt)("span",{class:"tag-is-success"},"Simulation"),(0,l.kt)("h3",{id:"inputs-849"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-849"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-849"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-849"},"Further Readings"),(0,l.kt)("h2",{id:"min-cost-to-connect-all-points"},"Min Cost to Connect All Points"),(0,l.kt)("span",{class:"tag-is-success"},"Array"),(0,l.kt)("span",{class:"tag-is-success"},"Union Find"),(0,l.kt)("span",{class:"tag-is-success"},"Minimum Spanning Tree"),(0,l.kt)("h3",{id:"inputs-850"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-850"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-850"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-850"},"Further Readings"),(0,l.kt)("h2",{id:"binary-search-tree-iterator-ii"},"Binary Search Tree Iterator II"),(0,l.kt)("span",{class:"tag-is-success"},"Stack"),(0,l.kt)("span",{class:"tag-is-success"},"Tree"),(0,l.kt)("span",{class:"tag-is-success"},"Design"),(0,l.kt)("span",{class:"tag-is-success"},"Binary Search Tree"),(0,l.kt)("span",{class:"tag-is-success"},"Binary Tree"),(0,l.kt)("span",{class:"tag-is-success"},"Iterator"),(0,l.kt)("h3",{id:"inputs-851"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-851"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-851"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-851"},"Further Readings"),(0,l.kt)("h2",{id:"maximum-sum-obtained-of-any-permutation"},"Maximum Sum Obtained of Any Permutation"),(0,l.kt)("span",{class:"tag-is-success"},"Array"),(0,l.kt)("span",{class:"tag-is-success"},"Greedy"),(0,l.kt)("span",{class:"tag-is-success"},"Sorting"),(0,l.kt)("span",{class:"tag-is-success"},"Prefix Sum"),(0,l.kt)("h3",{id:"inputs-852"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-852"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-852"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-852"},"Further Readings"),(0,l.kt)("h2",{id:"make-sum-divisible-by-p"},"Make Sum Divisible by P"),(0,l.kt)("span",{class:"tag-is-success"},"Array"),(0,l.kt)("span",{class:"tag-is-success"},"Hash Table"),(0,l.kt)("span",{class:"tag-is-success"},"Prefix Sum"),(0,l.kt)("h3",{id:"inputs-853"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-853"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-853"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-853"},"Further Readings"),(0,l.kt)("h2",{id:"split-a-string-into-the-max-number-of-unique-substrings"},"Split a String Into the Max Number of Unique Substrings"),(0,l.kt)("span",{class:"tag-is-success"},"Hash Table"),(0,l.kt)("span",{class:"tag-is-success"},"String"),(0,l.kt)("span",{class:"tag-is-success"},"Backtracking"),(0,l.kt)("h3",{id:"inputs-854"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-854"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-854"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-854"},"Further Readings"),(0,l.kt)("h2",{id:"maximum-non-negative-product-in-a-matrix"},"Maximum Non Negative Product in a Matrix"),(0,l.kt)("span",{class:"tag-is-success"},"Array"),(0,l.kt)("span",{class:"tag-is-success"},"Dynamic Programming"),(0,l.kt)("span",{class:"tag-is-success"},"Matrix"),(0,l.kt)("h3",{id:"inputs-855"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-855"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-855"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-855"},"Further Readings"),(0,l.kt)("h2",{id:"the-most-frequently-ordered-products-for-each-customer"},"The Most Frequently Ordered Products for Each Customer"),(0,l.kt)("span",{class:"tag-is-success"},"Database"),(0,l.kt)("h3",{id:"inputs-856"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-856"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-856"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-856"},"Further Readings"),(0,l.kt)("h2",{id:"maximum-profit-of-operating-a-centennial-wheel"},"Maximum Profit of Operating a Centennial Wheel"),(0,l.kt)("span",{class:"tag-is-success"},"Array"),(0,l.kt)("span",{class:"tag-is-success"},"Simulation"),(0,l.kt)("h3",{id:"inputs-857"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-857"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-857"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-857"},"Further Readings"),(0,l.kt)("h2",{id:"throne-inheritance"},"Throne Inheritance"),(0,l.kt)("span",{class:"tag-is-success"},"Hash Table"),(0,l.kt)("span",{class:"tag-is-success"},"Tree"),(0,l.kt)("span",{class:"tag-is-success"},"Depth-First Search"),(0,l.kt)("span",{class:"tag-is-success"},"Design"),(0,l.kt)("h3",{id:"inputs-858"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-858"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-858"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-858"},"Further Readings"),(0,l.kt)("h2",{id:"find-nearest-right-node-in-binary-tree"},"Find Nearest Right Node in Binary Tree"),(0,l.kt)("span",{class:"tag-is-success"},"Tree"),(0,l.kt)("span",{class:"tag-is-success"},"Breadth-First Search"),(0,l.kt)("span",{class:"tag-is-success"},"Binary Tree"),(0,l.kt)("h3",{id:"inputs-859"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-859"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-859"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-859"},"Further Readings"),(0,l.kt)("h2",{id:"alert-using-same-key-card-three-or-more-times-in-a-one-hour-period"},"Alert Using Same Key-Card Three or More Times in a One Hour Period"),(0,l.kt)("span",{class:"tag-is-success"},"Array"),(0,l.kt)("span",{class:"tag-is-success"},"Hash Table"),(0,l.kt)("span",{class:"tag-is-success"},"String"),(0,l.kt)("span",{class:"tag-is-success"},"Sorting"),(0,l.kt)("h3",{id:"inputs-860"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-860"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-860"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-860"},"Further Readings"),(0,l.kt)("h2",{id:"find-valid-matrix-given-row-and-column-sums"},"Find Valid Matrix Given Row and Column Sums"),(0,l.kt)("span",{class:"tag-is-success"},"Array"),(0,l.kt)("span",{class:"tag-is-success"},"Greedy"),(0,l.kt)("span",{class:"tag-is-success"},"Matrix"),(0,l.kt)("h3",{id:"inputs-861"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-861"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-861"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-861"},"Further Readings"),(0,l.kt)("h2",{id:"even-odd-tree"},"Even Odd Tree"),(0,l.kt)("span",{class:"tag-is-success"},"Tree"),(0,l.kt)("span",{class:"tag-is-success"},"Breadth-First Search"),(0,l.kt)("span",{class:"tag-is-success"},"Binary Tree"),(0,l.kt)("h3",{id:"inputs-862"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-862"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-862"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-862"},"Further Readings"),(0,l.kt)("h2",{id:"check-if-two-expression-trees-are-equivalent"},"Check If Two Expression Trees are Equivalent"),(0,l.kt)("span",{class:"tag-is-success"},"Tree"),(0,l.kt)("span",{class:"tag-is-success"},"Depth-First Search"),(0,l.kt)("span",{class:"tag-is-success"},"Binary Tree"),(0,l.kt)("h3",{id:"inputs-863"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-863"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-863"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-863"},"Further Readings"),(0,l.kt)("h2",{id:"find-the-missing-ids"},"Find the Missing IDs"),(0,l.kt)("span",{class:"tag-is-success"},"Database"),(0,l.kt)("h3",{id:"inputs-864"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-864"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-864"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-864"},"Further Readings"),(0,l.kt)("h2",{id:"maximal-network-rank"},"Maximal Network Rank"),(0,l.kt)("span",{class:"tag-is-success"},"Graph"),(0,l.kt)("h3",{id:"inputs-865"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-865"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-865"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-865"},"Further Readings"),(0,l.kt)("h2",{id:"split-two-strings-to-make-palindrome"},"Split Two Strings to Make Palindrome"),(0,l.kt)("span",{class:"tag-is-success"},"Two Pointers"),(0,l.kt)("span",{class:"tag-is-success"},"String"),(0,l.kt)("span",{class:"tag-is-success"},"Greedy"),(0,l.kt)("h3",{id:"inputs-866"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-866"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-866"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-866"},"Further Readings"),(0,l.kt)("h2",{id:"maximum-font-to-fit-a-sentence-in-a-screen"},"Maximum Font to Fit a Sentence in a Screen"),(0,l.kt)("span",{class:"tag-is-success"},"Array"),(0,l.kt)("span",{class:"tag-is-success"},"String"),(0,l.kt)("span",{class:"tag-is-success"},"Binary Search"),(0,l.kt)("span",{class:"tag-is-success"},"Interactive"),(0,l.kt)("h3",{id:"inputs-867"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-867"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-867"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-867"},"Further Readings"),(0,l.kt)("h2",{id:"coordinate-with-maximum-network-quality"},"Coordinate With Maximum Network Quality"),(0,l.kt)("span",{class:"tag-is-success"},"Array"),(0,l.kt)("span",{class:"tag-is-success"},"Enumeration"),(0,l.kt)("h3",{id:"inputs-868"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-868"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-868"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-868"},"Further Readings"),(0,l.kt)("h2",{id:"number-of-sets-of-k-non-overlapping-line-segments"},"Number of Sets of K Non-Overlapping Line Segments"),(0,l.kt)("span",{class:"tag-is-success"},"Math"),(0,l.kt)("span",{class:"tag-is-success"},"Dynamic Programming"),(0,l.kt)("h3",{id:"inputs-869"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-869"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-869"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-869"},"Further Readings"),(0,l.kt)("h2",{id:"lexicographically-smallest-string-after-applying-operations"},"Lexicographically Smallest String After Applying Operations"),(0,l.kt)("span",{class:"tag-is-success"},"String"),(0,l.kt)("span",{class:"tag-is-success"},"Breadth-First Search"),(0,l.kt)("h3",{id:"inputs-870"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-870"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-870"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-870"},"Further Readings"),(0,l.kt)("h2",{id:"best-team-with-no-conflicts"},"Best Team With No Conflicts"),(0,l.kt)("span",{class:"tag-is-success"},"Array"),(0,l.kt)("span",{class:"tag-is-success"},"Dynamic Programming"),(0,l.kt)("span",{class:"tag-is-success"},"Sorting"),(0,l.kt)("h3",{id:"inputs-871"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-871"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-871"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-871"},"Further Readings"),(0,l.kt)("h2",{id:"design-an-expression-tree-with-evaluate-function"},"Design an Expression Tree With Evaluate Function"),(0,l.kt)("span",{class:"tag-is-success"},"Math"),(0,l.kt)("span",{class:"tag-is-success"},"Stack"),(0,l.kt)("span",{class:"tag-is-success"},"Tree"),(0,l.kt)("span",{class:"tag-is-success"},"Design"),(0,l.kt)("span",{class:"tag-is-success"},"Binary Tree"),(0,l.kt)("h3",{id:"inputs-872"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-872"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-872"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-872"},"Further Readings"),(0,l.kt)("h2",{id:"arithmetic-subarrays"},"Arithmetic Subarrays"),(0,l.kt)("span",{class:"tag-is-success"},"Array"),(0,l.kt)("span",{class:"tag-is-success"},"Sorting"),(0,l.kt)("h3",{id:"inputs-873"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-873"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-873"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-873"},"Further Readings"),(0,l.kt)("h2",{id:"path-with-minimum-effort"},"Path With Minimum Effort"),(0,l.kt)("span",{class:"tag-is-success"},"Array"),(0,l.kt)("span",{class:"tag-is-success"},"Binary Search"),(0,l.kt)("span",{class:"tag-is-success"},"Depth-First Search"),(0,l.kt)("span",{class:"tag-is-success"},"Breadth-First Search"),(0,l.kt)("span",{class:"tag-is-success"},"Union Find"),(0,l.kt)("span",{class:"tag-is-success"},"Heap (Priority Queue)"),(0,l.kt)("span",{class:"tag-is-success"},"Matrix"),(0,l.kt)("h3",{id:"inputs-874"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-874"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-874"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-874"},"Further Readings"),(0,l.kt)("h2",{id:"add-two-polynomials-represented-as-linked-lists"},"Add Two Polynomials Represented as Linked Lists"),(0,l.kt)("span",{class:"tag-is-success"},"Linked List"),(0,l.kt)("span",{class:"tag-is-success"},"Math"),(0,l.kt)("span",{class:"tag-is-success"},"Two Pointers"),(0,l.kt)("h3",{id:"inputs-875"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-875"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-875"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-875"},"Further Readings"),(0,l.kt)("h2",{id:"widest-vertical-area-between-two-points-containing-no-points"},"Widest Vertical Area Between Two Points Containing No Points"),(0,l.kt)("span",{class:"tag-is-success"},"Array"),(0,l.kt)("span",{class:"tag-is-success"},"Sorting"),(0,l.kt)("h3",{id:"inputs-876"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-876"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-876"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-876"},"Further Readings"),(0,l.kt)("h2",{id:"count-substrings-that-differ-by-one-character"},"Count Substrings That Differ by One Character"),(0,l.kt)("span",{class:"tag-is-success"},"Hash Table"),(0,l.kt)("span",{class:"tag-is-success"},"String"),(0,l.kt)("span",{class:"tag-is-success"},"Dynamic Programming"),(0,l.kt)("h3",{id:"inputs-877"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-877"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-877"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-877"},"Further Readings"),(0,l.kt)("h2",{id:"count-sorted-vowel-strings"},"Count Sorted Vowel Strings"),(0,l.kt)("span",{class:"tag-is-success"},"Dynamic Programming"),(0,l.kt)("h3",{id:"inputs-878"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-878"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-878"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-878"},"Further Readings"),(0,l.kt)("h2",{id:"furthest-building-you-can-reach"},"Furthest Building You Can Reach"),(0,l.kt)("span",{class:"tag-is-success"},"Array"),(0,l.kt)("span",{class:"tag-is-success"},"Greedy"),(0,l.kt)("span",{class:"tag-is-success"},"Heap (Priority Queue)"),(0,l.kt)("h3",{id:"inputs-879"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-879"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-879"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-879"},"Further Readings"),(0,l.kt)("h2",{id:"lowest-common-ancestor-of-a-binary-tree-ii"},"Lowest Common Ancestor of a Binary Tree II"),(0,l.kt)("span",{class:"tag-is-success"},"Tree"),(0,l.kt)("span",{class:"tag-is-success"},"Depth-First Search"),(0,l.kt)("span",{class:"tag-is-success"},"Binary Tree"),(0,l.kt)("h3",{id:"inputs-880"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-880"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-880"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-880"},"Further Readings"),(0,l.kt)("h2",{id:"minimum-deletions-to-make-character-frequencies-unique"},"Minimum Deletions to Make Character Frequencies Unique"),(0,l.kt)("span",{class:"tag-is-success"},"String"),(0,l.kt)("span",{class:"tag-is-success"},"Greedy"),(0,l.kt)("span",{class:"tag-is-success"},"Sorting"),(0,l.kt)("h3",{id:"inputs-881"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-881"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-881"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-881"},"Further Readings"),(0,l.kt)("h2",{id:"sell-diminishing-valued-colored-balls"},"Sell Diminishing-Valued Colored Balls"),(0,l.kt)("span",{class:"tag-is-success"},"Array"),(0,l.kt)("span",{class:"tag-is-success"},"Math"),(0,l.kt)("span",{class:"tag-is-success"},"Binary Search"),(0,l.kt)("span",{class:"tag-is-success"},"Greedy"),(0,l.kt)("span",{class:"tag-is-success"},"Sorting"),(0,l.kt)("span",{class:"tag-is-success"},"Heap (Priority Queue)"),(0,l.kt)("h3",{id:"inputs-882"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-882"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-882"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-882"},"Further Readings"),(0,l.kt)("h2",{id:"lowest-common-ancestor-of-a-binary-tree-iii"},"Lowest Common Ancestor of a Binary Tree III"),(0,l.kt)("span",{class:"tag-is-success"},"Hash Table"),(0,l.kt)("span",{class:"tag-is-success"},"Tree"),(0,l.kt)("span",{class:"tag-is-success"},"Binary Tree"),(0,l.kt)("h3",{id:"inputs-883"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-883"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-883"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-883"},"Further Readings"),(0,l.kt)("h2",{id:"minimum-deletions-to-make-string-balanced"},"Minimum Deletions to Make String Balanced"),(0,l.kt)("span",{class:"tag-is-success"},"String"),(0,l.kt)("span",{class:"tag-is-success"},"Dynamic Programming"),(0,l.kt)("span",{class:"tag-is-success"},"Stack"),(0,l.kt)("h3",{id:"inputs-884"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-884"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-884"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-884"},"Further Readings"),(0,l.kt)("h2",{id:"minimum-jumps-to-reach-home"},"Minimum Jumps to Reach Home"),(0,l.kt)("span",{class:"tag-is-success"},"Array"),(0,l.kt)("span",{class:"tag-is-success"},"Dynamic Programming"),(0,l.kt)("span",{class:"tag-is-success"},"Breadth-First Search"),(0,l.kt)("h3",{id:"inputs-885"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-885"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-885"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-885"},"Further Readings"),(0,l.kt)("h2",{id:"determine-if-two-strings-are-close"},"Determine if Two Strings Are Close"),(0,l.kt)("span",{class:"tag-is-success"},"Hash Table"),(0,l.kt)("span",{class:"tag-is-success"},"String"),(0,l.kt)("span",{class:"tag-is-success"},"Sorting"),(0,l.kt)("h3",{id:"inputs-886"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-886"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-886"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-886"},"Further Readings"),(0,l.kt)("h2",{id:"minimum-operations-to-reduce-x-to-zero"},"Minimum Operations to Reduce X to Zero"),(0,l.kt)("span",{class:"tag-is-success"},"Array"),(0,l.kt)("span",{class:"tag-is-success"},"Hash Table"),(0,l.kt)("span",{class:"tag-is-success"},"Binary Search"),(0,l.kt)("span",{class:"tag-is-success"},"Sliding Window"),(0,l.kt)("span",{class:"tag-is-success"},"Prefix Sum"),(0,l.kt)("h3",{id:"inputs-887"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-887"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-887"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-887"},"Further Readings"),(0,l.kt)("h2",{id:"correct-a-binary-tree"},"Correct a Binary Tree"),(0,l.kt)("span",{class:"tag-is-success"},"Hash Table"),(0,l.kt)("span",{class:"tag-is-success"},"Tree"),(0,l.kt)("span",{class:"tag-is-success"},"Depth-First Search"),(0,l.kt)("span",{class:"tag-is-success"},"Breadth-First Search"),(0,l.kt)("span",{class:"tag-is-success"},"Binary Tree"),(0,l.kt)("h3",{id:"inputs-888"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-888"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-888"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-888"},"Further Readings"),(0,l.kt)("h2",{id:"smallest-string-with-a-given-numeric-value"},"Smallest String With A Given Numeric Value"),(0,l.kt)("span",{class:"tag-is-success"},"String"),(0,l.kt)("span",{class:"tag-is-success"},"Greedy"),(0,l.kt)("h3",{id:"inputs-889"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-889"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-889"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-889"},"Further Readings"),(0,l.kt)("h2",{id:"ways-to-make-a-fair-array"},"Ways to Make a Fair Array"),(0,l.kt)("span",{class:"tag-is-success"},"Array"),(0,l.kt)("span",{class:"tag-is-success"},"Dynamic Programming"),(0,l.kt)("h3",{id:"inputs-890"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-890"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-890"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-890"},"Further Readings"),(0,l.kt)("h2",{id:"change-the-root-of-a-binary-tree"},"Change the Root of a Binary Tree"),(0,l.kt)("span",{class:"tag-is-success"},"Tree"),(0,l.kt)("span",{class:"tag-is-success"},"Depth-First Search"),(0,l.kt)("span",{class:"tag-is-success"},"Binary Tree"),(0,l.kt)("h3",{id:"inputs-891"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-891"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-891"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-891"},"Further Readings"),(0,l.kt)("h2",{id:"merge-in-between-linked-lists"},"Merge In Between Linked Lists"),(0,l.kt)("span",{class:"tag-is-success"},"Linked List"),(0,l.kt)("h3",{id:"inputs-892"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-892"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-892"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-892"},"Further Readings"),(0,l.kt)("h2",{id:"design-front-middle-back-queue"},"Design Front Middle Back Queue"),(0,l.kt)("span",{class:"tag-is-success"},"Array"),(0,l.kt)("span",{class:"tag-is-success"},"Linked List"),(0,l.kt)("span",{class:"tag-is-success"},"Design"),(0,l.kt)("span",{class:"tag-is-success"},"Queue"),(0,l.kt)("span",{class:"tag-is-success"},"Data Stream"),(0,l.kt)("h3",{id:"inputs-893"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-893"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-893"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-893"},"Further Readings"),(0,l.kt)("h2",{id:"find-the-most-competitive-subsequence"},"Find the Most Competitive Subsequence"),(0,l.kt)("span",{class:"tag-is-success"},"Array"),(0,l.kt)("span",{class:"tag-is-success"},"Stack"),(0,l.kt)("span",{class:"tag-is-success"},"Greedy"),(0,l.kt)("span",{class:"tag-is-success"},"Monotonic Stack"),(0,l.kt)("h3",{id:"inputs-894"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-894"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-894"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-894"},"Further Readings"),(0,l.kt)("h2",{id:"minimum-moves-to-make-array-complementary"},"Minimum Moves to Make Array Complementary"),(0,l.kt)("span",{class:"tag-is-success"},"Array"),(0,l.kt)("span",{class:"tag-is-success"},"Hash Table"),(0,l.kt)("span",{class:"tag-is-success"},"Prefix Sum"),(0,l.kt)("h3",{id:"inputs-895"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-895"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-895"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-895"},"Further Readings"),(0,l.kt)("h2",{id:"lowest-common-ancestor-of-a-binary-tree-iv"},"Lowest Common Ancestor of a Binary Tree IV"),(0,l.kt)("span",{class:"tag-is-success"},"Tree"),(0,l.kt)("span",{class:"tag-is-success"},"Depth-First Search"),(0,l.kt)("span",{class:"tag-is-success"},"Binary Tree"),(0,l.kt)("h3",{id:"inputs-896"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-896"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-896"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-896"},"Further Readings"),(0,l.kt)("h2",{id:"max-number-of-k-sum-pairs"},"Max Number of K-Sum Pairs"),(0,l.kt)("span",{class:"tag-is-success"},"Array"),(0,l.kt)("span",{class:"tag-is-success"},"Hash Table"),(0,l.kt)("span",{class:"tag-is-success"},"Two Pointers"),(0,l.kt)("span",{class:"tag-is-success"},"Sorting"),(0,l.kt)("h3",{id:"inputs-897"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-897"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-897"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-897"},"Further Readings"),(0,l.kt)("h2",{id:"concatenation-of-consecutive-binary-numbers"},"Concatenation of Consecutive Binary Numbers"),(0,l.kt)("span",{class:"tag-is-success"},"Math"),(0,l.kt)("span",{class:"tag-is-success"},"Bit Manipulation"),(0,l.kt)("span",{class:"tag-is-success"},"Simulation"),(0,l.kt)("h3",{id:"inputs-898"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-898"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-898"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-898"},"Further Readings"),(0,l.kt)("h2",{id:"longest-palindromic-subsequence-ii"},"Longest Palindromic Subsequence II"),(0,l.kt)("span",{class:"tag-is-success"},"String"),(0,l.kt)("span",{class:"tag-is-success"},"Dynamic Programming"),(0,l.kt)("h3",{id:"inputs-899"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-899"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-899"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-899"},"Further Readings"),(0,l.kt)("h2",{id:"sum-of-absolute-differences-in-a-sorted-array"},"Sum of Absolute Differences in a Sorted Array"),(0,l.kt)("span",{class:"tag-is-success"},"Array"),(0,l.kt)("span",{class:"tag-is-success"},"Math"),(0,l.kt)("span",{class:"tag-is-success"},"Prefix Sum"),(0,l.kt)("h3",{id:"inputs-900"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-900"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-900"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-900"},"Further Readings"),(0,l.kt)("h2",{id:"stone-game-vi"},"Stone Game VI"),(0,l.kt)("span",{class:"tag-is-success"},"Array"),(0,l.kt)("span",{class:"tag-is-success"},"Math"),(0,l.kt)("span",{class:"tag-is-success"},"Greedy"),(0,l.kt)("span",{class:"tag-is-success"},"Sorting"),(0,l.kt)("span",{class:"tag-is-success"},"Heap (Priority Queue)"),(0,l.kt)("span",{class:"tag-is-success"},"Game Theory"),(0,l.kt)("h3",{id:"inputs-901"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-901"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-901"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-901"},"Further Readings"),(0,l.kt)("h2",{id:"partitioning-into-minimum-number-of-deci-binary-numbers"},"Partitioning Into Minimum Number Of Deci-Binary Numbers"),(0,l.kt)("span",{class:"tag-is-success"},"String"),(0,l.kt)("span",{class:"tag-is-success"},"Greedy"),(0,l.kt)("h3",{id:"inputs-902"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-902"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-902"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-902"},"Further Readings"),(0,l.kt)("h2",{id:"stone-game-vii"},"Stone Game VII"),(0,l.kt)("span",{class:"tag-is-success"},"Array"),(0,l.kt)("span",{class:"tag-is-success"},"Math"),(0,l.kt)("span",{class:"tag-is-success"},"Dynamic Programming"),(0,l.kt)("span",{class:"tag-is-success"},"Game Theory"),(0,l.kt)("h3",{id:"inputs-903"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-903"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-903"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-903"},"Further Readings"),(0,l.kt)("h2",{id:"maximum-erasure-value"},"Maximum Erasure Value"),(0,l.kt)("span",{class:"tag-is-success"},"Array"),(0,l.kt)("span",{class:"tag-is-success"},"Hash Table"),(0,l.kt)("span",{class:"tag-is-success"},"Sliding Window"),(0,l.kt)("h3",{id:"inputs-904"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-904"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-904"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-904"},"Further Readings"),(0,l.kt)("h2",{id:"jump-game-vi"},"Jump Game VI"),(0,l.kt)("span",{class:"tag-is-success"},"Array"),(0,l.kt)("span",{class:"tag-is-success"},"Dynamic Programming"),(0,l.kt)("span",{class:"tag-is-success"},"Queue"),(0,l.kt)("span",{class:"tag-is-success"},"Sliding Window"),(0,l.kt)("span",{class:"tag-is-success"},"Heap (Priority Queue)"),(0,l.kt)("span",{class:"tag-is-success"},"Monotonic Queue"),(0,l.kt)("h3",{id:"inputs-905"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-905"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-905"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-905"},"Further Readings"),(0,l.kt)("h2",{id:"number-of-distinct-substrings-in-a-string"},"Number of Distinct Substrings in a String"),(0,l.kt)("span",{class:"tag-is-success"},"String"),(0,l.kt)("span",{class:"tag-is-success"},"Trie"),(0,l.kt)("span",{class:"tag-is-success"},"Rolling Hash"),(0,l.kt)("span",{class:"tag-is-success"},"Suffix Array"),(0,l.kt)("span",{class:"tag-is-success"},"Hash Function"),(0,l.kt)("h3",{id:"inputs-906"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-906"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-906"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-906"},"Further Readings"),(0,l.kt)("h2",{id:"number-of-calls-between-two-persons"},"Number of Calls Between Two Persons"),(0,l.kt)("span",{class:"tag-is-success"},"Database"),(0,l.kt)("h3",{id:"inputs-907"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-907"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-907"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-907"},"Further Readings"),(0,l.kt)("h2",{id:"average-waiting-time"},"Average Waiting Time"),(0,l.kt)("span",{class:"tag-is-success"},"Array"),(0,l.kt)("span",{class:"tag-is-success"},"Simulation"),(0,l.kt)("h3",{id:"inputs-908"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-908"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-908"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-908"},"Further Readings"),(0,l.kt)("h2",{id:"maximum-binary-string-after-change"},"Maximum Binary String After Change"),(0,l.kt)("span",{class:"tag-is-success"},"String"),(0,l.kt)("span",{class:"tag-is-success"},"Greedy"),(0,l.kt)("h3",{id:"inputs-909"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-909"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-909"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-909"},"Further Readings"),(0,l.kt)("h2",{id:"maximum-number-of-eaten-apples"},"Maximum Number of Eaten Apples"),(0,l.kt)("span",{class:"tag-is-success"},"Array"),(0,l.kt)("span",{class:"tag-is-success"},"Greedy"),(0,l.kt)("span",{class:"tag-is-success"},"Heap (Priority Queue)"),(0,l.kt)("h3",{id:"inputs-910"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-910"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-910"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-910"},"Further Readings"),(0,l.kt)("h2",{id:"where-will-the-ball-fall"},"Where Will the Ball Fall"),(0,l.kt)("span",{class:"tag-is-success"},"Array"),(0,l.kt)("span",{class:"tag-is-success"},"Dynamic Programming"),(0,l.kt)("span",{class:"tag-is-success"},"Depth-First Search"),(0,l.kt)("span",{class:"tag-is-success"},"Matrix"),(0,l.kt)("span",{class:"tag-is-success"},"Simulation"),(0,l.kt)("h3",{id:"inputs-911"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-911"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-911"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-911"},"Further Readings"),(0,l.kt)("h2",{id:"biggest-window-between-visits"},"Biggest Window Between Visits"),(0,l.kt)("span",{class:"tag-is-success"},"Database"),(0,l.kt)("h3",{id:"inputs-912"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-912"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-912"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-912"},"Further Readings"),(0,l.kt)("h2",{id:"count-good-meals"},"Count Good Meals"),(0,l.kt)("span",{class:"tag-is-success"},"Array"),(0,l.kt)("span",{class:"tag-is-success"},"Hash Table"),(0,l.kt)("h3",{id:"inputs-913"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-913"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-913"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-913"},"Further Readings"),(0,l.kt)("h2",{id:"ways-to-split-array-into-three-subarrays"},"Ways to Split Array Into Three Subarrays"),(0,l.kt)("span",{class:"tag-is-success"},"Array"),(0,l.kt)("span",{class:"tag-is-success"},"Two Pointers"),(0,l.kt)("span",{class:"tag-is-success"},"Binary Search"),(0,l.kt)("span",{class:"tag-is-success"},"Prefix Sum"),(0,l.kt)("h3",{id:"inputs-914"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-914"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-914"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-914"},"Further Readings"),(0,l.kt)("h2",{id:"count-apples-and-oranges"},"Count Apples and Oranges"),(0,l.kt)("span",{class:"tag-is-success"},"Database"),(0,l.kt)("h3",{id:"inputs-915"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-915"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-915"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-915"},"Further Readings"),(0,l.kt)("h2",{id:"maximum-score-from-removing-substrings"},"Maximum Score From Removing Substrings"),(0,l.kt)("span",{class:"tag-is-success"},"String"),(0,l.kt)("span",{class:"tag-is-success"},"Stack"),(0,l.kt)("span",{class:"tag-is-success"},"Greedy"),(0,l.kt)("h3",{id:"inputs-916"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-916"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-916"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-916"},"Further Readings"),(0,l.kt)("h2",{id:"construct-the-lexicographically-largest-valid-sequence"},"Construct the Lexicographically Largest Valid Sequence"),(0,l.kt)("span",{class:"tag-is-success"},"Array"),(0,l.kt)("span",{class:"tag-is-success"},"Backtracking"),(0,l.kt)("h3",{id:"inputs-917"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-917"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-917"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-917"},"Further Readings"),(0,l.kt)("h2",{id:"swapping-nodes-in-a-linked-list"},"Swapping Nodes in a Linked List"),(0,l.kt)("span",{class:"tag-is-success"},"Linked List"),(0,l.kt)("span",{class:"tag-is-success"},"Two Pointers"),(0,l.kt)("h3",{id:"inputs-918"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-918"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-918"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-918"},"Further Readings"),(0,l.kt)("h2",{id:"minimize-hamming-distance-after-swap-operations"},"Minimize Hamming Distance After Swap Operations"),(0,l.kt)("span",{class:"tag-is-success"},"Array"),(0,l.kt)("span",{class:"tag-is-success"},"Depth-First Search"),(0,l.kt)("span",{class:"tag-is-success"},"Union Find"),(0,l.kt)("h3",{id:"inputs-919"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-919"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-919"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-919"},"Further Readings"),(0,l.kt)("h2",{id:"tuple-with-same-product"},"Tuple with Same Product"),(0,l.kt)("span",{class:"tag-is-success"},"Array"),(0,l.kt)("span",{class:"tag-is-success"},"Hash Table"),(0,l.kt)("h3",{id:"inputs-920"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-920"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-920"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-920"},"Further Readings"),(0,l.kt)("h2",{id:"largest-submatrix-with-rearrangements"},"Largest Submatrix With Rearrangements"),(0,l.kt)("span",{class:"tag-is-success"},"Array"),(0,l.kt)("span",{class:"tag-is-success"},"Greedy"),(0,l.kt)("span",{class:"tag-is-success"},"Sorting"),(0,l.kt)("span",{class:"tag-is-success"},"Matrix"),(0,l.kt)("h3",{id:"inputs-921"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-921"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-921"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-921"},"Further Readings"),(0,l.kt)("h2",{id:"shortest-path-to-get-food"},"Shortest Path to Get Food"),(0,l.kt)("span",{class:"tag-is-success"},"Array"),(0,l.kt)("span",{class:"tag-is-success"},"Breadth-First Search"),(0,l.kt)("span",{class:"tag-is-success"},"Matrix"),(0,l.kt)("h3",{id:"inputs-922"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-922"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-922"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-922"},"Further Readings"),(0,l.kt)("h2",{id:"minimum-number-of-people-to-teach"},"Minimum Number of People to Teach"),(0,l.kt)("span",{class:"tag-is-success"},"Array"),(0,l.kt)("span",{class:"tag-is-success"},"Greedy"),(0,l.kt)("h3",{id:"inputs-923"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-923"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-923"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-923"},"Further Readings"),(0,l.kt)("h2",{id:"decode-xored-permutation"},"Decode XORed Permutation"),(0,l.kt)("span",{class:"tag-is-success"},"Array"),(0,l.kt)("span",{class:"tag-is-success"},"Bit Manipulation"),(0,l.kt)("h3",{id:"inputs-924"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-924"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-924"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-924"},"Further Readings"),(0,l.kt)("h2",{id:"change-minimum-characters-to-satisfy-one-of-three-conditions"},"Change Minimum Characters to Satisfy One of Three Conditions"),(0,l.kt)("span",{class:"tag-is-success"},"Hash Table"),(0,l.kt)("span",{class:"tag-is-success"},"String"),(0,l.kt)("span",{class:"tag-is-success"},"Counting"),(0,l.kt)("span",{class:"tag-is-success"},"Prefix Sum"),(0,l.kt)("h3",{id:"inputs-925"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-925"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-925"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-925"},"Further Readings"),(0,l.kt)("h2",{id:"find-kth-largest-xor-coordinate-value"},"Find Kth Largest XOR Coordinate Value"),(0,l.kt)("span",{class:"tag-is-success"},"Array"),(0,l.kt)("span",{class:"tag-is-success"},"Divide and Conquer"),(0,l.kt)("span",{class:"tag-is-success"},"Bit Manipulation"),(0,l.kt)("span",{class:"tag-is-success"},"Heap (Priority Queue)"),(0,l.kt)("span",{class:"tag-is-success"},"Matrix"),(0,l.kt)("span",{class:"tag-is-success"},"Prefix Sum"),(0,l.kt)("span",{class:"tag-is-success"},"Quickselect"),(0,l.kt)("h3",{id:"inputs-926"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-926"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-926"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-926"},"Further Readings"),(0,l.kt)("h2",{id:"find-distance-in-a-binary-tree"},"Find Distance in a Binary Tree"),(0,l.kt)("span",{class:"tag-is-success"},"Hash Table"),(0,l.kt)("span",{class:"tag-is-success"},"Tree"),(0,l.kt)("span",{class:"tag-is-success"},"Depth-First Search"),(0,l.kt)("span",{class:"tag-is-success"},"Breadth-First Search"),(0,l.kt)("span",{class:"tag-is-success"},"Binary Tree"),(0,l.kt)("h3",{id:"inputs-927"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-927"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-927"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-927"},"Further Readings"),(0,l.kt)("h2",{id:"restore-the-array-from-adjacent-pairs"},"Restore the Array From Adjacent Pairs"),(0,l.kt)("span",{class:"tag-is-success"},"Array"),(0,l.kt)("span",{class:"tag-is-success"},"Hash Table"),(0,l.kt)("h3",{id:"inputs-928"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-928"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-928"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-928"},"Further Readings"),(0,l.kt)("h2",{id:"can-you-eat-your-favorite-candy-on-your-favorite-day"},"Can You Eat Your Favorite Candy on Your Favorite Day?"),(0,l.kt)("span",{class:"tag-is-success"},"Array"),(0,l.kt)("span",{class:"tag-is-success"},"Prefix Sum"),(0,l.kt)("h3",{id:"inputs-929"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-929"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-929"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-929"},"Further Readings"),(0,l.kt)("h2",{id:"maximum-subarray-sum-after-one-operation"},"Maximum Subarray Sum After One Operation"),(0,l.kt)("span",{class:"tag-is-success"},"Array"),(0,l.kt)("span",{class:"tag-is-success"},"Dynamic Programming"),(0,l.kt)("h3",{id:"inputs-930"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-930"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-930"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-930"},"Further Readings"),(0,l.kt)("h2",{id:"leetflex-banned-accounts"},"Leetflex Banned Accounts"),(0,l.kt)("span",{class:"tag-is-success"},"Database"),(0,l.kt)("h3",{id:"inputs-931"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-931"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-931"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-931"},"Further Readings"),(0,l.kt)("h2",{id:"maximum-absolute-sum-of-any-subarray"},"Maximum Absolute Sum of Any Subarray"),(0,l.kt)("span",{class:"tag-is-success"},"Array"),(0,l.kt)("span",{class:"tag-is-success"},"Dynamic Programming"),(0,l.kt)("h3",{id:"inputs-932"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-932"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-932"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-932"},"Further Readings"),(0,l.kt)("h2",{id:"minimum-length-of-string-after-deleting-similar-ends"},"Minimum Length of String After Deleting Similar Ends"),(0,l.kt)("span",{class:"tag-is-success"},"Two Pointers"),(0,l.kt)("span",{class:"tag-is-success"},"String"),(0,l.kt)("h3",{id:"inputs-933"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-933"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-933"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-933"},"Further Readings"),(0,l.kt)("h2",{id:"maximum-score-from-removing-stones"},"Maximum Score From Removing Stones"),(0,l.kt)("span",{class:"tag-is-success"},"Math"),(0,l.kt)("span",{class:"tag-is-success"},"Greedy"),(0,l.kt)("span",{class:"tag-is-success"},"Heap (Priority Queue)"),(0,l.kt)("h3",{id:"inputs-934"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-934"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-934"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-934"},"Further Readings"),(0,l.kt)("h2",{id:"largest-merge-of-two-strings"},"Largest Merge Of Two Strings"),(0,l.kt)("span",{class:"tag-is-success"},"Two Pointers"),(0,l.kt)("span",{class:"tag-is-success"},"String"),(0,l.kt)("span",{class:"tag-is-success"},"Greedy"),(0,l.kt)("h3",{id:"inputs-935"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-935"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-935"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-935"},"Further Readings"),(0,l.kt)("h2",{id:"design-most-recently-used-queue"},"Design Most Recently Used Queue"),(0,l.kt)("span",{class:"tag-is-success"},"Array"),(0,l.kt)("span",{class:"tag-is-success"},"Hash Table"),(0,l.kt)("span",{class:"tag-is-success"},"Stack"),(0,l.kt)("span",{class:"tag-is-success"},"Design"),(0,l.kt)("span",{class:"tag-is-success"},"Binary Indexed Tree"),(0,l.kt)("span",{class:"tag-is-success"},"Ordered Set"),(0,l.kt)("h3",{id:"inputs-936"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-936"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-936"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-936"},"Further Readings"),(0,l.kt)("h2",{id:"count-number-of-homogenous-substrings"},"Count Number of Homogenous Substrings"),(0,l.kt)("span",{class:"tag-is-success"},"Math"),(0,l.kt)("span",{class:"tag-is-success"},"String"),(0,l.kt)("h3",{id:"inputs-937"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-937"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-937"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-937"},"Further Readings"),(0,l.kt)("h2",{id:"minimum-limit-of-balls-in-a-bag"},"Minimum Limit of Balls in a Bag"),(0,l.kt)("span",{class:"tag-is-success"},"Array"),(0,l.kt)("span",{class:"tag-is-success"},"Binary Search"),(0,l.kt)("h3",{id:"inputs-938"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-938"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-938"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-938"},"Further Readings"),(0,l.kt)("h2",{id:"buildings-with-an-ocean-view"},"Buildings With an Ocean View"),(0,l.kt)("span",{class:"tag-is-success"},"Array"),(0,l.kt)("span",{class:"tag-is-success"},"Stack"),(0,l.kt)("span",{class:"tag-is-success"},"Monotonic Stack"),(0,l.kt)("h3",{id:"inputs-939"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-939"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-939"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-939"},"Further Readings"),(0,l.kt)("h2",{id:"form-array-by-concatenating-subarrays-of-another-array"},"Form Array by Concatenating Subarrays of Another Array"),(0,l.kt)("span",{class:"tag-is-success"},"Array"),(0,l.kt)("span",{class:"tag-is-success"},"Greedy"),(0,l.kt)("span",{class:"tag-is-success"},"String Matching"),(0,l.kt)("h3",{id:"inputs-940"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-940"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-940"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-940"},"Further Readings"),(0,l.kt)("h2",{id:"map-of-highest-peak"},"Map of Highest Peak"),(0,l.kt)("span",{class:"tag-is-success"},"Array"),(0,l.kt)("span",{class:"tag-is-success"},"Breadth-First Search"),(0,l.kt)("span",{class:"tag-is-success"},"Matrix"),(0,l.kt)("h3",{id:"inputs-941"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-941"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-941"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-941"},"Further Readings"),(0,l.kt)("h2",{id:"minimum-number-of-operations-to-move-all-balls-to-each-box"},"Minimum Number of Operations to Move All Balls to Each Box"),(0,l.kt)("span",{class:"tag-is-success"},"Array"),(0,l.kt)("span",{class:"tag-is-success"},"String"),(0,l.kt)("h3",{id:"inputs-942"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-942"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-942"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-942"},"Further Readings"),(0,l.kt)("h2",{id:"maximum-score-from-performing-multiplication-operations"},"Maximum Score from Performing Multiplication Operations"),(0,l.kt)("span",{class:"tag-is-success"},"Array"),(0,l.kt)("span",{class:"tag-is-success"},"Dynamic Programming"),(0,l.kt)("h3",{id:"inputs-943"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-943"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-943"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-943"},"Further Readings"),(0,l.kt)("h2",{id:"sort-features-by-popularity"},"Sort Features by Popularity"),(0,l.kt)("span",{class:"tag-is-success"},"Array"),(0,l.kt)("span",{class:"tag-is-success"},"Hash Table"),(0,l.kt)("span",{class:"tag-is-success"},"String"),(0,l.kt)("span",{class:"tag-is-success"},"Sorting"),(0,l.kt)("h3",{id:"inputs-944"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-944"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-944"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-944"},"Further Readings"),(0,l.kt)("h2",{id:"closest-dessert-cost"},"Closest Dessert Cost"),(0,l.kt)("span",{class:"tag-is-success"},"Array"),(0,l.kt)("span",{class:"tag-is-success"},"Dynamic Programming"),(0,l.kt)("span",{class:"tag-is-success"},"Backtracking"),(0,l.kt)("h3",{id:"inputs-945"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-945"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-945"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-945"},"Further Readings"),(0,l.kt)("h2",{id:"equal-sum-arrays-with-minimum-number-of-operations"},"Equal Sum Arrays With Minimum Number of Operations"),(0,l.kt)("span",{class:"tag-is-success"},"Array"),(0,l.kt)("span",{class:"tag-is-success"},"Hash Table"),(0,l.kt)("span",{class:"tag-is-success"},"Greedy"),(0,l.kt)("span",{class:"tag-is-success"},"Counting"),(0,l.kt)("h3",{id:"inputs-946"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-946"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-946"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-946"},"Further Readings"),(0,l.kt)("h2",{id:"shortest-path-in-a-hidden-grid"},"Shortest Path in a Hidden Grid"),(0,l.kt)("span",{class:"tag-is-success"},"Depth-First Search"),(0,l.kt)("span",{class:"tag-is-success"},"Breadth-First Search"),(0,l.kt)("span",{class:"tag-is-success"},"Graph"),(0,l.kt)("span",{class:"tag-is-success"},"Interactive"),(0,l.kt)("h3",{id:"inputs-947"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-947"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-947"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-947"},"Further Readings"),(0,l.kt)("h2",{id:"check-if-number-is-a-sum-of-powers-of-three"},"Check if Number is a Sum of Powers of Three"),(0,l.kt)("span",{class:"tag-is-success"},"Math"),(0,l.kt)("h3",{id:"inputs-948"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-948"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-948"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-948"},"Further Readings"),(0,l.kt)("h2",{id:"sum-of-beauty-of-all-substrings"},"Sum of Beauty of All Substrings"),(0,l.kt)("span",{class:"tag-is-success"},"Hash Table"),(0,l.kt)("span",{class:"tag-is-success"},"String"),(0,l.kt)("span",{class:"tag-is-success"},"Counting"),(0,l.kt)("h3",{id:"inputs-949"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-949"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-949"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-949"},"Further Readings"),(0,l.kt)("h2",{id:"grand-slam-titles"},"Grand Slam Titles"),(0,l.kt)("span",{class:"tag-is-success"},"Database"),(0,l.kt)("h3",{id:"inputs-950"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-950"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-950"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-950"},"Further Readings"),(0,l.kt)("h2",{id:"minimum-elements-to-add-to-form-a-given-sum"},"Minimum Elements to Add to Form a Given Sum"),(0,l.kt)("span",{class:"tag-is-success"},"Array"),(0,l.kt)("span",{class:"tag-is-success"},"Greedy"),(0,l.kt)("h3",{id:"inputs-951"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-951"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-951"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-951"},"Further Readings"),(0,l.kt)("h2",{id:"number-of-restricted-paths-from-first-to-last-node"},"Number of Restricted Paths From First to Last Node"),(0,l.kt)("span",{class:"tag-is-success"},"Dynamic Programming"),(0,l.kt)("span",{class:"tag-is-success"},"Graph"),(0,l.kt)("span",{class:"tag-is-success"},"Topological Sort"),(0,l.kt)("span",{class:"tag-is-success"},"Heap (Priority Queue)"),(0,l.kt)("span",{class:"tag-is-success"},"Shortest Path"),(0,l.kt)("h3",{id:"inputs-952"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-952"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-952"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-952"},"Further Readings"),(0,l.kt)("h2",{id:"maximum-average-pass-ratio"},"Maximum Average Pass Ratio"),(0,l.kt)("span",{class:"tag-is-success"},"Array"),(0,l.kt)("span",{class:"tag-is-success"},"Greedy"),(0,l.kt)("span",{class:"tag-is-success"},"Heap (Priority Queue)"),(0,l.kt)("h3",{id:"inputs-953"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-953"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-953"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-953"},"Further Readings"),(0,l.kt)("h2",{id:"count-pairs-of-equal-substrings-with-minimum-difference"},"Count Pairs of Equal Substrings With Minimum Difference"),(0,l.kt)("span",{class:"tag-is-success"},"Hash Table"),(0,l.kt)("span",{class:"tag-is-success"},"String"),(0,l.kt)("span",{class:"tag-is-success"},"Greedy"),(0,l.kt)("h3",{id:"inputs-954"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-954"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-954"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-954"},"Further Readings"),(0,l.kt)("h2",{id:"design-authentication-manager"},"Design Authentication Manager"),(0,l.kt)("span",{class:"tag-is-success"},"Hash Table"),(0,l.kt)("span",{class:"tag-is-success"},"Design"),(0,l.kt)("h3",{id:"inputs-955"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-955"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-955"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-955"},"Further Readings"),(0,l.kt)("h2",{id:"maximum-number-of-consecutive-values-you-can-make"},"Maximum Number of Consecutive Values You Can Make"),(0,l.kt)("span",{class:"tag-is-success"},"Array"),(0,l.kt)("span",{class:"tag-is-success"},"Greedy"),(0,l.kt)("h3",{id:"inputs-956"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-956"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-956"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-956"},"Further Readings"),(0,l.kt)("h2",{id:"number-of-orders-in-the-backlog"},"Number of Orders in the Backlog"),(0,l.kt)("span",{class:"tag-is-success"},"Array"),(0,l.kt)("span",{class:"tag-is-success"},"Heap (Priority Queue)"),(0,l.kt)("span",{class:"tag-is-success"},"Simulation"),(0,l.kt)("h3",{id:"inputs-957"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-957"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-957"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-957"},"Further Readings"),(0,l.kt)("h2",{id:"maximum-value-at-a-given-index-in-a-bounded-array"},"Maximum Value at a Given Index in a Bounded Array"),(0,l.kt)("span",{class:"tag-is-success"},"Binary Search"),(0,l.kt)("span",{class:"tag-is-success"},"Greedy"),(0,l.kt)("h3",{id:"inputs-958"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-958"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-958"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-958"},"Further Readings"),(0,l.kt)("h2",{id:"implement-trie-ii-prefix-tree"},"Implement Trie II (Prefix Tree)"),(0,l.kt)("span",{class:"tag-is-success"},"Hash Table"),(0,l.kt)("span",{class:"tag-is-success"},"String"),(0,l.kt)("span",{class:"tag-is-success"},"Design"),(0,l.kt)("span",{class:"tag-is-success"},"Trie"),(0,l.kt)("h3",{id:"inputs-959"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-959"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-959"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-959"},"Further Readings"),(0,l.kt)("h2",{id:"minimum-number-of-operations-to-reinitialize-a-permutation"},"Minimum Number of Operations to Reinitialize a Permutation"),(0,l.kt)("span",{class:"tag-is-success"},"Array"),(0,l.kt)("span",{class:"tag-is-success"},"Math"),(0,l.kt)("span",{class:"tag-is-success"},"Simulation"),(0,l.kt)("h3",{id:"inputs-960"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-960"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-960"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-960"},"Further Readings"),(0,l.kt)("h2",{id:"evaluate-the-bracket-pairs-of-a-string"},"Evaluate the Bracket Pairs of a String"),(0,l.kt)("span",{class:"tag-is-success"},"Array"),(0,l.kt)("span",{class:"tag-is-success"},"Hash Table"),(0,l.kt)("span",{class:"tag-is-success"},"String"),(0,l.kt)("h3",{id:"inputs-961"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-961"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-961"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-961"},"Further Readings"),(0,l.kt)("h2",{id:"minimum-path-cost-in-a-hidden-grid"},"Minimum Path Cost in a Hidden Grid"),(0,l.kt)("span",{class:"tag-is-success"},"Depth-First Search"),(0,l.kt)("span",{class:"tag-is-success"},"Breadth-First Search"),(0,l.kt)("span",{class:"tag-is-success"},"Graph"),(0,l.kt)("span",{class:"tag-is-success"},"Heap (Priority Queue)"),(0,l.kt)("span",{class:"tag-is-success"},"Interactive"),(0,l.kt)("h3",{id:"inputs-962"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-962"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-962"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-962"},"Further Readings"),(0,l.kt)("h2",{id:"find-interview-candidates"},"Find Interview Candidates"),(0,l.kt)("span",{class:"tag-is-success"},"Database"),(0,l.kt)("h3",{id:"inputs-963"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-963"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-963"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-963"},"Further Readings"),(0,l.kt)("h2",{id:"sentence-similarity-iii"},"Sentence Similarity III"),(0,l.kt)("span",{class:"tag-is-success"},"Array"),(0,l.kt)("span",{class:"tag-is-success"},"Two Pointers"),(0,l.kt)("span",{class:"tag-is-success"},"String"),(0,l.kt)("h3",{id:"inputs-964"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-964"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-964"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-964"},"Further Readings"),(0,l.kt)("h2",{id:"count-nice-pairs-in-an-array"},"Count Nice Pairs in an Array"),(0,l.kt)("span",{class:"tag-is-success"},"Array"),(0,l.kt)("span",{class:"tag-is-success"},"Hash Table"),(0,l.kt)("span",{class:"tag-is-success"},"Math"),(0,l.kt)("span",{class:"tag-is-success"},"Counting"),(0,l.kt)("h3",{id:"inputs-965"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-965"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-965"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-965"},"Further Readings"),(0,l.kt)("h2",{id:"finding-the-users-active-minutes"},"Finding the Users Active Minutes"),(0,l.kt)("span",{class:"tag-is-success"},"Array"),(0,l.kt)("span",{class:"tag-is-success"},"Hash Table"),(0,l.kt)("h3",{id:"inputs-966"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-966"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-966"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-966"},"Further Readings"),(0,l.kt)("h2",{id:"minimum-absolute-sum-difference"},"Minimum Absolute Sum Difference"),(0,l.kt)("span",{class:"tag-is-success"},"Array"),(0,l.kt)("span",{class:"tag-is-success"},"Binary Search"),(0,l.kt)("span",{class:"tag-is-success"},"Sorting"),(0,l.kt)("span",{class:"tag-is-success"},"Ordered Set"),(0,l.kt)("h3",{id:"inputs-967"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-967"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-967"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-967"},"Further Readings"),(0,l.kt)("h2",{id:"maximum-number-of-accepted-invitations"},"Maximum Number of Accepted Invitations"),(0,l.kt)("span",{class:"tag-is-success"},"Array"),(0,l.kt)("span",{class:"tag-is-success"},"Backtracking"),(0,l.kt)("span",{class:"tag-is-success"},"Matrix"),(0,l.kt)("h3",{id:"inputs-968"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-968"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-968"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-968"},"Further Readings"),(0,l.kt)("h2",{id:"find-the-winner-of-the-circular-game"},"Find the Winner of the Circular Game"),(0,l.kt)("span",{class:"tag-is-success"},"Array"),(0,l.kt)("span",{class:"tag-is-success"},"Math"),(0,l.kt)("span",{class:"tag-is-success"},"Recursion"),(0,l.kt)("span",{class:"tag-is-success"},"Queue"),(0,l.kt)("span",{class:"tag-is-success"},"Simulation"),(0,l.kt)("h3",{id:"inputs-969"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-969"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-969"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-969"},"Further Readings"),(0,l.kt)("h2",{id:"minimum-sideway-jumps"},"Minimum Sideway Jumps"),(0,l.kt)("span",{class:"tag-is-success"},"Array"),(0,l.kt)("span",{class:"tag-is-success"},"Dynamic Programming"),(0,l.kt)("span",{class:"tag-is-success"},"Greedy"),(0,l.kt)("h3",{id:"inputs-970"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-970"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-970"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-970"},"Further Readings"),(0,l.kt)("h2",{id:"queries-on-number-of-points-inside-a-circle"},"Queries on Number of Points Inside a Circle"),(0,l.kt)("span",{class:"tag-is-success"},"Array"),(0,l.kt)("span",{class:"tag-is-success"},"Math"),(0,l.kt)("span",{class:"tag-is-success"},"Geometry"),(0,l.kt)("h3",{id:"inputs-971"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-971"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-971"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-971"},"Further Readings"),(0,l.kt)("h2",{id:"maximum-xor-for-each-query"},"Maximum XOR for Each Query"),(0,l.kt)("span",{class:"tag-is-success"},"Array"),(0,l.kt)("span",{class:"tag-is-success"},"Bit Manipulation"),(0,l.kt)("span",{class:"tag-is-success"},"Prefix Sum"),(0,l.kt)("h3",{id:"inputs-972"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-972"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-972"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-972"},"Further Readings"),(0,l.kt)("h2",{id:"maximum-transaction-each-day"},"Maximum Transaction Each Day"),(0,l.kt)("span",{class:"tag-is-success"},"Database"),(0,l.kt)("h3",{id:"inputs-973"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-973"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-973"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-973"},"Further Readings"),(0,l.kt)("h2",{id:"maximum-ice-cream-bars"},"Maximum Ice Cream Bars"),(0,l.kt)("span",{class:"tag-is-success"},"Array"),(0,l.kt)("span",{class:"tag-is-success"},"Greedy"),(0,l.kt)("span",{class:"tag-is-success"},"Sorting"),(0,l.kt)("h3",{id:"inputs-974"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-974"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-974"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-974"},"Further Readings"),(0,l.kt)("h2",{id:"single-threaded-cpu"},"Single-Threaded CPU"),(0,l.kt)("span",{class:"tag-is-success"},"Array"),(0,l.kt)("span",{class:"tag-is-success"},"Sorting"),(0,l.kt)("span",{class:"tag-is-success"},"Heap (Priority Queue)"),(0,l.kt)("h3",{id:"inputs-975"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-975"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-975"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-975"},"Further Readings"),(0,l.kt)("h2",{id:"remove-duplicates-from-an-unsorted-linked-list"},"Remove Duplicates From an Unsorted Linked List"),(0,l.kt)("span",{class:"tag-is-success"},"Hash Table"),(0,l.kt)("span",{class:"tag-is-success"},"Linked List"),(0,l.kt)("h3",{id:"inputs-976"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-976"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-976"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-976"},"Further Readings"),(0,l.kt)("h2",{id:"frequency-of-the-most-frequent-element"},"Frequency of the Most Frequent Element"),(0,l.kt)("span",{class:"tag-is-success"},"Array"),(0,l.kt)("span",{class:"tag-is-success"},"Binary Search"),(0,l.kt)("span",{class:"tag-is-success"},"Greedy"),(0,l.kt)("span",{class:"tag-is-success"},"Sliding Window"),(0,l.kt)("span",{class:"tag-is-success"},"Sorting"),(0,l.kt)("span",{class:"tag-is-success"},"Prefix Sum"),(0,l.kt)("h3",{id:"inputs-977"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-977"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-977"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-977"},"Further Readings"),(0,l.kt)("h2",{id:"longest-substring-of-all-vowels-in-order"},"Longest Substring Of All Vowels in Order"),(0,l.kt)("span",{class:"tag-is-success"},"String"),(0,l.kt)("span",{class:"tag-is-success"},"Sliding Window"),(0,l.kt)("h3",{id:"inputs-978"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-978"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-978"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-978"},"Further Readings"),(0,l.kt)("h2",{id:"league-statistics"},"League Statistics"),(0,l.kt)("span",{class:"tag-is-success"},"Database"),(0,l.kt)("h3",{id:"inputs-979"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-979"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-979"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-979"},"Further Readings"),(0,l.kt)("h2",{id:"suspicious-bank-accounts"},"Suspicious Bank Accounts"),(0,l.kt)("span",{class:"tag-is-success"},"Database"),(0,l.kt)("h3",{id:"inputs-980"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-980"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-980"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-980"},"Further Readings"),(0,l.kt)("h2",{id:"seat-reservation-manager"},"Seat Reservation Manager"),(0,l.kt)("span",{class:"tag-is-success"},"Design"),(0,l.kt)("span",{class:"tag-is-success"},"Heap (Priority Queue)"),(0,l.kt)("h3",{id:"inputs-981"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-981"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-981"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-981"},"Further Readings"),(0,l.kt)("h2",{id:"maximum-element-after-decreasing-and-rearranging"},"Maximum Element After Decreasing and Rearranging"),(0,l.kt)("span",{class:"tag-is-success"},"Array"),(0,l.kt)("span",{class:"tag-is-success"},"Greedy"),(0,l.kt)("span",{class:"tag-is-success"},"Sorting"),(0,l.kt)("h3",{id:"inputs-982"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-982"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-982"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-982"},"Further Readings"),(0,l.kt)("h2",{id:"splitting-a-string-into-descending-consecutive-values"},"Splitting a String Into Descending Consecutive Values"),(0,l.kt)("span",{class:"tag-is-success"},"String"),(0,l.kt)("span",{class:"tag-is-success"},"Backtracking"),(0,l.kt)("h3",{id:"inputs-983"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-983"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-983"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-983"},"Further Readings"),(0,l.kt)("h2",{id:"minimum-adjacent-swaps-to-reach-the-kth-smallest-number"},"Minimum Adjacent Swaps to Reach the Kth Smallest Number"),(0,l.kt)("span",{class:"tag-is-success"},"Two Pointers"),(0,l.kt)("span",{class:"tag-is-success"},"String"),(0,l.kt)("span",{class:"tag-is-success"},"Greedy"),(0,l.kt)("h3",{id:"inputs-984"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-984"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-984"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-984"},"Further Readings"),(0,l.kt)("h2",{id:"distinct-numbers-in-each-subarray"},"Distinct Numbers in Each Subarray"),(0,l.kt)("span",{class:"tag-is-success"},"Array"),(0,l.kt)("span",{class:"tag-is-success"},"Hash Table"),(0,l.kt)("span",{class:"tag-is-success"},"Sliding Window"),(0,l.kt)("h3",{id:"inputs-985"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-985"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-985"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-985"},"Further Readings"),(0,l.kt)("h2",{id:"maximum-distance-between-a-pair-of-values"},"Maximum Distance Between a Pair of Values"),(0,l.kt)("span",{class:"tag-is-success"},"Array"),(0,l.kt)("span",{class:"tag-is-success"},"Two Pointers"),(0,l.kt)("span",{class:"tag-is-success"},"Binary Search"),(0,l.kt)("span",{class:"tag-is-success"},"Greedy"),(0,l.kt)("h3",{id:"inputs-986"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-986"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-986"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-986"},"Further Readings"),(0,l.kt)("h2",{id:"maximum-subarray-min-product"},"Maximum Subarray Min-Product"),(0,l.kt)("span",{class:"tag-is-success"},"Array"),(0,l.kt)("span",{class:"tag-is-success"},"Stack"),(0,l.kt)("span",{class:"tag-is-success"},"Monotonic Stack"),(0,l.kt)("span",{class:"tag-is-success"},"Prefix Sum"),(0,l.kt)("h3",{id:"inputs-987"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-987"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-987"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-987"},"Further Readings"),(0,l.kt)("h2",{id:"longest-word-with-all-prefixes"},"Longest Word With All Prefixes"),(0,l.kt)("span",{class:"tag-is-success"},"Depth-First Search"),(0,l.kt)("span",{class:"tag-is-success"},"Trie"),(0,l.kt)("h3",{id:"inputs-988"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-988"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-988"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-988"},"Further Readings"),(0,l.kt)("h2",{id:"incremental-memory-leak"},"Incremental Memory Leak"),(0,l.kt)("span",{class:"tag-is-success"},"Simulation"),(0,l.kt)("h3",{id:"inputs-989"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-989"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-989"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-989"},"Further Readings"),(0,l.kt)("h2",{id:"rotating-the-box"},"Rotating the Box"),(0,l.kt)("span",{class:"tag-is-success"},"Array"),(0,l.kt)("span",{class:"tag-is-success"},"Two Pointers"),(0,l.kt)("span",{class:"tag-is-success"},"Matrix"),(0,l.kt)("h3",{id:"inputs-990"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-990"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-990"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-990"},"Further Readings"),(0,l.kt)("h2",{id:"minimum-number-of-swaps-to-make-the-binary-string-alternating"},"Minimum Number of Swaps to Make the Binary String Alternating"),(0,l.kt)("span",{class:"tag-is-success"},"String"),(0,l.kt)("span",{class:"tag-is-success"},"Greedy"),(0,l.kt)("h3",{id:"inputs-991"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-991"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-991"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-991"},"Further Readings"),(0,l.kt)("h2",{id:"finding-pairs-with-a-certain-sum"},"Finding Pairs With a Certain Sum"),(0,l.kt)("span",{class:"tag-is-success"},"Array"),(0,l.kt)("span",{class:"tag-is-success"},"Hash Table"),(0,l.kt)("span",{class:"tag-is-success"},"Design"),(0,l.kt)("h3",{id:"inputs-992"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-992"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-992"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-992"},"Further Readings"),(0,l.kt)("h2",{id:"orders-with-maximum-quantity-above-average"},"Orders With Maximum Quantity Above Average"),(0,l.kt)("span",{class:"tag-is-success"},"Database"),(0,l.kt)("h3",{id:"inputs-993"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-993"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-993"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-993"},"Further Readings"),(0,l.kt)("h2",{id:"product-of-two-run-length-encoded-arrays"},"Product of Two Run-Length Encoded Arrays"),(0,l.kt)("span",{class:"tag-is-success"},"Array"),(0,l.kt)("span",{class:"tag-is-success"},"Two Pointers"),(0,l.kt)("h3",{id:"inputs-994"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-994"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-994"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-994"},"Further Readings"),(0,l.kt)("h2",{id:"minimum-speed-to-arrive-on-time"},"Minimum Speed to Arrive on Time"),(0,l.kt)("span",{class:"tag-is-success"},"Array"),(0,l.kt)("span",{class:"tag-is-success"},"Binary Search"),(0,l.kt)("h3",{id:"inputs-995"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-995"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-995"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-995"},"Further Readings"),(0,l.kt)("h2",{id:"jump-game-vii"},"Jump Game VII"),(0,l.kt)("span",{class:"tag-is-success"},"Two Pointers"),(0,l.kt)("span",{class:"tag-is-success"},"String"),(0,l.kt)("span",{class:"tag-is-success"},"Prefix Sum"),(0,l.kt)("h3",{id:"inputs-996"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-996"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-996"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-996"},"Further Readings"),(0,l.kt)("h2",{id:"minimize-product-sum-of-two-arrays"},"Minimize Product Sum of Two Arrays"),(0,l.kt)("span",{class:"tag-is-success"},"Array"),(0,l.kt)("span",{class:"tag-is-success"},"Greedy"),(0,l.kt)("span",{class:"tag-is-success"},"Sorting"),(0,l.kt)("h3",{id:"inputs-997"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-997"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-997"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-997"},"Further Readings"),(0,l.kt)("h2",{id:"group-employees-of-the-same-salary"},"Group Employees of the Same Salary"),(0,l.kt)("span",{class:"tag-is-success"},"Database"),(0,l.kt)("h3",{id:"inputs-998"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-998"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-998"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-998"},"Further Readings"),(0,l.kt)("h2",{id:"minimize-maximum-pair-sum-in-array"},"Minimize Maximum Pair Sum in Array"),(0,l.kt)("span",{class:"tag-is-success"},"Array"),(0,l.kt)("span",{class:"tag-is-success"},"Two Pointers"),(0,l.kt)("span",{class:"tag-is-success"},"Greedy"),(0,l.kt)("span",{class:"tag-is-success"},"Sorting"),(0,l.kt)("h3",{id:"inputs-999"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-999"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-999"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-999"},"Further Readings"),(0,l.kt)("h2",{id:"get-biggest-three-rhombus-sums-in-a-grid"},"Get Biggest Three Rhombus Sums in a Grid"),(0,l.kt)("span",{class:"tag-is-success"},"Array"),(0,l.kt)("span",{class:"tag-is-success"},"Math"),(0,l.kt)("span",{class:"tag-is-success"},"Sorting"),(0,l.kt)("span",{class:"tag-is-success"},"Heap (Priority Queue)"),(0,l.kt)("span",{class:"tag-is-success"},"Matrix"),(0,l.kt)("span",{class:"tag-is-success"},"Prefix Sum"),(0,l.kt)("h3",{id:"inputs-1000"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-1000"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-1000"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-1000"},"Further Readings"),(0,l.kt)("h2",{id:"maximum-value-after-insertion"},"Maximum Value after Insertion"),(0,l.kt)("span",{class:"tag-is-success"},"String"),(0,l.kt)("span",{class:"tag-is-success"},"Greedy"),(0,l.kt)("h3",{id:"inputs-1001"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-1001"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-1001"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-1001"},"Further Readings"),(0,l.kt)("h2",{id:"process-tasks-using-servers"},"Process Tasks Using Servers"),(0,l.kt)("span",{class:"tag-is-success"},"Array"),(0,l.kt)("span",{class:"tag-is-success"},"Heap (Priority Queue)"),(0,l.kt)("h3",{id:"inputs-1002"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-1002"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-1002"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-1002"},"Further Readings"),(0,l.kt)("h2",{id:"egg-drop-with-2-eggs-and-n-floors"},"Egg Drop With 2 Eggs and N Floors"),(0,l.kt)("span",{class:"tag-is-success"},"Math"),(0,l.kt)("span",{class:"tag-is-success"},"Dynamic Programming"),(0,l.kt)("h3",{id:"inputs-1003"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-1003"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-1003"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-1003"},"Further Readings"),(0,l.kt)("h2",{id:"count-pairs-in-two-arrays"},"Count Pairs in Two Arrays"),(0,l.kt)("span",{class:"tag-is-success"},"Array"),(0,l.kt)("span",{class:"tag-is-success"},"Binary Search"),(0,l.kt)("span",{class:"tag-is-success"},"Sorting"),(0,l.kt)("h3",{id:"inputs-1004"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-1004"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-1004"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-1004"},"Further Readings"),(0,l.kt)("h2",{id:"reduction-operations-to-make-the-array-elements-equal"},"Reduction Operations to Make the Array Elements Equal"),(0,l.kt)("span",{class:"tag-is-success"},"Array"),(0,l.kt)("span",{class:"tag-is-success"},"Sorting"),(0,l.kt)("h3",{id:"inputs-1005"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-1005"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-1005"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-1005"},"Further Readings"),(0,l.kt)("h2",{id:"minimum-number-of-flips-to-make-the-binary-string-alternating"},"Minimum Number of Flips to Make the Binary String Alternating"),(0,l.kt)("span",{class:"tag-is-success"},"String"),(0,l.kt)("span",{class:"tag-is-success"},"Greedy"),(0,l.kt)("h3",{id:"inputs-1006"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-1006"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-1006"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-1006"},"Further Readings"),(0,l.kt)("h2",{id:"cutting-ribbons"},"Cutting Ribbons"),(0,l.kt)("span",{class:"tag-is-success"},"Array"),(0,l.kt)("span",{class:"tag-is-success"},"Binary Search"),(0,l.kt)("h3",{id:"inputs-1007"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-1007"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-1007"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-1007"},"Further Readings"),(0,l.kt)("h2",{id:"find-the-student-that-will-replace-the-chalk"},"Find the Student that Will Replace the Chalk"),(0,l.kt)("span",{class:"tag-is-success"},"Array"),(0,l.kt)("span",{class:"tag-is-success"},"Binary Search"),(0,l.kt)("span",{class:"tag-is-success"},"Simulation"),(0,l.kt)("span",{class:"tag-is-success"},"Prefix Sum"),(0,l.kt)("h3",{id:"inputs-1008"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-1008"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-1008"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-1008"},"Further Readings"),(0,l.kt)("h2",{id:"largest-magic-square"},"Largest Magic Square"),(0,l.kt)("span",{class:"tag-is-success"},"Array"),(0,l.kt)("span",{class:"tag-is-success"},"Matrix"),(0,l.kt)("span",{class:"tag-is-success"},"Prefix Sum"),(0,l.kt)("h3",{id:"inputs-1009"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-1009"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-1009"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-1009"},"Further Readings"),(0,l.kt)("h2",{id:"maximum-number-of-removable-characters"},"Maximum Number of Removable Characters"),(0,l.kt)("span",{class:"tag-is-success"},"Array"),(0,l.kt)("span",{class:"tag-is-success"},"String"),(0,l.kt)("span",{class:"tag-is-success"},"Binary Search"),(0,l.kt)("h3",{id:"inputs-1010"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-1010"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-1010"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-1010"},"Further Readings"),(0,l.kt)("h2",{id:"merge-triplets-to-form-target-triplet"},"Merge Triplets to Form Target Triplet"),(0,l.kt)("span",{class:"tag-is-success"},"Array"),(0,l.kt)("span",{class:"tag-is-success"},"Greedy"),(0,l.kt)("h3",{id:"inputs-1011"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-1011"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-1011"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-1011"},"Further Readings"),(0,l.kt)("h2",{id:"find-a-peak-element-ii"},"Find a Peak Element II"),(0,l.kt)("span",{class:"tag-is-success"},"Array"),(0,l.kt)("span",{class:"tag-is-success"},"Binary Search"),(0,l.kt)("span",{class:"tag-is-success"},"Divide and Conquer"),(0,l.kt)("span",{class:"tag-is-success"},"Matrix"),(0,l.kt)("h3",{id:"inputs-1012"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-1012"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-1012"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-1012"},"Further Readings"),(0,l.kt)("h2",{id:"depth-of-bst-given-insertion-order"},"Depth of BST Given Insertion Order"),(0,l.kt)("span",{class:"tag-is-success"},"Tree"),(0,l.kt)("span",{class:"tag-is-success"},"Binary Search Tree"),(0,l.kt)("span",{class:"tag-is-success"},"Binary Tree"),(0,l.kt)("span",{class:"tag-is-success"},"Ordered Set"),(0,l.kt)("h3",{id:"inputs-1013"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-1013"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-1013"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-1013"},"Further Readings"),(0,l.kt)("h2",{id:"the-number-of-full-rounds-you-have-played"},"The Number of Full Rounds You Have Played"),(0,l.kt)("span",{class:"tag-is-success"},"Math"),(0,l.kt)("span",{class:"tag-is-success"},"String"),(0,l.kt)("h3",{id:"inputs-1014"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-1014"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-1014"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-1014"},"Further Readings"),(0,l.kt)("h2",{id:"count-sub-islands"},"Count Sub Islands"),(0,l.kt)("span",{class:"tag-is-success"},"Array"),(0,l.kt)("span",{class:"tag-is-success"},"Depth-First Search"),(0,l.kt)("span",{class:"tag-is-success"},"Breadth-First Search"),(0,l.kt)("span",{class:"tag-is-success"},"Union Find"),(0,l.kt)("span",{class:"tag-is-success"},"Matrix"),(0,l.kt)("h3",{id:"inputs-1015"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-1015"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-1015"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-1015"},"Further Readings"),(0,l.kt)("h2",{id:"minimum-absolute-difference-queries"},"Minimum Absolute Difference Queries"),(0,l.kt)("span",{class:"tag-is-success"},"Array"),(0,l.kt)("span",{class:"tag-is-success"},"Hash Table"),(0,l.kt)("h3",{id:"inputs-1016"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-1016"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-1016"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-1016"},"Further Readings"),(0,l.kt)("h2",{id:"count-salary-categories"},"Count Salary Categories"),(0,l.kt)("span",{class:"tag-is-success"},"Database"),(0,l.kt)("h3",{id:"inputs-1017"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-1017"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-1017"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-1017"},"Further Readings"),(0,l.kt)("h2",{id:"game-of-nim"},"Game of Nim"),(0,l.kt)("span",{class:"tag-is-success"},"Array"),(0,l.kt)("span",{class:"tag-is-success"},"Math"),(0,l.kt)("span",{class:"tag-is-success"},"Dynamic Programming"),(0,l.kt)("span",{class:"tag-is-success"},"Bit Manipulation"),(0,l.kt)("span",{class:"tag-is-success"},"Brainteaser"),(0,l.kt)("span",{class:"tag-is-success"},"Game Theory"),(0,l.kt)("h3",{id:"inputs-1018"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-1018"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-1018"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-1018"},"Further Readings"),(0,l.kt)("h2",{id:"remove-all-occurrences-of-a-substring"},"Remove All Occurrences of a Substring"),(0,l.kt)("span",{class:"tag-is-success"},"String"),(0,l.kt)("h3",{id:"inputs-1019"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-1019"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-1019"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-1019"},"Further Readings"),(0,l.kt)("h2",{id:"maximum-alternating-subsequence-sum"},"Maximum Alternating Subsequence Sum"),(0,l.kt)("span",{class:"tag-is-success"},"Array"),(0,l.kt)("span",{class:"tag-is-success"},"Dynamic Programming"),(0,l.kt)("h3",{id:"inputs-1020"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-1020"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-1020"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-1020"},"Further Readings"),(0,l.kt)("h2",{id:"cyclically-rotating-a-grid"},"Cyclically Rotating a Grid"),(0,l.kt)("span",{class:"tag-is-success"},"Array"),(0,l.kt)("span",{class:"tag-is-success"},"Matrix"),(0,l.kt)("span",{class:"tag-is-success"},"Simulation"),(0,l.kt)("h3",{id:"inputs-1021"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-1021"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-1021"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-1021"},"Further Readings"),(0,l.kt)("h2",{id:"number-of-wonderful-substrings"},"Number of Wonderful Substrings"),(0,l.kt)("span",{class:"tag-is-success"},"Hash Table"),(0,l.kt)("span",{class:"tag-is-success"},"String"),(0,l.kt)("span",{class:"tag-is-success"},"Bit Manipulation"),(0,l.kt)("span",{class:"tag-is-success"},"Prefix Sum"),(0,l.kt)("h3",{id:"inputs-1022"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-1022"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-1022"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-1022"},"Further Readings"),(0,l.kt)("h2",{id:"kth-smallest-subarray-sum"},"Kth Smallest Subarray Sum"),(0,l.kt)("span",{class:"tag-is-success"},"Array"),(0,l.kt)("span",{class:"tag-is-success"},"Binary Search"),(0,l.kt)("span",{class:"tag-is-success"},"Sliding Window"),(0,l.kt)("h3",{id:"inputs-1023"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-1023"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-1023"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-1023"},"Further Readings"),(0,l.kt)("h2",{id:"eliminate-maximum-number-of-monsters"},"Eliminate Maximum Number of Monsters"),(0,l.kt)("span",{class:"tag-is-success"},"Array"),(0,l.kt)("span",{class:"tag-is-success"},"Greedy"),(0,l.kt)("span",{class:"tag-is-success"},"Sorting"),(0,l.kt)("h3",{id:"inputs-1024"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-1024"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-1024"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-1024"},"Further Readings"),(0,l.kt)("h2",{id:"count-good-numbers"},"Count Good Numbers"),(0,l.kt)("span",{class:"tag-is-success"},"Math"),(0,l.kt)("span",{class:"tag-is-success"},"Recursion"),(0,l.kt)("h3",{id:"inputs-1025"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-1025"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-1025"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-1025"},"Further Readings"),(0,l.kt)("h2",{id:"nearest-exit-from-entrance-in-maze"},"Nearest Exit from Entrance in Maze"),(0,l.kt)("span",{class:"tag-is-success"},"Array"),(0,l.kt)("span",{class:"tag-is-success"},"Breadth-First Search"),(0,l.kt)("span",{class:"tag-is-success"},"Matrix"),(0,l.kt)("h3",{id:"inputs-1026"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-1026"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-1026"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-1026"},"Further Readings"),(0,l.kt)("h2",{id:"sum-game"},"Sum Game"),(0,l.kt)("span",{class:"tag-is-success"},"Math"),(0,l.kt)("span",{class:"tag-is-success"},"Greedy"),(0,l.kt)("span",{class:"tag-is-success"},"Game Theory"),(0,l.kt)("h3",{id:"inputs-1027"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-1027"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-1027"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-1027"},"Further Readings"),(0,l.kt)("h2",{id:"unique-length-3-palindromic-subsequences"},"Unique Length-3 Palindromic Subsequences"),(0,l.kt)("span",{class:"tag-is-success"},"Hash Table"),(0,l.kt)("span",{class:"tag-is-success"},"String"),(0,l.kt)("span",{class:"tag-is-success"},"Prefix Sum"),(0,l.kt)("h3",{id:"inputs-1028"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-1028"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-1028"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-1028"},"Further Readings"),(0,l.kt)("h2",{id:"confirmation-rate"},"Confirmation Rate"),(0,l.kt)("span",{class:"tag-is-success"},"Database"),(0,l.kt)("h3",{id:"inputs-1029"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-1029"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-1029"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-1029"},"Further Readings"),(0,l.kt)("h2",{id:"add-minimum-number-of-rungs"},"Add Minimum Number of Rungs"),(0,l.kt)("span",{class:"tag-is-success"},"Array"),(0,l.kt)("span",{class:"tag-is-success"},"Greedy"),(0,l.kt)("h3",{id:"inputs-1030"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-1030"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-1030"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-1030"},"Further Readings"),(0,l.kt)("h2",{id:"maximum-number-of-points-with-cost"},"Maximum Number of Points with Cost"),(0,l.kt)("span",{class:"tag-is-success"},"Array"),(0,l.kt)("span",{class:"tag-is-success"},"Dynamic Programming"),(0,l.kt)("h3",{id:"inputs-1031"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-1031"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-1031"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-1031"},"Further Readings"),(0,l.kt)("h2",{id:"longest-common-subsequence-between-sorted-arrays"},"Longest Common Subsequence Between Sorted Arrays"),(0,l.kt)("span",{class:"tag-is-success"},"Array"),(0,l.kt)("span",{class:"tag-is-success"},"Hash Table"),(0,l.kt)("span",{class:"tag-is-success"},"Counting"),(0,l.kt)("h3",{id:"inputs-1032"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-1032"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-1032"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-1032"},"Further Readings"),(0,l.kt)("h2",{id:"the-number-of-the-smallest-unoccupied-chair"},"The Number of the Smallest Unoccupied Chair"),(0,l.kt)("span",{class:"tag-is-success"},"Array"),(0,l.kt)("span",{class:"tag-is-success"},"Heap (Priority Queue)"),(0,l.kt)("span",{class:"tag-is-success"},"Ordered Set"),(0,l.kt)("h3",{id:"inputs-1033"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-1033"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-1033"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-1033"},"Further Readings"),(0,l.kt)("h2",{id:"describe-the-painting"},"Describe the Painting"),(0,l.kt)("span",{class:"tag-is-success"},"Array"),(0,l.kt)("span",{class:"tag-is-success"},"Prefix Sum"),(0,l.kt)("h3",{id:"inputs-1034"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-1034"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-1034"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-1034"},"Further Readings"),(0,l.kt)("h2",{id:"largest-number-after-mutating-substring"},"Largest Number After Mutating Substring"),(0,l.kt)("span",{class:"tag-is-success"},"Array"),(0,l.kt)("span",{class:"tag-is-success"},"String"),(0,l.kt)("span",{class:"tag-is-success"},"Greedy"),(0,l.kt)("h3",{id:"inputs-1035"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-1035"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-1035"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-1035"},"Further Readings"),(0,l.kt)("h2",{id:"maximum-compatibility-score-sum"},"Maximum Compatibility Score Sum"),(0,l.kt)("span",{class:"tag-is-success"},"Array"),(0,l.kt)("span",{class:"tag-is-success"},"Dynamic Programming"),(0,l.kt)("span",{class:"tag-is-success"},"Backtracking"),(0,l.kt)("span",{class:"tag-is-success"},"Bit Manipulation"),(0,l.kt)("span",{class:"tag-is-success"},"Bitmask"),(0,l.kt)("h3",{id:"inputs-1036"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-1036"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-1036"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-1036"},"Further Readings"),(0,l.kt)("h2",{id:"strong-friendship"},"Strong Friendship"),(0,l.kt)("span",{class:"tag-is-success"},"Database"),(0,l.kt)("h3",{id:"inputs-1037"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-1037"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-1037"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-1037"},"Further Readings"),(0,l.kt)("h2",{id:"maximum-of-minimum-values-in-all-subarrays"},"Maximum of Minimum Values in All Subarrays"),(0,l.kt)("span",{class:"tag-is-success"},"Array"),(0,l.kt)("span",{class:"tag-is-success"},"Stack"),(0,l.kt)("span",{class:"tag-is-success"},"Monotonic Stack"),(0,l.kt)("h3",{id:"inputs-1038"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-1038"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-1038"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-1038"},"Further Readings"),(0,l.kt)("h2",{id:"all-the-pairs-with-the-maximum-number-of-common-followers"},"All the Pairs With the Maximum Number of Common Followers"),(0,l.kt)("span",{class:"tag-is-success"},"Database"),(0,l.kt)("h3",{id:"inputs-1039"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-1039"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-1039"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-1039"},"Further Readings"),(0,l.kt)("h2",{id:"maximum-number-of-weeks-for-which-you-can-work"},"Maximum Number of Weeks for Which You Can Work"),(0,l.kt)("span",{class:"tag-is-success"},"Array"),(0,l.kt)("span",{class:"tag-is-success"},"Greedy"),(0,l.kt)("h3",{id:"inputs-1040"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-1040"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-1040"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-1040"},"Further Readings"),(0,l.kt)("h2",{id:"minimum-garden-perimeter-to-collect-enough-apples"},"Minimum Garden Perimeter to Collect Enough Apples"),(0,l.kt)("span",{class:"tag-is-success"},"Math"),(0,l.kt)("span",{class:"tag-is-success"},"Binary Search"),(0,l.kt)("h3",{id:"inputs-1041"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-1041"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-1041"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-1041"},"Further Readings"),(0,l.kt)("h2",{id:"check-if-move-is-legal"},"Check if Move is Legal"),(0,l.kt)("span",{class:"tag-is-success"},"Array"),(0,l.kt)("span",{class:"tag-is-success"},"Matrix"),(0,l.kt)("span",{class:"tag-is-success"},"Enumeration"),(0,l.kt)("h3",{id:"inputs-1042"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-1042"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-1042"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-1042"},"Further Readings"),(0,l.kt)("h2",{id:"minimum-total-space-wasted-with-k-resizing-operations"},"Minimum Total Space Wasted With K Resizing Operations"),(0,l.kt)("span",{class:"tag-is-success"},"Array"),(0,l.kt)("span",{class:"tag-is-success"},"Dynamic Programming"),(0,l.kt)("h3",{id:"inputs-1043"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-1043"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-1043"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-1043"},"Further Readings"),(0,l.kt)("h2",{id:"remove-stones-to-minimize-the-total"},"Remove Stones to Minimize the Total"),(0,l.kt)("span",{class:"tag-is-success"},"Array"),(0,l.kt)("span",{class:"tag-is-success"},"Heap (Priority Queue)"),(0,l.kt)("h3",{id:"inputs-1044"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-1044"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-1044"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-1044"},"Further Readings"),(0,l.kt)("h2",{id:"minimum-number-of-swaps-to-make-the-string-balanced"},"Minimum Number of Swaps to Make the String Balanced"),(0,l.kt)("span",{class:"tag-is-success"},"Two Pointers"),(0,l.kt)("span",{class:"tag-is-success"},"String"),(0,l.kt)("span",{class:"tag-is-success"},"Stack"),(0,l.kt)("span",{class:"tag-is-success"},"Greedy"),(0,l.kt)("h3",{id:"inputs-1045"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-1045"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-1045"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-1045"},"Further Readings"),(0,l.kt)("h2",{id:"binary-searchable-numbers-in-an-unsorted-array"},"Binary Searchable Numbers in an Unsorted Array"),(0,l.kt)("span",{class:"tag-is-success"},"Array"),(0,l.kt)("span",{class:"tag-is-success"},"Binary Search"),(0,l.kt)("h3",{id:"inputs-1046"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-1046"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-1046"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-1046"},"Further Readings"),(0,l.kt)("h2",{id:"array-with-elements-not-equal-to-average-of-neighbors"},"Array With Elements Not Equal to Average of Neighbors"),(0,l.kt)("span",{class:"tag-is-success"},"Array"),(0,l.kt)("span",{class:"tag-is-success"},"Greedy"),(0,l.kt)("span",{class:"tag-is-success"},"Sorting"),(0,l.kt)("h3",{id:"inputs-1047"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-1047"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-1047"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-1047"},"Further Readings"),(0,l.kt)("h2",{id:"minimum-non-zero-product-of-the-array-elements"},"Minimum Non-Zero Product of the Array Elements"),(0,l.kt)("span",{class:"tag-is-success"},"Math"),(0,l.kt)("span",{class:"tag-is-success"},"Greedy"),(0,l.kt)("span",{class:"tag-is-success"},"Recursion"),(0,l.kt)("h3",{id:"inputs-1048"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-1048"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-1048"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-1048"},"Further Readings"),(0,l.kt)("h2",{id:"count-nodes-equal-to-sum-of-descendants"},"Count Nodes Equal to Sum of Descendants"),(0,l.kt)("span",{class:"tag-is-success"},"Tree"),(0,l.kt)("span",{class:"tag-is-success"},"Depth-First Search"),(0,l.kt)("span",{class:"tag-is-success"},"Binary Search Tree"),(0,l.kt)("span",{class:"tag-is-success"},"Binary Tree"),(0,l.kt)("h3",{id:"inputs-1049"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-1049"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-1049"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-1049"},"Further Readings"),(0,l.kt)("h2",{id:"maximum-matrix-sum"},"Maximum Matrix Sum"),(0,l.kt)("span",{class:"tag-is-success"},"Array"),(0,l.kt)("span",{class:"tag-is-success"},"Greedy"),(0,l.kt)("span",{class:"tag-is-success"},"Matrix"),(0,l.kt)("h3",{id:"inputs-1050"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-1050"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-1050"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-1050"},"Further Readings"),(0,l.kt)("h2",{id:"number-of-ways-to-arrive-at-destination"},"Number of Ways to Arrive at Destination"),(0,l.kt)("span",{class:"tag-is-success"},"Dynamic Programming"),(0,l.kt)("span",{class:"tag-is-success"},"Graph"),(0,l.kt)("span",{class:"tag-is-success"},"Topological Sort"),(0,l.kt)("span",{class:"tag-is-success"},"Shortest Path"),(0,l.kt)("h3",{id:"inputs-1051"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-1051"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-1051"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-1051"},"Further Readings"),(0,l.kt)("h2",{id:"find-unique-binary-string"},"Find Unique Binary String"),(0,l.kt)("span",{class:"tag-is-success"},"Array"),(0,l.kt)("span",{class:"tag-is-success"},"String"),(0,l.kt)("span",{class:"tag-is-success"},"Backtracking"),(0,l.kt)("h3",{id:"inputs-1052"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-1052"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-1052"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-1052"},"Further Readings"),(0,l.kt)("h2",{id:"minimize-the-difference-between-target-and-chosen-elements"},"Minimize the Difference Between Target and Chosen Elements"),(0,l.kt)("span",{class:"tag-is-success"},"Array"),(0,l.kt)("span",{class:"tag-is-success"},"Dynamic Programming"),(0,l.kt)("span",{class:"tag-is-success"},"Matrix"),(0,l.kt)("h3",{id:"inputs-1053"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-1053"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-1053"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-1053"},"Further Readings"),(0,l.kt)("h2",{id:"widest-pair-of-indices-with-equal-range-sum"},"Widest Pair of Indices With Equal Range Sum"),(0,l.kt)("span",{class:"tag-is-success"},"Array"),(0,l.kt)("span",{class:"tag-is-success"},"Hash Table"),(0,l.kt)("span",{class:"tag-is-success"},"Prefix Sum"),(0,l.kt)("h3",{id:"inputs-1054"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-1054"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-1054"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-1054"},"Further Readings"),(0,l.kt)("h2",{id:"find-the-kth-largest-integer-in-the-array"},"Find the Kth Largest Integer in the Array"),(0,l.kt)("span",{class:"tag-is-success"},"Array"),(0,l.kt)("span",{class:"tag-is-success"},"String"),(0,l.kt)("span",{class:"tag-is-success"},"Divide and Conquer"),(0,l.kt)("span",{class:"tag-is-success"},"Sorting"),(0,l.kt)("span",{class:"tag-is-success"},"Heap (Priority Queue)"),(0,l.kt)("span",{class:"tag-is-success"},"Quickselect"),(0,l.kt)("h3",{id:"inputs-1055"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-1055"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-1055"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-1055"},"Further Readings"),(0,l.kt)("h2",{id:"minimum-number-of-work-sessions-to-finish-the-tasks"},"Minimum Number of Work Sessions to Finish the Tasks"),(0,l.kt)("span",{class:"tag-is-success"},"Array"),(0,l.kt)("span",{class:"tag-is-success"},"Dynamic Programming"),(0,l.kt)("span",{class:"tag-is-success"},"Backtracking"),(0,l.kt)("span",{class:"tag-is-success"},"Bit Manipulation"),(0,l.kt)("span",{class:"tag-is-success"},"Bitmask"),(0,l.kt)("h3",{id:"inputs-1056"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-1056"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-1056"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-1056"},"Further Readings"),(0,l.kt)("h2",{id:"find-cutoff-score-for-each-school"},"Find Cutoff Score for Each School"),(0,l.kt)("span",{class:"tag-is-success"},"Database"),(0,l.kt)("h3",{id:"inputs-1057"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-1057"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-1057"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-1057"},"Further Readings"),(0,l.kt)("h2",{id:"maximum-number-of-people-that-can-be-caught-in-tag"},"Maximum Number of People That Can Be Caught in Tag"),(0,l.kt)("span",{class:"tag-is-success"},"Array"),(0,l.kt)("span",{class:"tag-is-success"},"Greedy"),(0,l.kt)("h3",{id:"inputs-1058"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-1058"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-1058"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-1058"},"Further Readings"),(0,l.kt)("h2",{id:"count-the-number-of-experiments"},"Count the Number of Experiments"),(0,l.kt)("span",{class:"tag-is-success"},"Database"),(0,l.kt)("h3",{id:"inputs-1059"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-1059"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-1059"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-1059"},"Further Readings"),(0,l.kt)("h2",{id:"find-all-groups-of-farmland"},"Find All Groups of Farmland"),(0,l.kt)("span",{class:"tag-is-success"},"Array"),(0,l.kt)("span",{class:"tag-is-success"},"Depth-First Search"),(0,l.kt)("span",{class:"tag-is-success"},"Breadth-First Search"),(0,l.kt)("span",{class:"tag-is-success"},"Matrix"),(0,l.kt)("h3",{id:"inputs-1060"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-1060"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-1060"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-1060"},"Further Readings"),(0,l.kt)("h2",{id:"operations-on-tree"},"Operations on Tree"),(0,l.kt)("span",{class:"tag-is-success"},"Hash Table"),(0,l.kt)("span",{class:"tag-is-success"},"Tree"),(0,l.kt)("span",{class:"tag-is-success"},"Breadth-First Search"),(0,l.kt)("span",{class:"tag-is-success"},"Design"),(0,l.kt)("h3",{id:"inputs-1061"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-1061"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-1061"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-1061"},"Further Readings"),(0,l.kt)("h2",{id:"the-number-of-weak-characters-in-the-game"},"The Number of Weak Characters in the Game"),(0,l.kt)("span",{class:"tag-is-success"},"Array"),(0,l.kt)("span",{class:"tag-is-success"},"Stack"),(0,l.kt)("span",{class:"tag-is-success"},"Greedy"),(0,l.kt)("span",{class:"tag-is-success"},"Sorting"),(0,l.kt)("span",{class:"tag-is-success"},"Monotonic Stack"),(0,l.kt)("h3",{id:"inputs-1062"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-1062"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-1062"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-1062"},"Further Readings"),(0,l.kt)("h2",{id:"first-day-where-you-have-been-in-all-the-rooms"},"First Day Where You Have Been in All the Rooms"),(0,l.kt)("span",{class:"tag-is-success"},"Array"),(0,l.kt)("span",{class:"tag-is-success"},"Dynamic Programming"),(0,l.kt)("h3",{id:"inputs-1063"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-1063"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-1063"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-1063"},"Further Readings"),(0,l.kt)("h2",{id:"smallest-greater-multiple-made-of-two-digits"},"Smallest Greater Multiple Made of Two Digits"),(0,l.kt)("span",{class:"tag-is-success"},"Math"),(0,l.kt)("span",{class:"tag-is-success"},"Enumeration"),(0,l.kt)("h3",{id:"inputs-1064"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-1064"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-1064"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-1064"},"Further Readings"),(0,l.kt)("h2",{id:"number-of-pairs-of-interchangeable-rectangles"},"Number of Pairs of Interchangeable Rectangles"),(0,l.kt)("span",{class:"tag-is-success"},"Array"),(0,l.kt)("span",{class:"tag-is-success"},"Hash Table"),(0,l.kt)("span",{class:"tag-is-success"},"Math"),(0,l.kt)("span",{class:"tag-is-success"},"Counting"),(0,l.kt)("span",{class:"tag-is-success"},"Number Theory"),(0,l.kt)("h3",{id:"inputs-1065"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-1065"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-1065"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-1065"},"Further Readings"),(0,l.kt)("h2",{id:"maximum-product-of-the-length-of-two-palindromic-subsequences"},"Maximum Product of the Length of Two Palindromic Subsequences"),(0,l.kt)("span",{class:"tag-is-success"},"String"),(0,l.kt)("span",{class:"tag-is-success"},"Dynamic Programming"),(0,l.kt)("span",{class:"tag-is-success"},"Backtracking"),(0,l.kt)("span",{class:"tag-is-success"},"Bit Manipulation"),(0,l.kt)("span",{class:"tag-is-success"},"Bitmask"),(0,l.kt)("h3",{id:"inputs-1066"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-1066"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-1066"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-1066"},"Further Readings"),(0,l.kt)("h2",{id:"find-original-array-from-doubled-array"},"Find Original Array From Doubled Array"),(0,l.kt)("span",{class:"tag-is-success"},"Array"),(0,l.kt)("span",{class:"tag-is-success"},"Hash Table"),(0,l.kt)("span",{class:"tag-is-success"},"Greedy"),(0,l.kt)("span",{class:"tag-is-success"},"Sorting"),(0,l.kt)("h3",{id:"inputs-1067"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-1067"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-1067"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-1067"},"Further Readings"),(0,l.kt)("h2",{id:"maximum-earnings-from-taxi"},"Maximum Earnings From Taxi"),(0,l.kt)("span",{class:"tag-is-success"},"Array"),(0,l.kt)("span",{class:"tag-is-success"},"Binary Search"),(0,l.kt)("span",{class:"tag-is-success"},"Dynamic Programming"),(0,l.kt)("span",{class:"tag-is-success"},"Sorting"),(0,l.kt)("h3",{id:"inputs-1068"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-1068"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-1068"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-1068"},"Further Readings"),(0,l.kt)("h2",{id:"sum-of-beauty-in-the-array"},"Sum of Beauty in the Array"),(0,l.kt)("span",{class:"tag-is-success"},"Array"),(0,l.kt)("h3",{id:"inputs-1069"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-1069"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-1069"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-1069"},"Further Readings"),(0,l.kt)("h2",{id:"detect-squares"},"Detect Squares"),(0,l.kt)("span",{class:"tag-is-success"},"Array"),(0,l.kt)("span",{class:"tag-is-success"},"Hash Table"),(0,l.kt)("span",{class:"tag-is-success"},"Design"),(0,l.kt)("span",{class:"tag-is-success"},"Counting"),(0,l.kt)("h3",{id:"inputs-1070"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-1070"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-1070"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-1070"},"Further Readings"),(0,l.kt)("h2",{id:"average-height-of-buildings-in-each-segment"},"Average Height of Buildings in Each Segment"),(0,l.kt)("span",{class:"tag-is-success"},"Array"),(0,l.kt)("span",{class:"tag-is-success"},"Greedy"),(0,l.kt)("span",{class:"tag-is-success"},"Sorting"),(0,l.kt)("span",{class:"tag-is-success"},"Heap (Priority Queue)"),(0,l.kt)("h3",{id:"inputs-1071"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-1071"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-1071"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-1071"},"Further Readings"),(0,l.kt)("h2",{id:"grid-game"},"Grid Game"),(0,l.kt)("span",{class:"tag-is-success"},"Array"),(0,l.kt)("span",{class:"tag-is-success"},"Matrix"),(0,l.kt)("span",{class:"tag-is-success"},"Prefix Sum"),(0,l.kt)("h3",{id:"inputs-1072"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-1072"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-1072"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-1072"},"Further Readings"),(0,l.kt)("h2",{id:"check-if-word-can-be-placed-in-crossword"},"Check if Word Can Be Placed In Crossword"),(0,l.kt)("span",{class:"tag-is-success"},"Array"),(0,l.kt)("span",{class:"tag-is-success"},"Matrix"),(0,l.kt)("span",{class:"tag-is-success"},"Enumeration"),(0,l.kt)("h3",{id:"inputs-1073"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-1073"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-1073"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-1073"},"Further Readings"),(0,l.kt)("h2",{id:"number-of-accounts-that-did-not-stream"},"Number of Accounts That Did Not Stream"),(0,l.kt)("span",{class:"tag-is-success"},"Database"),(0,l.kt)("h3",{id:"inputs-1074"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-1074"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-1074"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-1074"},"Further Readings"),(0,l.kt)("h2",{id:"brightest-position-on-street"},"Brightest Position on Street"),(0,l.kt)("span",{class:"tag-is-success"},"Array"),(0,l.kt)("span",{class:"tag-is-success"},"Prefix Sum"),(0,l.kt)("span",{class:"tag-is-success"},"Ordered Set"),(0,l.kt)("h3",{id:"inputs-1075"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-1075"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-1075"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-1075"},"Further Readings"),(0,l.kt)("h2",{id:"number-of-pairs-of-strings-with-concatenation-equal-to-target"},"Number of Pairs of Strings With Concatenation Equal to Target"),(0,l.kt)("span",{class:"tag-is-success"},"Array"),(0,l.kt)("span",{class:"tag-is-success"},"String"),(0,l.kt)("h3",{id:"inputs-1076"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-1076"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-1076"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-1076"},"Further Readings"),(0,l.kt)("h2",{id:"maximize-the-confusion-of-an-exam"},"Maximize the Confusion of an Exam"),(0,l.kt)("span",{class:"tag-is-success"},"String"),(0,l.kt)("span",{class:"tag-is-success"},"Binary Search"),(0,l.kt)("span",{class:"tag-is-success"},"Sliding Window"),(0,l.kt)("span",{class:"tag-is-success"},"Prefix Sum"),(0,l.kt)("h3",{id:"inputs-1077"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-1077"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-1077"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-1077"},"Further Readings"),(0,l.kt)("h2",{id:"find-missing-observations"},"Find Missing Observations"),(0,l.kt)("span",{class:"tag-is-success"},"Array"),(0,l.kt)("span",{class:"tag-is-success"},"Math"),(0,l.kt)("span",{class:"tag-is-success"},"Simulation"),(0,l.kt)("h3",{id:"inputs-1078"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-1078"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-1078"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-1078"},"Further Readings"),(0,l.kt)("h2",{id:"stone-game-ix"},"Stone Game IX"),(0,l.kt)("span",{class:"tag-is-success"},"Array"),(0,l.kt)("span",{class:"tag-is-success"},"Math"),(0,l.kt)("span",{class:"tag-is-success"},"Greedy"),(0,l.kt)("span",{class:"tag-is-success"},"Counting"),(0,l.kt)("span",{class:"tag-is-success"},"Game Theory"),(0,l.kt)("h3",{id:"inputs-1079"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-1079"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-1079"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-1079"},"Further Readings"),(0,l.kt)("h2",{id:"count-subarrays-with-more-ones-than-zeros"},"Count Subarrays With More Ones Than Zeros"),(0,l.kt)("span",{class:"tag-is-success"},"Array"),(0,l.kt)("span",{class:"tag-is-success"},"Binary Search"),(0,l.kt)("span",{class:"tag-is-success"},"Divide and Conquer"),(0,l.kt)("span",{class:"tag-is-success"},"Binary Indexed Tree"),(0,l.kt)("span",{class:"tag-is-success"},"Segment Tree"),(0,l.kt)("span",{class:"tag-is-success"},"Merge Sort"),(0,l.kt)("span",{class:"tag-is-success"},"Ordered Set"),(0,l.kt)("h3",{id:"inputs-1080"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-1080"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-1080"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-1080"},"Further Readings"),(0,l.kt)("h2",{id:"minimum-operations-to-make-a-uni-value-grid"},"Minimum Operations to Make a Uni-Value Grid"),(0,l.kt)("span",{class:"tag-is-success"},"Array"),(0,l.kt)("span",{class:"tag-is-success"},"Math"),(0,l.kt)("span",{class:"tag-is-success"},"Sorting"),(0,l.kt)("span",{class:"tag-is-success"},"Matrix"),(0,l.kt)("h3",{id:"inputs-1081"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-1081"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-1081"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-1081"},"Further Readings"),(0,l.kt)("h2",{id:"stock-price-fluctuation"},"Stock Price Fluctuation"),(0,l.kt)("span",{class:"tag-is-success"},"Hash Table"),(0,l.kt)("span",{class:"tag-is-success"},"Design"),(0,l.kt)("span",{class:"tag-is-success"},"Heap (Priority Queue)"),(0,l.kt)("span",{class:"tag-is-success"},"Data Stream"),(0,l.kt)("span",{class:"tag-is-success"},"Ordered Set"),(0,l.kt)("h3",{id:"inputs-1082"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-1082"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-1082"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-1082"},"Further Readings"),(0,l.kt)("h2",{id:"maximum-alternating-subarray-sum"},"Maximum Alternating Subarray Sum"),(0,l.kt)("span",{class:"tag-is-success"},"Array"),(0,l.kt)("span",{class:"tag-is-success"},"Dynamic Programming"),(0,l.kt)("h3",{id:"inputs-1083"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-1083"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-1083"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-1083"},"Further Readings"),(0,l.kt)("h2",{id:"remove-colored-pieces-if-both-neighbors-are-the-same-color"},"Remove Colored Pieces if Both Neighbors are the Same Color"),(0,l.kt)("span",{class:"tag-is-success"},"Math"),(0,l.kt)("span",{class:"tag-is-success"},"String"),(0,l.kt)("span",{class:"tag-is-success"},"Greedy"),(0,l.kt)("span",{class:"tag-is-success"},"Game Theory"),(0,l.kt)("h3",{id:"inputs-1084"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-1084"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-1084"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-1084"},"Further Readings"),(0,l.kt)("h2",{id:"the-time-when-the-network-becomes-idle"},"The Time When the Network Becomes Idle"),(0,l.kt)("span",{class:"tag-is-success"},"Array"),(0,l.kt)("span",{class:"tag-is-success"},"Breadth-First Search"),(0,l.kt)("span",{class:"tag-is-success"},"Graph"),(0,l.kt)("h3",{id:"inputs-1085"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-1085"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-1085"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-1085"},"Further Readings"),(0,l.kt)("h2",{id:"accepted-candidates-from-the-interviews"},"Accepted Candidates From the Interviews"),(0,l.kt)("span",{class:"tag-is-success"},"Database"),(0,l.kt)("h3",{id:"inputs-1086"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-1086"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-1086"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-1086"},"Further Readings"),(0,l.kt)("h2",{id:"simple-bank-system"},"Simple Bank System"),(0,l.kt)("span",{class:"tag-is-success"},"Array"),(0,l.kt)("span",{class:"tag-is-success"},"Hash Table"),(0,l.kt)("span",{class:"tag-is-success"},"Design"),(0,l.kt)("span",{class:"tag-is-success"},"Simulation"),(0,l.kt)("h3",{id:"inputs-1087"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-1087"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-1087"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-1087"},"Further Readings"),(0,l.kt)("h2",{id:"count-number-of-maximum-bitwise-or-subsets"},"Count Number of Maximum Bitwise-OR Subsets"),(0,l.kt)("span",{class:"tag-is-success"},"Array"),(0,l.kt)("span",{class:"tag-is-success"},"Backtracking"),(0,l.kt)("span",{class:"tag-is-success"},"Bit Manipulation"),(0,l.kt)("h3",{id:"inputs-1088"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-1088"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-1088"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-1088"},"Further Readings"),(0,l.kt)("h2",{id:"sort-linked-list-already-sorted-using-absolute-values"},"Sort Linked List Already Sorted Using Absolute Values"),(0,l.kt)("span",{class:"tag-is-success"},"Linked List"),(0,l.kt)("span",{class:"tag-is-success"},"Two Pointers"),(0,l.kt)("span",{class:"tag-is-success"},"Sorting"),(0,l.kt)("h3",{id:"inputs-1089"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-1089"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-1089"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-1089"},"Further Readings"),(0,l.kt)("h2",{id:"next-greater-numerically-balanced-number"},"Next Greater Numerically Balanced Number"),(0,l.kt)("span",{class:"tag-is-success"},"Math"),(0,l.kt)("span",{class:"tag-is-success"},"Backtracking"),(0,l.kt)("span",{class:"tag-is-success"},"Enumeration"),(0,l.kt)("h3",{id:"inputs-1090"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-1090"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-1090"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-1090"},"Further Readings"),(0,l.kt)("h2",{id:"count-nodes-with-the-highest-score"},"Count Nodes With the Highest Score"),(0,l.kt)("span",{class:"tag-is-success"},"Array"),(0,l.kt)("span",{class:"tag-is-success"},"Tree"),(0,l.kt)("span",{class:"tag-is-success"},"Depth-First Search"),(0,l.kt)("span",{class:"tag-is-success"},"Binary Tree"),(0,l.kt)("h3",{id:"inputs-1091"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-1091"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-1091"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-1091"},"Further Readings"),(0,l.kt)("h2",{id:"the-category-of-each-member-in-the-store"},"The Category of Each Member in the Store"),(0,l.kt)("span",{class:"tag-is-success"},"Database"),(0,l.kt)("h3",{id:"inputs-1092"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-1092"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-1092"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-1092"},"Further Readings"),(0,l.kt)("h2",{id:"minimum-cost-to-separate-sentence-into-rows"},"Minimum Cost to Separate Sentence Into Rows"),(0,l.kt)("span",{class:"tag-is-success"},"Array"),(0,l.kt)("span",{class:"tag-is-success"},"Dynamic Programming"),(0,l.kt)("h3",{id:"inputs-1093"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-1093"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-1093"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-1093"},"Further Readings"),(0,l.kt)("h2",{id:"two-best-non-overlapping-events"},"Two Best Non-Overlapping Events"),(0,l.kt)("span",{class:"tag-is-success"},"Array"),(0,l.kt)("span",{class:"tag-is-success"},"Binary Search"),(0,l.kt)("span",{class:"tag-is-success"},"Dynamic Programming"),(0,l.kt)("span",{class:"tag-is-success"},"Sorting"),(0,l.kt)("span",{class:"tag-is-success"},"Heap (Priority Queue)"),(0,l.kt)("h3",{id:"inputs-1094"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-1094"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-1094"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-1094"},"Further Readings"),(0,l.kt)("h2",{id:"plates-between-candles"},"Plates Between Candles"),(0,l.kt)("span",{class:"tag-is-success"},"Array"),(0,l.kt)("span",{class:"tag-is-success"},"String"),(0,l.kt)("span",{class:"tag-is-success"},"Binary Search"),(0,l.kt)("span",{class:"tag-is-success"},"Prefix Sum"),(0,l.kt)("h3",{id:"inputs-1095"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-1095"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-1095"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-1095"},"Further Readings"),(0,l.kt)("h2",{id:"find-the-minimum-and-maximum-number-of-nodes-between-critical-points"},"Find the Minimum and Maximum Number of Nodes Between Critical Points"),(0,l.kt)("span",{class:"tag-is-success"},"Linked List"),(0,l.kt)("h3",{id:"inputs-1096"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-1096"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-1096"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-1096"},"Further Readings"),(0,l.kt)("h2",{id:"minimum-operations-to-convert-number"},"Minimum Operations to Convert Number"),(0,l.kt)("span",{class:"tag-is-success"},"Array"),(0,l.kt)("span",{class:"tag-is-success"},"Breadth-First Search"),(0,l.kt)("h3",{id:"inputs-1097"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-1097"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-1097"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-1097"},"Further Readings"),(0,l.kt)("h2",{id:"number-of-spaces-cleaning-robot-cleaned"},"Number of Spaces Cleaning Robot Cleaned"),(0,l.kt)("span",{class:"tag-is-success"},"Array"),(0,l.kt)("span",{class:"tag-is-success"},"Matrix"),(0,l.kt)("span",{class:"tag-is-success"},"Simulation"),(0,l.kt)("h3",{id:"inputs-1098"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-1098"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-1098"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-1098"},"Further Readings"),(0,l.kt)("h2",{id:"vowels-of-all-substrings"},"Vowels of All Substrings"),(0,l.kt)("span",{class:"tag-is-success"},"Math"),(0,l.kt)("span",{class:"tag-is-success"},"String"),(0,l.kt)("span",{class:"tag-is-success"},"Dynamic Programming"),(0,l.kt)("span",{class:"tag-is-success"},"Combinatorics"),(0,l.kt)("h3",{id:"inputs-1099"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-1099"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-1099"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-1099"},"Further Readings"),(0,l.kt)("h2",{id:"minimized-maximum-of-products-distributed-to-any-store"},"Minimized Maximum of Products Distributed to Any Store"),(0,l.kt)("span",{class:"tag-is-success"},"Array"),(0,l.kt)("span",{class:"tag-is-success"},"Binary Search"),(0,l.kt)("h3",{id:"inputs-1100"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-1100"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-1100"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-1100"},"Further Readings"),(0,l.kt)("h2",{id:"account-balance"},"Account Balance"),(0,l.kt)("span",{class:"tag-is-success"},"Database"),(0,l.kt)("h3",{id:"inputs-1101"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-1101"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-1101"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-1101"},"Further Readings"),(0,l.kt)("h2",{id:"number-of-equal-count-substrings"},"Number of Equal Count Substrings"),(0,l.kt)("span",{class:"tag-is-success"},"String"),(0,l.kt)("span",{class:"tag-is-success"},"Counting"),(0,l.kt)("span",{class:"tag-is-success"},"Prefix Sum"),(0,l.kt)("h3",{id:"inputs-1102"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-1102"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-1102"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-1102"},"Further Readings"),(0,l.kt)("h2",{id:"walking-robot-simulation-ii"},"Walking Robot Simulation II"),(0,l.kt)("span",{class:"tag-is-success"},"Design"),(0,l.kt)("span",{class:"tag-is-success"},"Simulation"),(0,l.kt)("h3",{id:"inputs-1103"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-1103"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-1103"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-1103"},"Further Readings"),(0,l.kt)("h2",{id:"most-beautiful-item-for-each-query"},"Most Beautiful Item for Each Query"),(0,l.kt)("span",{class:"tag-is-success"},"Array"),(0,l.kt)("span",{class:"tag-is-success"},"Binary Search"),(0,l.kt)("span",{class:"tag-is-success"},"Sorting"),(0,l.kt)("h3",{id:"inputs-1104"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-1104"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-1104"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-1104"},"Further Readings"),(0,l.kt)("h2",{id:"reverse-nodes-in-even-length-groups"},"Reverse Nodes in Even Length Groups"),(0,l.kt)("span",{class:"tag-is-success"},"Linked List"),(0,l.kt)("h3",{id:"inputs-1105"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-1105"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-1105"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-1105"},"Further Readings"),(0,l.kt)("h2",{id:"decode-the-slanted-ciphertext"},"Decode the Slanted Ciphertext"),(0,l.kt)("span",{class:"tag-is-success"},"String"),(0,l.kt)("span",{class:"tag-is-success"},"Simulation"),(0,l.kt)("h3",{id:"inputs-1106"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-1106"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-1106"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-1106"},"Further Readings"),(0,l.kt)("h2",{id:"paths-in-maze-that-lead-to-same-room"},"Paths in Maze That Lead to Same Room"),(0,l.kt)("span",{class:"tag-is-success"},"Graph"),(0,l.kt)("h3",{id:"inputs-1107"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-1107"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-1107"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-1107"},"Further Readings"),(0,l.kt)("h2",{id:"watering-plants"},"Watering Plants"),(0,l.kt)("span",{class:"tag-is-success"},"Array"),(0,l.kt)("h3",{id:"inputs-1108"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-1108"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-1108"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-1108"},"Further Readings"),(0,l.kt)("h2",{id:"range-frequency-queries"},"Range Frequency Queries"),(0,l.kt)("span",{class:"tag-is-success"},"Array"),(0,l.kt)("span",{class:"tag-is-success"},"Hash Table"),(0,l.kt)("span",{class:"tag-is-success"},"Binary Search"),(0,l.kt)("span",{class:"tag-is-success"},"Design"),(0,l.kt)("span",{class:"tag-is-success"},"Segment Tree"),(0,l.kt)("h3",{id:"inputs-1109"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-1109"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-1109"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-1109"},"Further Readings"),(0,l.kt)("h2",{id:"substrings-that-begin-and-end-with-the-same-letter"},"Substrings That Begin and End With the Same Letter"),(0,l.kt)("span",{class:"tag-is-success"},"Hash Table"),(0,l.kt)("span",{class:"tag-is-success"},"Math"),(0,l.kt)("span",{class:"tag-is-success"},"String"),(0,l.kt)("span",{class:"tag-is-success"},"Counting"),(0,l.kt)("span",{class:"tag-is-success"},"Prefix Sum"),(0,l.kt)("h3",{id:"inputs-1110"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-1110"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-1110"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-1110"},"Further Readings"),(0,l.kt)("h2",{id:"drop-type-1-orders-for-customers-with-type-0-orders"},"Drop Type 1 Orders for Customers With Type 0 Orders"),(0,l.kt)("span",{class:"tag-is-success"},"Database"),(0,l.kt)("h3",{id:"inputs-1111"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-1111"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-1111"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-1111"},"Further Readings"),(0,l.kt)("h2",{id:"minimum-number-of-buckets-required-to-collect-rainwater-from-houses"},"Minimum Number of Buckets Required to Collect Rainwater from Houses"),(0,l.kt)("span",{class:"tag-is-success"},"String"),(0,l.kt)("span",{class:"tag-is-success"},"Dynamic Programming"),(0,l.kt)("span",{class:"tag-is-success"},"Greedy"),(0,l.kt)("h3",{id:"inputs-1112"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-1112"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-1112"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-1112"},"Further Readings"),(0,l.kt)("h2",{id:"minimum-cost-homecoming-of-a-robot-in-a-grid"},"Minimum Cost Homecoming of a Robot in a Grid"),(0,l.kt)("span",{class:"tag-is-success"},"Array"),(0,l.kt)("span",{class:"tag-is-success"},"Greedy"),(0,l.kt)("span",{class:"tag-is-success"},"Matrix"),(0,l.kt)("h3",{id:"inputs-1113"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-1113"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-1113"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-1113"},"Further Readings"),(0,l.kt)("h2",{id:"k-radius-subarray-averages"},"K Radius Subarray Averages"),(0,l.kt)("span",{class:"tag-is-success"},"Array"),(0,l.kt)("span",{class:"tag-is-success"},"Sliding Window"),(0,l.kt)("h3",{id:"inputs-1114"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-1114"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-1114"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-1114"},"Further Readings"),(0,l.kt)("h2",{id:"removing-minimum-and-maximum-from-array"},"Removing Minimum and Maximum From Array"),(0,l.kt)("span",{class:"tag-is-success"},"Array"),(0,l.kt)("span",{class:"tag-is-success"},"Greedy"),(0,l.kt)("h3",{id:"inputs-1115"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-1115"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-1115"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-1115"},"Further Readings"),(0,l.kt)("h2",{id:"minimum-cost-to-reach-city-with-discounts"},"Minimum Cost to Reach City With Discounts"),(0,l.kt)("span",{class:"tag-is-success"},"Graph"),(0,l.kt)("span",{class:"tag-is-success"},"Shortest Path"),(0,l.kt)("h3",{id:"inputs-1116"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-1116"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-1116"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-1116"},"Further Readings"),(0,l.kt)("h2",{id:"delete-the-middle-node-of-a-linked-list"},"Delete the Middle Node of a Linked List"),(0,l.kt)("span",{class:"tag-is-success"},"Linked List"),(0,l.kt)("span",{class:"tag-is-success"},"Two Pointers"),(0,l.kt)("h3",{id:"inputs-1117"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-1117"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-1117"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-1117"},"Further Readings"),(0,l.kt)("h2",{id:"step-by-step-directions-from-a-binary-tree-node-to-another"},"Step-By-Step Directions From a Binary Tree Node to Another"),(0,l.kt)("span",{class:"tag-is-success"},"String"),(0,l.kt)("span",{class:"tag-is-success"},"Tree"),(0,l.kt)("span",{class:"tag-is-success"},"Depth-First Search"),(0,l.kt)("span",{class:"tag-is-success"},"Binary Tree"),(0,l.kt)("h3",{id:"inputs-1118"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-1118"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-1118"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-1118"},"Further Readings"),(0,l.kt)("h2",{id:"subsequence-of-size-k-with-the-largest-even-sum"},"Subsequence of Size K With the Largest Even Sum"),(0,l.kt)("span",{class:"tag-is-success"},"Array"),(0,l.kt)("span",{class:"tag-is-success"},"Greedy"),(0,l.kt)("span",{class:"tag-is-success"},"Sorting"),(0,l.kt)("h3",{id:"inputs-1119"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-1119"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-1119"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-1119"},"Further Readings"),(0,l.kt)("h2",{id:"find-good-days-to-rob-the-bank"},"Find Good Days to Rob the Bank"),(0,l.kt)("span",{class:"tag-is-success"},"Array"),(0,l.kt)("span",{class:"tag-is-success"},"Dynamic Programming"),(0,l.kt)("span",{class:"tag-is-success"},"Prefix Sum"),(0,l.kt)("h3",{id:"inputs-1120"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-1120"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-1120"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-1120"},"Further Readings"),(0,l.kt)("h2",{id:"detonate-the-maximum-bombs"},"Detonate the Maximum Bombs"),(0,l.kt)("span",{class:"tag-is-success"},"Array"),(0,l.kt)("span",{class:"tag-is-success"},"Math"),(0,l.kt)("span",{class:"tag-is-success"},"Depth-First Search"),(0,l.kt)("span",{class:"tag-is-success"},"Breadth-First Search"),(0,l.kt)("span",{class:"tag-is-success"},"Graph"),(0,l.kt)("span",{class:"tag-is-success"},"Geometry"),(0,l.kt)("h3",{id:"inputs-1121"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-1121"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-1121"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-1121"},"Further Readings"),(0,l.kt)("h2",{id:"sum-of-subarray-ranges"},"Sum of Subarray Ranges"),(0,l.kt)("span",{class:"tag-is-success"},"Array"),(0,l.kt)("span",{class:"tag-is-success"},"Stack"),(0,l.kt)("span",{class:"tag-is-success"},"Monotonic Stack"),(0,l.kt)("h3",{id:"inputs-1122"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-1122"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-1122"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-1122"},"Further Readings"),(0,l.kt)("h2",{id:"watering-plants-ii"},"Watering Plants II"),(0,l.kt)("span",{class:"tag-is-success"},"Array"),(0,l.kt)("span",{class:"tag-is-success"},"Two Pointers"),(0,l.kt)("span",{class:"tag-is-success"},"Simulation"),(0,l.kt)("h3",{id:"inputs-1123"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-1123"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-1123"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-1123"},"Further Readings"),(0,l.kt)("h2",{id:"number-of-unique-flavors-after-sharing-k-candies"},"Number of Unique Flavors After Sharing K Candies"),(0,l.kt)("span",{class:"tag-is-success"},"Array"),(0,l.kt)("span",{class:"tag-is-success"},"Hash Table"),(0,l.kt)("span",{class:"tag-is-success"},"Sliding Window"),(0,l.kt)("h3",{id:"inputs-1124"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-1124"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-1124"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-1124"},"Further Readings"),(0,l.kt)("h2",{id:"adding-spaces-to-a-string"},"Adding Spaces to a String"),(0,l.kt)("span",{class:"tag-is-success"},"Array"),(0,l.kt)("span",{class:"tag-is-success"},"String"),(0,l.kt)("span",{class:"tag-is-success"},"Simulation"),(0,l.kt)("h3",{id:"inputs-1125"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-1125"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-1125"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-1125"},"Further Readings"),(0,l.kt)("h2",{id:"number-of-smooth-descent-periods-of-a-stock"},"Number of Smooth Descent Periods of a Stock"),(0,l.kt)("span",{class:"tag-is-success"},"Array"),(0,l.kt)("span",{class:"tag-is-success"},"Math"),(0,l.kt)("span",{class:"tag-is-success"},"Dynamic Programming"),(0,l.kt)("h3",{id:"inputs-1126"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-1126"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-1126"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-1126"},"Further Readings"),(0,l.kt)("h2",{id:"the-airport-with-the-most-traffic"},"The Airport With the Most Traffic"),(0,l.kt)("span",{class:"tag-is-success"},"Database"),(0,l.kt)("h3",{id:"inputs-1127"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-1127"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-1127"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-1127"},"Further Readings"),(0,l.kt)("h2",{id:"elements-in-array-after-removing-and-replacing-elements"},"Elements in Array After Removing and Replacing Elements"),(0,l.kt)("span",{class:"tag-is-success"},"Array"),(0,l.kt)("h3",{id:"inputs-1128"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-1128"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-1128"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-1128"},"Further Readings"),(0,l.kt)("h2",{id:"find-all-possible-recipes-from-given-supplies"},"Find All Possible Recipes from Given Supplies"),(0,l.kt)("span",{class:"tag-is-success"},"Array"),(0,l.kt)("span",{class:"tag-is-success"},"Hash Table"),(0,l.kt)("span",{class:"tag-is-success"},"String"),(0,l.kt)("span",{class:"tag-is-success"},"Graph"),(0,l.kt)("span",{class:"tag-is-success"},"Topological Sort"),(0,l.kt)("h3",{id:"inputs-1129"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-1129"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-1129"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-1129"},"Further Readings"),(0,l.kt)("h2",{id:"check-if-a-parentheses-string-can-be-valid"},"Check if a Parentheses String Can Be Valid"),(0,l.kt)("span",{class:"tag-is-success"},"String"),(0,l.kt)("span",{class:"tag-is-success"},"Stack"),(0,l.kt)("span",{class:"tag-is-success"},"Greedy"),(0,l.kt)("h3",{id:"inputs-1130"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-1130"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-1130"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-1130"},"Further Readings"),(0,l.kt)("h2",{id:"execution-of-all-suffix-instructions-staying-in-a-grid"},"Execution of All Suffix Instructions Staying in a Grid"),(0,l.kt)("span",{class:"tag-is-success"},"String"),(0,l.kt)("span",{class:"tag-is-success"},"Simulation"),(0,l.kt)("h3",{id:"inputs-1131"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-1131"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-1131"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-1131"},"Further Readings"),(0,l.kt)("h2",{id:"intervals-between-identical-elements"},"Intervals Between Identical Elements"),(0,l.kt)("span",{class:"tag-is-success"},"Array"),(0,l.kt)("span",{class:"tag-is-success"},"Hash Table"),(0,l.kt)("span",{class:"tag-is-success"},"Prefix Sum"),(0,l.kt)("h3",{id:"inputs-1132"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-1132"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-1132"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-1132"},"Further Readings"),(0,l.kt)("h2",{id:"number-of-laser-beams-in-a-bank"},"Number of Laser Beams in a Bank"),(0,l.kt)("span",{class:"tag-is-success"},"Array"),(0,l.kt)("span",{class:"tag-is-success"},"Math"),(0,l.kt)("span",{class:"tag-is-success"},"String"),(0,l.kt)("span",{class:"tag-is-success"},"Matrix"),(0,l.kt)("h3",{id:"inputs-1133"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-1133"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-1133"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-1133"},"Further Readings"),(0,l.kt)("h2",{id:"destroying-asteroids"},"Destroying Asteroids"),(0,l.kt)("span",{class:"tag-is-success"},"Array"),(0,l.kt)("span",{class:"tag-is-success"},"Greedy"),(0,l.kt)("span",{class:"tag-is-success"},"Sorting"),(0,l.kt)("h3",{id:"inputs-1134"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-1134"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-1134"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-1134"},"Further Readings"),(0,l.kt)("h2",{id:"remove-all-ones-with-row-and-column-flips"},"Remove All Ones With Row and Column Flips"),(0,l.kt)("span",{class:"tag-is-success"},"Array"),(0,l.kt)("span",{class:"tag-is-success"},"Math"),(0,l.kt)("span",{class:"tag-is-success"},"Bit Manipulation"),(0,l.kt)("span",{class:"tag-is-success"},"Matrix"),(0,l.kt)("h3",{id:"inputs-1135"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-1135"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-1135"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-1135"},"Further Readings"),(0,l.kt)("h2",{id:"maximum-twin-sum-of-a-linked-list"},"Maximum Twin Sum of a Linked List"),(0,l.kt)("span",{class:"tag-is-success"},"Linked List"),(0,l.kt)("span",{class:"tag-is-success"},"Two Pointers"),(0,l.kt)("span",{class:"tag-is-success"},"Stack"),(0,l.kt)("h3",{id:"inputs-1136"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-1136"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-1136"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-1136"},"Further Readings"),(0,l.kt)("h2",{id:"longest-palindrome-by-concatenating-two-letter-words"},"Longest Palindrome by Concatenating Two Letter Words"),(0,l.kt)("span",{class:"tag-is-success"},"Array"),(0,l.kt)("span",{class:"tag-is-success"},"Hash Table"),(0,l.kt)("span",{class:"tag-is-success"},"String"),(0,l.kt)("span",{class:"tag-is-success"},"Greedy"),(0,l.kt)("span",{class:"tag-is-success"},"Counting"),(0,l.kt)("h3",{id:"inputs-1137"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-1137"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-1137"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-1137"},"Further Readings"),(0,l.kt)("h2",{id:"minimum-swaps-to-group-all-1s-together-ii"},"Minimum Swaps to Group All 1's Together II"),(0,l.kt)("span",{class:"tag-is-success"},"Array"),(0,l.kt)("span",{class:"tag-is-success"},"Sliding Window"),(0,l.kt)("h3",{id:"inputs-1138"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-1138"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-1138"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-1138"},"Further Readings"),(0,l.kt)("h2",{id:"count-words-obtained-after-adding-a-letter"},"Count Words Obtained After Adding a Letter"),(0,l.kt)("span",{class:"tag-is-success"},"Array"),(0,l.kt)("span",{class:"tag-is-success"},"Hash Table"),(0,l.kt)("span",{class:"tag-is-success"},"String"),(0,l.kt)("span",{class:"tag-is-success"},"Bit Manipulation"),(0,l.kt)("span",{class:"tag-is-success"},"Sorting"),(0,l.kt)("h3",{id:"inputs-1139"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-1139"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-1139"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-1139"},"Further Readings"),(0,l.kt)("h2",{id:"pour-water-between-buckets-to-make-water-levels-equal"},"Pour Water Between Buckets to Make Water Levels Equal"),(0,l.kt)("span",{class:"tag-is-success"},"Array"),(0,l.kt)("span",{class:"tag-is-success"},"Binary Search"),(0,l.kt)("h3",{id:"inputs-1140"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-1140"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-1140"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-1140"},"Further Readings"),(0,l.kt)("h2",{id:"minimum-moves-to-reach-target-score"},"Minimum Moves to Reach Target Score"),(0,l.kt)("span",{class:"tag-is-success"},"Math"),(0,l.kt)("span",{class:"tag-is-success"},"Greedy"),(0,l.kt)("h3",{id:"inputs-1141"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-1141"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-1141"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-1141"},"Further Readings"),(0,l.kt)("h2",{id:"solving-questions-with-brainpower"},"Solving Questions With Brainpower"),(0,l.kt)("span",{class:"tag-is-success"},"Array"),(0,l.kt)("span",{class:"tag-is-success"},"Dynamic Programming"),(0,l.kt)("h3",{id:"inputs-1142"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-1142"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-1142"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-1142"},"Further Readings"),(0,l.kt)("h2",{id:"the-number-of-passengers-in-each-bus-i"},"The Number of Passengers in Each Bus I"),(0,l.kt)("span",{class:"tag-is-success"},"Database"),(0,l.kt)("h3",{id:"inputs-1143"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-1143"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-1143"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-1143"},"Further Readings"),(0,l.kt)("h2",{id:"count-the-hidden-sequences"},"Count the Hidden Sequences"),(0,l.kt)("span",{class:"tag-is-success"},"Array"),(0,l.kt)("span",{class:"tag-is-success"},"Prefix Sum"),(0,l.kt)("h3",{id:"inputs-1144"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-1144"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-1144"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-1144"},"Further Readings"),(0,l.kt)("h2",{id:"k-highest-ranked-items-within-a-price-range"},"K Highest Ranked Items Within a Price Range"),(0,l.kt)("span",{class:"tag-is-success"},"Array"),(0,l.kt)("span",{class:"tag-is-success"},"Breadth-First Search"),(0,l.kt)("span",{class:"tag-is-success"},"Sorting"),(0,l.kt)("span",{class:"tag-is-success"},"Heap (Priority Queue)"),(0,l.kt)("span",{class:"tag-is-success"},"Matrix"),(0,l.kt)("h3",{id:"inputs-1145"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-1145"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-1145"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-1145"},"Further Readings"),(0,l.kt)("h2",{id:"rearrange-array-elements-by-sign"},"Rearrange Array Elements by Sign"),(0,l.kt)("span",{class:"tag-is-success"},"Array"),(0,l.kt)("span",{class:"tag-is-success"},"Two Pointers"),(0,l.kt)("span",{class:"tag-is-success"},"Simulation"),(0,l.kt)("h3",{id:"inputs-1146"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-1146"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-1146"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-1146"},"Further Readings"),(0,l.kt)("h2",{id:"find-all-lonely-numbers-in-the-array"},"Find All Lonely Numbers in the Array"),(0,l.kt)("span",{class:"tag-is-success"},"Array"),(0,l.kt)("span",{class:"tag-is-success"},"Hash Table"),(0,l.kt)("span",{class:"tag-is-success"},"Counting"),(0,l.kt)("h3",{id:"inputs-1147"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-1147"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-1147"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-1147"},"Further Readings"),(0,l.kt)("h2",{id:"minimum-number-of-lines-to-cover-points"},"Minimum Number of Lines to Cover Points"),(0,l.kt)("span",{class:"tag-is-success"},"Array"),(0,l.kt)("span",{class:"tag-is-success"},"Hash Table"),(0,l.kt)("span",{class:"tag-is-success"},"Math"),(0,l.kt)("span",{class:"tag-is-success"},"Dynamic Programming"),(0,l.kt)("span",{class:"tag-is-success"},"Backtracking"),(0,l.kt)("span",{class:"tag-is-success"},"Bit Manipulation"),(0,l.kt)("span",{class:"tag-is-success"},"Geometry"),(0,l.kt)("span",{class:"tag-is-success"},"Bitmask"),(0,l.kt)("h3",{id:"inputs-1148"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-1148"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-1148"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-1148"},"Further Readings"),(0,l.kt)("h2",{id:"all-divisions-with-the-highest-score-of-a-binary-array"},"All Divisions With the Highest Score of a Binary Array"),(0,l.kt)("span",{class:"tag-is-success"},"Array"),(0,l.kt)("h3",{id:"inputs-1149"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-1149"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-1149"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-1149"},"Further Readings"),(0,l.kt)("h2",{id:"order-two-columns-independently"},"Order Two Columns Independently"),(0,l.kt)("span",{class:"tag-is-success"},"Database"),(0,l.kt)("h3",{id:"inputs-1150"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-1150"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-1150"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-1150"},"Further Readings"),(0,l.kt)("h2",{id:"partition-array-according-to-given-pivot"},"Partition Array According to Given Pivot"),(0,l.kt)("span",{class:"tag-is-success"},"Array"),(0,l.kt)("span",{class:"tag-is-success"},"Two Pointers"),(0,l.kt)("span",{class:"tag-is-success"},"Simulation"),(0,l.kt)("h3",{id:"inputs-1151"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-1151"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-1151"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-1151"},"Further Readings"),(0,l.kt)("h2",{id:"minimum-cost-to-set-cooking-time"},"Minimum Cost to Set Cooking Time"),(0,l.kt)("span",{class:"tag-is-success"},"Math"),(0,l.kt)("span",{class:"tag-is-success"},"Enumeration"),(0,l.kt)("h3",{id:"inputs-1152"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-1152"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-1152"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-1152"},"Further Readings"),(0,l.kt)("h2",{id:"smallest-value-of-the-rearranged-number"},"Smallest Value of the Rearranged Number"),(0,l.kt)("span",{class:"tag-is-success"},"Math"),(0,l.kt)("span",{class:"tag-is-success"},"Sorting"),(0,l.kt)("h3",{id:"inputs-1153"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-1153"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-1153"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-1153"},"Further Readings"),(0,l.kt)("h2",{id:"design-bitset"},"Design Bitset"),(0,l.kt)("span",{class:"tag-is-success"},"Array"),(0,l.kt)("span",{class:"tag-is-success"},"Hash Table"),(0,l.kt)("span",{class:"tag-is-success"},"Design"),(0,l.kt)("h3",{id:"inputs-1154"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-1154"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-1154"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-1154"},"Further Readings"),(0,l.kt)("h2",{id:"unique-substrings-with-equal-digit-frequency"},"Unique Substrings With Equal Digit Frequency"),(0,l.kt)("span",{class:"tag-is-success"},"Hash Table"),(0,l.kt)("span",{class:"tag-is-success"},"String"),(0,l.kt)("span",{class:"tag-is-success"},"Rolling Hash"),(0,l.kt)("span",{class:"tag-is-success"},"Counting"),(0,l.kt)("span",{class:"tag-is-success"},"Hash Function"),(0,l.kt)("h3",{id:"inputs-1155"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-1155"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-1155"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-1155"},"Further Readings"),(0,l.kt)("h2",{id:"minimum-operations-to-make-the-array-alternating"},"Minimum Operations to Make the Array Alternating"),(0,l.kt)("span",{class:"tag-is-success"},"Array"),(0,l.kt)("span",{class:"tag-is-success"},"Hash Table"),(0,l.kt)("span",{class:"tag-is-success"},"Greedy"),(0,l.kt)("span",{class:"tag-is-success"},"Counting"),(0,l.kt)("h3",{id:"inputs-1156"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-1156"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-1156"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-1156"},"Further Readings"),(0,l.kt)("h2",{id:"removing-minimum-number-of-magic-beans"},"Removing Minimum Number of Magic Beans"),(0,l.kt)("span",{class:"tag-is-success"},"Array"),(0,l.kt)("span",{class:"tag-is-success"},"Sorting"),(0,l.kt)("span",{class:"tag-is-success"},"Prefix Sum"),(0,l.kt)("h3",{id:"inputs-1157"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-1157"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-1157"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-1157"},"Further Readings"),(0,l.kt)("h2",{id:"remove-all-ones-with-row-and-column-flips-ii"},"Remove All Ones With Row and Column Flips II"),(0,l.kt)("span",{class:"tag-is-success"},"Array"),(0,l.kt)("span",{class:"tag-is-success"},"Bit Manipulation"),(0,l.kt)("span",{class:"tag-is-success"},"Breadth-First Search"),(0,l.kt)("span",{class:"tag-is-success"},"Matrix"),(0,l.kt)("h3",{id:"inputs-1158"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-1158"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-1158"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-1158"},"Further Readings"),(0,l.kt)("h2",{id:"the-change-in-global-rankings"},"The Change in Global Rankings"),(0,l.kt)("span",{class:"tag-is-success"},"Database"),(0,l.kt)("h3",{id:"inputs-1159"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-1159"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-1159"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-1159"},"Further Readings"),(0,l.kt)("h2",{id:"find-three-consecutive-integers-that-sum-to-a-given-number"},"Find Three Consecutive Integers That Sum to a Given Number"),(0,l.kt)("span",{class:"tag-is-success"},"Math"),(0,l.kt)("span",{class:"tag-is-success"},"Simulation"),(0,l.kt)("h3",{id:"inputs-1160"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-1160"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-1160"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-1160"},"Further Readings"),(0,l.kt)("h2",{id:"maximum-split-of-positive-even-integers"},"Maximum Split of Positive Even Integers"),(0,l.kt)("span",{class:"tag-is-success"},"Math"),(0,l.kt)("span",{class:"tag-is-success"},"Greedy"),(0,l.kt)("h3",{id:"inputs-1161"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-1161"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-1161"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-1161"},"Further Readings"),(0,l.kt)("h2",{id:"merge-nodes-in-between-zeros"},"Merge Nodes in Between Zeros"),(0,l.kt)("span",{class:"tag-is-success"},"Linked List"),(0,l.kt)("span",{class:"tag-is-success"},"Simulation"),(0,l.kt)("h3",{id:"inputs-1162"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-1162"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-1162"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-1162"},"Further Readings"),(0,l.kt)("h2",{id:"construct-string-with-repeat-limit"},"Construct String With Repeat Limit"),(0,l.kt)("span",{class:"tag-is-success"},"String"),(0,l.kt)("span",{class:"tag-is-success"},"Greedy"),(0,l.kt)("span",{class:"tag-is-success"},"Heap (Priority Queue)"),(0,l.kt)("span",{class:"tag-is-success"},"Counting"),(0,l.kt)("h3",{id:"inputs-1163"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-1163"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-1163"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-1163"},"Further Readings"),(0,l.kt)("h2",{id:"number-of-ways-to-build-sturdy-brick-wall"},"Number of Ways to Build Sturdy Brick Wall"),(0,l.kt)("span",{class:"tag-is-success"},"Array"),(0,l.kt)("span",{class:"tag-is-success"},"Dynamic Programming"),(0,l.kt)("span",{class:"tag-is-success"},"Bit Manipulation"),(0,l.kt)("span",{class:"tag-is-success"},"Bitmask"),(0,l.kt)("h3",{id:"inputs-1164"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-1164"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-1164"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-1164"},"Further Readings"),(0,l.kt)("h2",{id:"minimum-number-of-steps-to-make-two-strings-anagram-ii"},"Minimum Number of Steps to Make Two Strings Anagram II"),(0,l.kt)("span",{class:"tag-is-success"},"Hash Table"),(0,l.kt)("span",{class:"tag-is-success"},"String"),(0,l.kt)("span",{class:"tag-is-success"},"Counting"),(0,l.kt)("h3",{id:"inputs-1165"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-1165"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-1165"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-1165"},"Further Readings"),(0,l.kt)("h2",{id:"minimum-time-to-complete-trips"},"Minimum Time to Complete Trips"),(0,l.kt)("span",{class:"tag-is-success"},"Array"),(0,l.kt)("span",{class:"tag-is-success"},"Binary Search"),(0,l.kt)("h3",{id:"inputs-1166"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-1166"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-1166"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-1166"},"Further Readings"),(0,l.kt)("h2",{id:"number-of-ways-to-build-house-of-cards"},"Number of Ways to Build House of Cards"),(0,l.kt)("span",{class:"tag-is-success"},"Math"),(0,l.kt)("span",{class:"tag-is-success"},"Dynamic Programming"),(0,l.kt)("h3",{id:"inputs-1167"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-1167"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-1167"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-1167"},"Further Readings"),(0,l.kt)("h2",{id:"sort-the-jumbled-numbers"},"Sort the Jumbled Numbers"),(0,l.kt)("span",{class:"tag-is-success"},"Array"),(0,l.kt)("span",{class:"tag-is-success"},"Sorting"),(0,l.kt)("h3",{id:"inputs-1168"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-1168"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-1168"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-1168"},"Further Readings"),(0,l.kt)("h2",{id:"all-ancestors-of-a-node-in-a-directed-acyclic-graph"},"All Ancestors of a Node in a Directed Acyclic Graph"),(0,l.kt)("span",{class:"tag-is-success"},"Depth-First Search"),(0,l.kt)("span",{class:"tag-is-success"},"Breadth-First Search"),(0,l.kt)("span",{class:"tag-is-success"},"Graph"),(0,l.kt)("span",{class:"tag-is-success"},"Topological Sort"),(0,l.kt)("h3",{id:"inputs-1169"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-1169"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-1169"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-1169"},"Further Readings"),(0,l.kt)("h2",{id:"append-k-integers-with-minimal-sum"},"Append K Integers With Minimal Sum"),(0,l.kt)("span",{class:"tag-is-success"},"Array"),(0,l.kt)("span",{class:"tag-is-success"},"Math"),(0,l.kt)("span",{class:"tag-is-success"},"Greedy"),(0,l.kt)("span",{class:"tag-is-success"},"Sorting"),(0,l.kt)("h3",{id:"inputs-1170"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-1170"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-1170"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-1170"},"Further Readings"),(0,l.kt)("h2",{id:"create-binary-tree-from-descriptions"},"Create Binary Tree From Descriptions"),(0,l.kt)("span",{class:"tag-is-success"},"Array"),(0,l.kt)("span",{class:"tag-is-success"},"Hash Table"),(0,l.kt)("span",{class:"tag-is-success"},"Tree"),(0,l.kt)("span",{class:"tag-is-success"},"Depth-First Search"),(0,l.kt)("span",{class:"tag-is-success"},"Breadth-First Search"),(0,l.kt)("span",{class:"tag-is-success"},"Binary Tree"),(0,l.kt)("h3",{id:"inputs-1171"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-1171"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-1171"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-1171"},"Further Readings"),(0,l.kt)("h2",{id:"number-of-single-divisor-triplets"},"Number of Single Divisor Triplets"),(0,l.kt)("span",{class:"tag-is-success"},"Math"),(0,l.kt)("h3",{id:"inputs-1172"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-1172"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-1172"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-1172"},"Further Readings"),(0,l.kt)("h2",{id:"count-artifacts-that-can-be-extracted"},"Count Artifacts That Can Be Extracted"),(0,l.kt)("span",{class:"tag-is-success"},"Array"),(0,l.kt)("span",{class:"tag-is-success"},"Hash Table"),(0,l.kt)("span",{class:"tag-is-success"},"Simulation"),(0,l.kt)("h3",{id:"inputs-1173"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-1173"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-1173"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-1173"},"Further Readings"),(0,l.kt)("h2",{id:"maximize-the-topmost-element-after-k-moves"},"Maximize the Topmost Element After K Moves"),(0,l.kt)("span",{class:"tag-is-success"},"Array"),(0,l.kt)("span",{class:"tag-is-success"},"Greedy"),(0,l.kt)("h3",{id:"inputs-1174"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-1174"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-1174"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-1174"},"Further Readings"),(0,l.kt)("h2",{id:"maximize-number-of-subsequences-in-a-string"},"Maximize Number of Subsequences in a String"),(0,l.kt)("span",{class:"tag-is-success"},"String"),(0,l.kt)("span",{class:"tag-is-success"},"Greedy"),(0,l.kt)("span",{class:"tag-is-success"},"Prefix Sum"),(0,l.kt)("h3",{id:"inputs-1175"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-1175"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-1175"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-1175"},"Further Readings"),(0,l.kt)("h2",{id:"minimum-operations-to-halve-array-sum"},"Minimum Operations to Halve Array Sum"),(0,l.kt)("span",{class:"tag-is-success"},"Array"),(0,l.kt)("span",{class:"tag-is-success"},"Greedy"),(0,l.kt)("span",{class:"tag-is-success"},"Heap (Priority Queue)"),(0,l.kt)("h3",{id:"inputs-1176"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-1176"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-1176"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-1176"},"Further Readings"),(0,l.kt)("h2",{id:"count-collisions-on-a-road"},"Count Collisions on a Road"),(0,l.kt)("span",{class:"tag-is-success"},"String"),(0,l.kt)("span",{class:"tag-is-success"},"Stack"),(0,l.kt)("h3",{id:"inputs-1177"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-1177"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-1177"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-1177"},"Further Readings"),(0,l.kt)("h2",{id:"maximum-points-in-an-archery-competition"},"Maximum Points in an Archery Competition"),(0,l.kt)("span",{class:"tag-is-success"},"Array"),(0,l.kt)("span",{class:"tag-is-success"},"Bit Manipulation"),(0,l.kt)("span",{class:"tag-is-success"},"Recursion"),(0,l.kt)("span",{class:"tag-is-success"},"Enumeration"),(0,l.kt)("h3",{id:"inputs-1178"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-1178"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-1178"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-1178"},"Further Readings"),(0,l.kt)("h2",{id:"minimum-health-to-beat-game"},"Minimum Health to Beat Game"),(0,l.kt)("span",{class:"tag-is-success"},"Array"),(0,l.kt)("span",{class:"tag-is-success"},"Greedy"),(0,l.kt)("span",{class:"tag-is-success"},"Prefix Sum"),(0,l.kt)("h3",{id:"inputs-1179"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-1179"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-1179"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-1179"},"Further Readings"),(0,l.kt)("h2",{id:"minimum-deletions-to-make-array-beautiful"},"Minimum Deletions to Make Array Beautiful"),(0,l.kt)("span",{class:"tag-is-success"},"Array"),(0,l.kt)("span",{class:"tag-is-success"},"Stack"),(0,l.kt)("span",{class:"tag-is-success"},"Greedy"),(0,l.kt)("h3",{id:"inputs-1180"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-1180"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-1180"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-1180"},"Further Readings"),(0,l.kt)("h2",{id:"find-palindrome-with-fixed-length"},"Find Palindrome With Fixed Length"),(0,l.kt)("span",{class:"tag-is-success"},"Array"),(0,l.kt)("span",{class:"tag-is-success"},"Math"),(0,l.kt)("h3",{id:"inputs-1181"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-1181"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-1181"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-1181"},"Further Readings"),(0,l.kt)("h2",{id:"maximum-sum-score-of-array"},"Maximum Sum Score of Array"),(0,l.kt)("span",{class:"tag-is-success"},"Array"),(0,l.kt)("span",{class:"tag-is-success"},"Prefix Sum"),(0,l.kt)("h3",{id:"inputs-1182"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-1182"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-1182"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-1182"},"Further Readings"),(0,l.kt)("h2",{id:"find-triangular-sum-of-an-array"},"Find Triangular Sum of an Array"),(0,l.kt)("span",{class:"tag-is-success"},"Array"),(0,l.kt)("span",{class:"tag-is-success"},"Math"),(0,l.kt)("span",{class:"tag-is-success"},"Simulation"),(0,l.kt)("span",{class:"tag-is-success"},"Combinatorics"),(0,l.kt)("h3",{id:"inputs-1183"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-1183"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-1183"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-1183"},"Further Readings"),(0,l.kt)("h2",{id:"number-of-ways-to-select-buildings"},"Number of Ways to Select Buildings"),(0,l.kt)("span",{class:"tag-is-success"},"String"),(0,l.kt)("span",{class:"tag-is-success"},"Dynamic Programming"),(0,l.kt)("span",{class:"tag-is-success"},"Prefix Sum"),(0,l.kt)("h3",{id:"inputs-1184"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-1184"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-1184"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-1184"},"Further Readings"),(0,l.kt)("h2",{id:"find-players-with-zero-or-one-losses"},"Find Players With Zero or One Losses"),(0,l.kt)("span",{class:"tag-is-success"},"Array"),(0,l.kt)("span",{class:"tag-is-success"},"Hash Table"),(0,l.kt)("span",{class:"tag-is-success"},"Sorting"),(0,l.kt)("span",{class:"tag-is-success"},"Counting"),(0,l.kt)("h3",{id:"inputs-1185"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-1185"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-1185"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-1185"},"Further Readings"),(0,l.kt)("h2",{id:"maximum-candies-allocated-to-k-children"},"Maximum Candies Allocated to K Children"),(0,l.kt)("span",{class:"tag-is-success"},"Array"),(0,l.kt)("span",{class:"tag-is-success"},"Binary Search"),(0,l.kt)("h3",{id:"inputs-1186"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-1186"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-1186"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-1186"},"Further Readings"),(0,l.kt)("h2",{id:"users-with-two-purchases-within-seven-days"},"Users With Two Purchases Within Seven Days"),(0,l.kt)("span",{class:"tag-is-success"},"Database"),(0,l.kt)("h3",{id:"inputs-1187"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-1187"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-1187"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-1187"},"Further Readings"),(0,l.kt)("h2",{id:"minimize-result-by-adding-parentheses-to-expression"},"Minimize Result by Adding Parentheses to Expression"),(0,l.kt)("span",{class:"tag-is-success"},"String"),(0,l.kt)("span",{class:"tag-is-success"},"Enumeration"),(0,l.kt)("h3",{id:"inputs-1188"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-1188"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-1188"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-1188"},"Further Readings"),(0,l.kt)("h2",{id:"maximum-product-after-k-increments"},"Maximum Product After K Increments"),(0,l.kt)("span",{class:"tag-is-success"},"Array"),(0,l.kt)("span",{class:"tag-is-success"},"Greedy"),(0,l.kt)("span",{class:"tag-is-success"},"Heap (Priority Queue)"),(0,l.kt)("h3",{id:"inputs-1189"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-1189"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-1189"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-1189"},"Further Readings"),(0,l.kt)("h2",{id:"count-positions-on-street-with-required-brightness"},"Count Positions on Street With Required Brightness"),(0,l.kt)("span",{class:"tag-is-success"},"Array"),(0,l.kt)("span",{class:"tag-is-success"},"Prefix Sum"),(0,l.kt)("h3",{id:"inputs-1190"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-1190"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-1190"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-1190"},"Further Readings"),(0,l.kt)("h2",{id:"number-of-times-a-driver-was-a-passenger"},"Number of Times a Driver Was a Passenger"),(0,l.kt)("span",{class:"tag-is-success"},"Database"),(0,l.kt)("h3",{id:"inputs-1191"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-1191"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-1191"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-1191"},"Further Readings"),(0,l.kt)("h2",{id:"number-of-ways-to-buy-pens-and-pencils"},"Number of Ways to Buy Pens and Pencils"),(0,l.kt)("span",{class:"tag-is-success"},"Math"),(0,l.kt)("span",{class:"tag-is-success"},"Enumeration"),(0,l.kt)("h3",{id:"inputs-1192"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-1192"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-1192"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-1192"},"Further Readings"),(0,l.kt)("h2",{id:"design-an-atm-machine"},"Design an ATM Machine"),(0,l.kt)("span",{class:"tag-is-success"},"Array"),(0,l.kt)("span",{class:"tag-is-success"},"Greedy"),(0,l.kt)("span",{class:"tag-is-success"},"Design"),(0,l.kt)("h3",{id:"inputs-1193"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-1193"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-1193"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-1193"},"Further Readings"),(0,l.kt)("h2",{id:"minimum-rounds-to-complete-all-tasks"},"Minimum Rounds to Complete All Tasks"),(0,l.kt)("span",{class:"tag-is-success"},"Array"),(0,l.kt)("span",{class:"tag-is-success"},"Hash Table"),(0,l.kt)("span",{class:"tag-is-success"},"Greedy"),(0,l.kt)("span",{class:"tag-is-success"},"Counting"),(0,l.kt)("h3",{id:"inputs-1194"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-1194"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-1194"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-1194"},"Further Readings"),(0,l.kt)("h2",{id:"maximum-trailing-zeros-in-a-cornered-path"},"Maximum Trailing Zeros in a Cornered Path"),(0,l.kt)("span",{class:"tag-is-success"},"Array"),(0,l.kt)("span",{class:"tag-is-success"},"Matrix"),(0,l.kt)("span",{class:"tag-is-success"},"Prefix Sum"),(0,l.kt)("h3",{id:"inputs-1195"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-1195"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-1195"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-1195"},"Further Readings"),(0,l.kt)("h2",{id:"count-lattice-points-inside-a-circle"},"Count Lattice Points Inside a Circle"),(0,l.kt)("span",{class:"tag-is-success"},"Array"),(0,l.kt)("span",{class:"tag-is-success"},"Hash Table"),(0,l.kt)("span",{class:"tag-is-success"},"Math"),(0,l.kt)("span",{class:"tag-is-success"},"Geometry"),(0,l.kt)("span",{class:"tag-is-success"},"Enumeration"),(0,l.kt)("h3",{id:"inputs-1196"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-1196"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-1196"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-1196"},"Further Readings"),(0,l.kt)("h2",{id:"count-number-of-rectangles-containing-each-point"},"Count Number of Rectangles Containing Each Point"),(0,l.kt)("span",{class:"tag-is-success"},"Array"),(0,l.kt)("span",{class:"tag-is-success"},"Binary Search"),(0,l.kt)("span",{class:"tag-is-success"},"Binary Indexed Tree"),(0,l.kt)("span",{class:"tag-is-success"},"Sorting"),(0,l.kt)("h3",{id:"inputs-1197"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-1197"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-1197"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-1197"},"Further Readings"),(0,l.kt)("h2",{id:"minimum-average-difference"},"Minimum Average Difference"),(0,l.kt)("span",{class:"tag-is-success"},"Array"),(0,l.kt)("span",{class:"tag-is-success"},"Prefix Sum"),(0,l.kt)("h3",{id:"inputs-1198"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-1198"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-1198"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-1198"},"Further Readings"),(0,l.kt)("h2",{id:"count-unguarded-cells-in-the-grid"},"Count Unguarded Cells in the Grid"),(0,l.kt)("span",{class:"tag-is-success"},"Array"),(0,l.kt)("span",{class:"tag-is-success"},"Matrix"),(0,l.kt)("span",{class:"tag-is-success"},"Simulation"),(0,l.kt)("h3",{id:"inputs-1199"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-1199"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-1199"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-1199"},"Further Readings"),(0,l.kt)("h2",{id:"minimum-consecutive-cards-to-pick-up"},"Minimum Consecutive Cards to Pick Up"),(0,l.kt)("span",{class:"tag-is-success"},"Array"),(0,l.kt)("span",{class:"tag-is-success"},"Hash Table"),(0,l.kt)("span",{class:"tag-is-success"},"Sliding Window"),(0,l.kt)("h3",{id:"inputs-1200"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-1200"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-1200"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-1200"},"Further Readings"),(0,l.kt)("h2",{id:"k-divisible-elements-subarrays"},"K Divisible Elements Subarrays"),(0,l.kt)("span",{class:"tag-is-success"},"Array"),(0,l.kt)("span",{class:"tag-is-success"},"Hash Table"),(0,l.kt)("span",{class:"tag-is-success"},"Trie"),(0,l.kt)("span",{class:"tag-is-success"},"Rolling Hash"),(0,l.kt)("span",{class:"tag-is-success"},"Hash Function"),(0,l.kt)("span",{class:"tag-is-success"},"Enumeration"),(0,l.kt)("h3",{id:"inputs-1201"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-1201"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-1201"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-1201"},"Further Readings"),(0,l.kt)("h2",{id:"count-nodes-equal-to-average-of-subtree"},"Count Nodes Equal to Average of Subtree"),(0,l.kt)("span",{class:"tag-is-success"},"Tree"),(0,l.kt)("span",{class:"tag-is-success"},"Depth-First Search"),(0,l.kt)("span",{class:"tag-is-success"},"Binary Tree"),(0,l.kt)("h3",{id:"inputs-1202"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-1202"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-1202"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-1202"},"Further Readings"),(0,l.kt)("h2",{id:"count-number-of-texts"},"Count Number of Texts"),(0,l.kt)("span",{class:"tag-is-success"},"Hash Table"),(0,l.kt)("span",{class:"tag-is-success"},"Math"),(0,l.kt)("span",{class:"tag-is-success"},"String"),(0,l.kt)("span",{class:"tag-is-success"},"Dynamic Programming"),(0,l.kt)("h3",{id:"inputs-1203"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-1203"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-1203"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-1203"},"Further Readings"),(0,l.kt)("h2",{id:"minimum-number-of-keypresses"},"Minimum Number of Keypresses"),(0,l.kt)("span",{class:"tag-is-success"},"Array"),(0,l.kt)("span",{class:"tag-is-success"},"String"),(0,l.kt)("span",{class:"tag-is-success"},"Greedy"),(0,l.kt)("span",{class:"tag-is-success"},"Sorting"),(0,l.kt)("span",{class:"tag-is-success"},"Counting"),(0,l.kt)("h3",{id:"inputs-1204"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-1204"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-1204"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-1204"},"Further Readings"),(0,l.kt)("h2",{id:"number-of-ways-to-split-array"},"Number of Ways to Split Array"),(0,l.kt)("span",{class:"tag-is-success"},"Array"),(0,l.kt)("span",{class:"tag-is-success"},"Prefix Sum"),(0,l.kt)("h3",{id:"inputs-1205"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-1205"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-1205"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-1205"},"Further Readings"),(0,l.kt)("h2",{id:"maximum-white-tiles-covered-by-a-carpet"},"Maximum White Tiles Covered by a Carpet"),(0,l.kt)("span",{class:"tag-is-success"},"Array"),(0,l.kt)("span",{class:"tag-is-success"},"Binary Search"),(0,l.kt)("span",{class:"tag-is-success"},"Greedy"),(0,l.kt)("span",{class:"tag-is-success"},"Sorting"),(0,l.kt)("span",{class:"tag-is-success"},"Prefix Sum"),(0,l.kt)("h3",{id:"inputs-1206"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-1206"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-1206"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-1206"},"Further Readings"),(0,l.kt)("h2",{id:"maximum-consecutive-floors-without-special-floors"},"Maximum Consecutive Floors Without Special Floors"),(0,l.kt)("span",{class:"tag-is-success"},"Array"),(0,l.kt)("span",{class:"tag-is-success"},"Sorting"),(0,l.kt)("h3",{id:"inputs-1207"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-1207"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-1207"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-1207"},"Further Readings"),(0,l.kt)("h2",{id:"largest-combination-with-bitwise-and-greater-than-zero"},"Largest Combination With Bitwise AND Greater Than Zero"),(0,l.kt)("span",{class:"tag-is-success"},"Array"),(0,l.kt)("span",{class:"tag-is-success"},"Hash Table"),(0,l.kt)("span",{class:"tag-is-success"},"Bit Manipulation"),(0,l.kt)("span",{class:"tag-is-success"},"Counting"),(0,l.kt)("h3",{id:"inputs-1208"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-1208"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-1208"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-1208"},"Further Readings"),(0,l.kt)("h2",{id:"maximum-bags-with-full-capacity-of-rocks"},"Maximum Bags With Full Capacity of Rocks"),(0,l.kt)("span",{class:"tag-is-success"},"Array"),(0,l.kt)("span",{class:"tag-is-success"},"Greedy"),(0,l.kt)("span",{class:"tag-is-success"},"Sorting"),(0,l.kt)("h3",{id:"inputs-1209"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-1209"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-1209"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-1209"},"Further Readings"),(0,l.kt)("h2",{id:"minimum-lines-to-represent-a-line-chart"},"Minimum Lines to Represent a Line Chart"),(0,l.kt)("span",{class:"tag-is-success"},"Array"),(0,l.kt)("span",{class:"tag-is-success"},"Math"),(0,l.kt)("span",{class:"tag-is-success"},"Geometry"),(0,l.kt)("span",{class:"tag-is-success"},"Sorting"),(0,l.kt)("span",{class:"tag-is-success"},"Number Theory"),(0,l.kt)("h3",{id:"inputs-1210"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-1210"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-1210"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-1210"},"Further Readings"),(0,l.kt)("h2",{id:"number-of-people-that-can-be-seen-in-a-grid"},"Number of People That Can Be Seen in a Grid"),(0,l.kt)("span",{class:"tag-is-success"},"Array"),(0,l.kt)("span",{class:"tag-is-success"},"Stack"),(0,l.kt)("span",{class:"tag-is-success"},"Matrix"),(0,l.kt)("span",{class:"tag-is-success"},"Monotonic Stack"),(0,l.kt)("h3",{id:"inputs-1211"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-1211"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-1211"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-1211"},"Further Readings"),(0,l.kt)("h2",{id:"sender-with-largest-word-count"},"Sender With Largest Word Count"),(0,l.kt)("span",{class:"tag-is-success"},"Array"),(0,l.kt)("span",{class:"tag-is-success"},"Hash Table"),(0,l.kt)("span",{class:"tag-is-success"},"String"),(0,l.kt)("span",{class:"tag-is-success"},"Counting"),(0,l.kt)("h3",{id:"inputs-1212"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-1212"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-1212"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-1212"},"Further Readings"),(0,l.kt)("h2",{id:"maximum-total-importance-of-roads"},"Maximum Total Importance of Roads"),(0,l.kt)("span",{class:"tag-is-success"},"Greedy"),(0,l.kt)("span",{class:"tag-is-success"},"Graph"),(0,l.kt)("span",{class:"tag-is-success"},"Sorting"),(0,l.kt)("span",{class:"tag-is-success"},"Heap (Priority Queue)"),(0,l.kt)("h3",{id:"inputs-1213"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-1213"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-1213"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-1213"},"Further Readings"),(0,l.kt)("h2",{id:"apply-discount-to-prices"},"Apply Discount to Prices"),(0,l.kt)("span",{class:"tag-is-success"},"String"),(0,l.kt)("h3",{id:"inputs-1214"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-1214"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-1214"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-1214"},"Further Readings"),(0,l.kt)("h2",{id:"steps-to-make-array-non-decreasing"},"Steps to Make Array Non-decreasing"),(0,l.kt)("span",{class:"tag-is-success"},"Array"),(0,l.kt)("span",{class:"tag-is-success"},"Linked List"),(0,l.kt)("span",{class:"tag-is-success"},"Stack"),(0,l.kt)("span",{class:"tag-is-success"},"Monotonic Stack"),(0,l.kt)("h3",{id:"inputs-1215"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-1215"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-1215"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-1215"},"Further Readings"),(0,l.kt)("h2",{id:"maximum-profit-from-trading-stocks"},"Maximum Profit From Trading Stocks"),(0,l.kt)("span",{class:"tag-is-success"},"Array"),(0,l.kt)("span",{class:"tag-is-success"},"Dynamic Programming"),(0,l.kt)("h3",{id:"inputs-1216"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-1216"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-1216"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-1216"},"Further Readings"),(0,l.kt)("h2",{id:"products-with-three-or-more-orders-in-two-consecutive-years"},"Products With Three or More Orders in Two Consecutive Years"),(0,l.kt)("span",{class:"tag-is-success"},"Database"),(0,l.kt)("h3",{id:"inputs-1217"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-1217"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-1217"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-1217"},"Further Readings"),(0,l.kt)("h2",{id:"partition-array-such-that-maximum-difference-is-k"},"Partition Array Such That Maximum Difference Is K"),(0,l.kt)("span",{class:"tag-is-success"},"Array"),(0,l.kt)("span",{class:"tag-is-success"},"Greedy"),(0,l.kt)("span",{class:"tag-is-success"},"Sorting"),(0,l.kt)("h3",{id:"inputs-1218"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-1218"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-1218"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-1218"},"Further Readings"),(0,l.kt)("h2",{id:"replace-elements-in-an-array"},"Replace Elements in an Array"),(0,l.kt)("span",{class:"tag-is-success"},"Array"),(0,l.kt)("span",{class:"tag-is-success"},"Hash Table"),(0,l.kt)("span",{class:"tag-is-success"},"Simulation"),(0,l.kt)("h3",{id:"inputs-1219"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-1219"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-1219"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-1219"},"Further Readings"),(0,l.kt)("h2",{id:"jump-game-ix"},"Jump Game IX"),(0,l.kt)("h3",{id:"inputs-1220"},"Inputs"),(0,l.kt)("h3",{id:"sub-problems-1220"},"Sub-problems"),(0,l.kt)("h3",{id:"edge-cases-1220"},"Edge Cases"),(0,l.kt)("h3",{id:"further-readings-1220"},"Further Readings"))}h.isMDXComponent=!0}}]);