(window.webpackJsonp=window.webpackJsonp||[]).push([[71],{210:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return i})),n.d(t,"metadata",(function(){return l})),n.d(t,"rightToc",(function(){return s})),n.d(t,"default",(function(){return b}));var r=n(1),a=n(9),o=(n(0),n(231)),i={title:"Responsive design (CSS)",description:"Making your site look good on any device and screen",last_modified:new Date("2020-05-30T13:54:15.000Z"),sidebar_label:"Responsive design"},l={id:"web/css/responsive-design",title:"Responsive design (CSS)",description:"Making your site look good on any device and screen",source:"@site/docs\\web\\css\\responsive-design.md",permalink:"/interview-prep/web/css/responsive-design",sidebar_label:"Responsive design",sidebar:"docs",previous:{title:"Positioning (CSS)",permalink:"/interview-prep/web/css/positioning"},next:{title:"Sass/SCSS",permalink:"/interview-prep/web/css/sass-scss"}},s=[{value:"Basic idea",id:"basic-idea",children:[]},{value:"Viewport meta tag",id:"viewport-meta-tag",children:[]},{value:"Media queries",id:"media-queries",children:[]},{value:"Flexbox and Grids",id:"flexbox-and-grids",children:[]},{value:"Testing your design",id:"testing-your-design",children:[]},{value:"Resources",id:"resources",children:[]}],c={rightToc:s};function b(e){var t=e.components,n=Object(a.a)(e,["components"]);return Object(o.b)("wrapper",Object(r.a)({},c,n,{components:t,mdxType:"MDXLayout"}),Object(o.b)("p",null,"Making your site look good on any device and screen"),Object(o.b)("h2",{id:"basic-idea"},"Basic idea"),Object(o.b)("ul",null,Object(o.b)("li",{parentName:"ul"},"Goal: make your website look good on any device"),Object(o.b)("li",{parentName:"ul"},"Important tools:",Object(o.b)("ul",{parentName:"li"},Object(o.b)("li",{parentName:"ul"},"Viewport meta tag"),Object(o.b)("li",{parentName:"ul"},"Media queries")))),Object(o.b)("h2",{id:"viewport-meta-tag"},"Viewport meta tag"),Object(o.b)("ul",null,Object(o.b)("li",{parentName:"ul"},'Converts between "hardware pixels" and "software pixels", helping you support screens with different pixel densities',Object(o.b)("ul",{parentName:"li"},Object(o.b)("li",{parentName:"ul"},"On a small screen with huge pixel density, you still don't want your website to for example fill only a part of the screen or show tiny text"),Object(o.b)("li",{parentName:"ul"},"If used correctly, a small screen with huge pixel density will appear to your CSS rules as a screen with small dimensions in terms of pixels"),Object(o.b)("li",{parentName:"ul"},"See also ",Object(o.b)("a",{href:"https://www.mydevice.io/#compare-devices",target:"_blank",rel:"nofollow noopener noreferrer"},"mydevice.io ",Object(o.b)("svg",{class:"embedded-fa-icon"},Object(o.b)("use",{href:"#external-link-alt"})))))),Object(o.b)("li",{parentName:"ul"},"Doesn't change actual design, just makes sure you have sensible width and height values to base your design on")),Object(o.b)("p",null,"Example (common, recommended version of the tag):"),Object(o.b)("pre",null,Object(o.b)("code",Object(r.a)({parentName:"pre"},{className:"language-html"}),'<meta name="viewport" content="width=device-width,initial-scale=1">\n')),Object(o.b)("h2",{id:"media-queries"},"Media queries"),Object(o.b)("ul",null,Object(o.b)("li",{parentName:"ul"},"Allow changing design based on viewport width/height"),Object(o.b)("li",{parentName:"ul"},"Have to define design changes yourself based on detected width/height"),Object(o.b)("li",{parentName:"ul"},"Widely used in CSS framworks like ",Object(o.b)("a",{href:"https://getbootstrap.com/docs/4.0/layout/grid/",target:"_blank",rel:"nofollow noopener noreferrer"},"Bootstrap ",Object(o.b)("svg",{class:"embedded-fa-icon"},Object(o.b)("use",{href:"#external-link-alt"}))))),Object(o.b)("p",null,"Example:"),Object(o.b)("pre",null,Object(o.b)("code",Object(r.a)({parentName:"pre"},{className:"language-css"}),"@media screen and (min-width: 800px) { \n  .container { \n    margin: 1em 2em; \n  } \n} \n")),Object(o.b)("p",null,"Common approach: ",Object(o.b)("strong",{parentName:"p"},"mobile-first design")),Object(o.b)("ul",null,Object(o.b)("li",{parentName:"ul"},"First create a design that looks good on narrow-screen devices"),Object(o.b)("li",{parentName:"ul"},"Then use media queries to change the layout on larger screens so it looks better or makes better use of the available screen space")),Object(o.b)("h2",{id:"flexbox-and-grids"},"Flexbox and Grids"),Object(o.b)("p",null,"In general, ",Object(o.b)("a",Object(r.a)({parentName:"p"},{href:"/web/css/flexbox"}),"Flexbox")," and ",Object(o.b)("a",Object(r.a)({parentName:"p"},{href:"/web/css/grids"}),"Grids")," are good tools for building pages that scale with the viewport size"),Object(o.b)("h2",{id:"testing-your-design"},"Testing your design"),Object(o.b)("p",null,"Useful tool: Chrome DevTools Device Mode"),Object(o.b)("p",null,"See ",Object(o.b)("a",{href:"https://developers.google.com/web/tools/chrome-devtools/device-mode",target:"_blank",rel:"nofollow noopener noreferrer"},"Simulate Mobile Devices with Device Mode in Chrome DevTools ",Object(o.b)("svg",{class:"embedded-fa-icon"},Object(o.b)("use",{href:"#external-link-alt"})))),Object(o.b)("h2",{id:"resources"},"Resources"),Object(o.b)("ul",null,Object(o.b)("li",{parentName:"ul"},Object(o.b)("a",{href:"https://www.udemy.com/course/css-the-complete-guide-incl-flexbox-grid-sass/",target:"_blank",rel:"nofollow noopener noreferrer"},"CSS - The Complete Guide 2020 (incl. Flexbox, Grid & Sass) ",Object(o.b)("svg",{class:"embedded-fa-icon"},Object(o.b)("use",{href:"#external-link-alt"})))),Object(o.b)("li",{parentName:"ul"},Object(o.b)("a",{href:"https://developer.mozilla.org/en-US/docs/Learn/CSS/CSS_layout/Responsive_Design",target:"_blank",rel:"nofollow noopener noreferrer"},"Responsive design ",Object(o.b)("svg",{class:"embedded-fa-icon"},Object(o.b)("use",{href:"#external-link-alt"}))))))}b.isMDXComponent=!0},231:function(e,t,n){"use strict";n.d(t,"a",(function(){return d})),n.d(t,"b",(function(){return m}));var r=n(0),a=n.n(r);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var c=a.a.createContext({}),b=function(e){var t=a.a.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):l({},t,{},e)),n},d=function(e){var t=b(e.components);return a.a.createElement(c.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return a.a.createElement(a.a.Fragment,{},t)}},u=Object(r.forwardRef)((function(e,t){var n=e.components,r=e.mdxType,o=e.originalType,i=e.parentName,c=s(e,["components","mdxType","originalType","parentName"]),d=b(n),u=r,m=d["".concat(i,".").concat(u)]||d[u]||p[u]||o;return n?a.a.createElement(m,l({ref:t},c,{components:n})):a.a.createElement(m,l({ref:t},c))}));function m(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=n.length,i=new Array(o);i[0]=u;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l.mdxType="string"==typeof e?e:r,i[1]=l;for(var c=2;c<o;c++)i[c]=n[c];return a.a.createElement.apply(null,i)}return a.a.createElement.apply(null,n)}u.displayName="MDXCreateElement"}}]);