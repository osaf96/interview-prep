(window.webpackJsonp=window.webpackJsonp||[]).push([[86],{225:function(e,n,t){"use strict";t.r(n),t.d(n,"frontMatter",(function(){return i})),t.d(n,"metadata",(function(){return p})),t.d(n,"rightToc",(function(){return c})),t.d(n,"default",(function(){return u}));var r=t(1),a=t(9),s=(t(0),t(231)),i={title:"Type guards (TypeScript)",description:"An overview of how to use TypeScript type guards, including creating your own custom ones",last_modified:new Date("2020-10-17T18:41:29.849Z"),sidebar_label:"Type guards"},p={id:"javascript/typescript/type-guards",title:"Type guards (TypeScript)",description:"An overview of how to use TypeScript type guards, including creating your own custom ones",source:"@site/docs\\javascript\\typescript\\type-guards.md",permalink:"/interview-prep/javascript/typescript/type-guards",sidebar_label:"Type guards",sidebar:"docs",previous:{title:"Runtime type checking in TypeScript",permalink:"/interview-prep/javascript/typescript/runtime-type-checking"},next:{title:"Ask the dumb questions",permalink:"/interview-prep/mindset/ask-dumb-questions"}},c=[{value:"Basic idea",id:"basic-idea",children:[]},{value:"Built-in type guards",id:"built-in-type-guards",children:[{value:"<code>typeof</code> type guards",id:"typeof-type-guards",children:[]},{value:"<code>instanceof</code> type guards",id:"instanceof-type-guards",children:[]},{value:"Type guards based on common property",id:"type-guards-based-on-common-property",children:[]},{value:"Type guards based on available properties",id:"type-guards-based-on-available-properties",children:[]}]},{value:"User-defined type guards",id:"user-defined-type-guards",children:[]},{value:"Resources",id:"resources",children:[]}],o={rightToc:c};function u(e){var n=e.components,t=Object(a.a)(e,["components"]);return Object(s.b)("wrapper",Object(r.a)({},o,t,{components:n,mdxType:"MDXLayout"}),Object(s.b)("p",null,"An overview of how to use TypeScript type guards, including creating your own custom ones"),Object(s.b)("h2",{id:"basic-idea"},"Basic idea"),Object(s.b)("ul",null,Object(s.b)("li",{parentName:"ul"},"Test, at runtime, whether a certain value is of a certain type"),Object(s.b)("li",{parentName:"ul"},"TypeScript compiler can use this information to make better assumptions")),Object(s.b)("h2",{id:"built-in-type-guards"},"Built-in type guards"),Object(s.b)("h3",{id:"typeof-type-guards"},Object(s.b)("inlineCode",{parentName:"h3"},"typeof")," type guards"),Object(s.b)("pre",null,Object(s.b)("code",Object(r.a)({parentName:"pre"},{className:"language-typescript"}),'function test(input: string | string[]) {\n    input.split(""); // compiler error\n    input.filter(() => true); // compiler error\n\n    if (typeof input === "string") {\n        // input has type string here\n        return input.split("");\n    } else {\n        // input has type string[] here\n        return input.filter(() => true);\n    }\n}\n')),Object(s.b)("h3",{id:"instanceof-type-guards"},Object(s.b)("inlineCode",{parentName:"h3"},"instanceof")," type guards"),Object(s.b)("pre",null,Object(s.b)("code",Object(r.a)({parentName:"pre"},{className:"language-typescript"}),"class ClassA {\n    methodA() {\n        return true;\n    }\n}\n\nclass ClassB {\n    methodB() {\n        return true;\n    }\n}\n\nfunction test(instance: ClassA | ClassB) {\n    instance.methodA(); // compiler error\n    instance.methodB(); // compiler error\n\n    if (instance instanceof ClassA) {\n        // instance has type ClassA here\n        instance.methodA();\n    } else {\n        // instance has type ClassB here\n        instance.methodB();\n    }\n}\n")),Object(s.b)("h3",{id:"type-guards-based-on-common-property"},"Type guards based on common property"),Object(s.b)("p",null,"Can be used to implement ",Object(s.b)("em",{parentName:"p"},"Discriminating Unions")," (see ",Object(s.b)("a",{href:"https://www.typescriptlang.org/docs/handbook/unions-and-intersections.html#discriminating-unions",target:"_blank",rel:"nofollow noopener noreferrer"},"Discriminating Unions ",Object(s.b)("svg",{class:"embedded-fa-icon"},Object(s.b)("use",{href:"#external-link-alt"}))),"):"),Object(s.b)("ul",null,Object(s.b)("li",{parentName:"ul"},"Types with common property indicating type"),Object(s.b)("li",{parentName:"ul"},"A type alias that is the union of these types"),Object(s.b)("li",{parentName:"ul"},"Type guards on the common property")),Object(s.b)("p",null,"Example:"),Object(s.b)("pre",null,Object(s.b)("code",Object(r.a)({parentName:"pre"},{className:"language-typescript"}),'interface Square {\n    kind: "square";\n    size: number;\n}\n\ninterface Rectangle {\n    kind: "rectangle";\n    width: number;\n    height: number;\n}\n\ninterface Circle {\n    kind: "circle";\n    radius: number;\n}\n\ntype Shape = Square | Rectangle | Circle;\n\nfunction area(shape: Shape) {\n    switch (shape.kind) {\n        case "square":\n            // shape has type Square here\n            return shape.size * shape.size;\n        case "rectangle":\n            // shape has type Rectangle here\n            return shape.height * shape.width;\n        case "circle":\n            // shape has type Circle here\n            return Math.PI * shape.radius ** 2;\n    }\n}\n')),Object(s.b)("p",null,"TypeScript recognizes that the common property ",Object(s.b)("inlineCode",{parentName:"p"},"kind")," determines the type here"),Object(s.b)("p",null,"Also works with regular if-statements:"),Object(s.b)("pre",null,Object(s.b)("code",Object(r.a)({parentName:"pre"},{className:"language-typescript"}),'function test(shape: Shape) {\n    if (shape.kind === "rectangle") {\n        // shape has type Rectangle here\n        console.log(shape.height);\n    }\n}\n')),Object(s.b)("h3",{id:"type-guards-based-on-available-properties"},"Type guards based on available properties"),Object(s.b)("p",null,"Example code (uses the interfaces from the above example):"),Object(s.b)("pre",null,Object(s.b)("code",Object(r.a)({parentName:"pre"},{className:"language-typescript"}),'function test(shape: Shape) {\n    if ("radius" in shape) {\n        // shape has type Circle here\n    }\n}\n')),Object(s.b)("h2",{id:"user-defined-type-guards"},"User-defined type guards"),Object(s.b)("p",null,"You can also define your own type guards that perform the type check at runtime by looking at certain properties of the object you receive"),Object(s.b)("pre",null,Object(s.b)("code",Object(r.a)({parentName:"pre"},{className:"language-typescript"}),'interface Message {\n    messageType: string;\n}\n\ninterface UserMessage extends Message {\n    messageType: "user";\n    userId: number;\n}\n\ninterface OrderMessage extends Message {\n    messageType: "order";\n    orderId: number;\n}\n\nfunction isMessage(arg: any): arg is Message {\n    return typeof arg.messageType === "string";\n}\n\nfunction isUserMessage(arg: Message): arg is UserMessage {\n    return arg.messageType === "user";\n}\n\nfunction isOrderMessage(arg: Message): arg is OrderMessage {\n    return arg.messageType === "order";\n}\n\nfunction test(input: object) {\n    console.log(input.messageType); // compiler error\n\n    if (isMessage(input)) {\n        // input has type Message here\n\n        console.log(input.messageType);\n        console.log(input.userId); // compiler error\n        console.log(input.orderId); // compiler error\n\n        if (isUserMessage(input)) {\n            // input has type UserMessage here\n            console.log(input.userId);\n        } else if (isOrderMessage(input)) {            \n            // input has type OrderMessage here\n            console.log(input.orderId);\n        }\n    }\n}\n')),Object(s.b)("h2",{id:"resources"},"Resources"),Object(s.b)("ul",null,Object(s.b)("li",{parentName:"ul"},Object(s.b)("a",{href:"https://www.typescriptlang.org/docs/handbook/advanced-types.html",target:"_blank",rel:"nofollow noopener noreferrer"},"Advanced Types ",Object(s.b)("svg",{class:"embedded-fa-icon"},Object(s.b)("use",{href:"#external-link-alt"})))),Object(s.b)("li",{parentName:"ul"},Object(s.b)("a",{href:"https://www.typescriptlang.org/docs/handbook/unions-and-intersections.html",target:"_blank",rel:"nofollow noopener noreferrer"},"Unions and Intersection Types ",Object(s.b)("svg",{class:"embedded-fa-icon"},Object(s.b)("use",{href:"#external-link-alt"}))))))}u.isMDXComponent=!0},231:function(e,n,t){"use strict";t.d(n,"a",(function(){return l})),t.d(n,"b",(function(){return g}));var r=t(0),a=t.n(r);function s(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function i(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function p(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?i(Object(t),!0).forEach((function(n){s(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):i(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function c(e,n){if(null==e)return{};var t,r,a=function(e,n){if(null==e)return{};var t,r,a={},s=Object.keys(e);for(r=0;r<s.length;r++)t=s[r],n.indexOf(t)>=0||(a[t]=e[t]);return a}(e,n);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(r=0;r<s.length;r++)t=s[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var o=a.a.createContext({}),u=function(e){var n=a.a.useContext(o),t=n;return e&&(t="function"==typeof e?e(n):p({},n,{},e)),t},l=function(e){var n=u(e.components);return a.a.createElement(o.Provider,{value:n},e.children)},d={inlineCode:"code",wrapper:function(e){var n=e.children;return a.a.createElement(a.a.Fragment,{},n)}},b=Object(r.forwardRef)((function(e,n){var t=e.components,r=e.mdxType,s=e.originalType,i=e.parentName,o=c(e,["components","mdxType","originalType","parentName"]),l=u(t),b=r,g=l["".concat(i,".").concat(b)]||l[b]||d[b]||s;return t?a.a.createElement(g,p({ref:n},o,{components:t})):a.a.createElement(g,p({ref:n},o))}));function g(e,n){var t=arguments,r=n&&n.mdxType;if("string"==typeof e||r){var s=t.length,i=new Array(s);i[0]=b;var p={};for(var c in n)hasOwnProperty.call(n,c)&&(p[c]=n[c]);p.originalType=e,p.mdxType="string"==typeof e?e:r,i[1]=p;for(var o=2;o<s;o++)i[o]=t[o];return a.a.createElement.apply(null,i)}return a.a.createElement.apply(null,t)}b.displayName="MDXCreateElement"}}]);